//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_SequenceResultActionResult", "SequenceResults", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.SequenceResult), "ActionResults", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.ActionResult), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_AlertsComputers", "Computers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Server.Computer), "Alerts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.Alert), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_Notification_inherits_Alert", "Alerts", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.Alert), "Alerts_Notification", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Server.Alerts_Notification), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_Request_inherits_Alert", "Alerts", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.Alert), "Alerts_Request", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Server.Alerts_Request), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_RequestRequestAnswer", "Alerts_Request", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.Alerts_Request), "RequestAnswers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.RequestAnswer), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_RequestRequestAnswerResult", "Alerts_Request", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.Alerts_Request), "RequestAnswerResults", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.RequestAnswerResult), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_RequestRequestOption", "Alerts_Request", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.Alerts_Request), "RequestOptions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.RequestOption), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_AvLogRawDataComputer", "Computers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.Computer), "AvLogRawDataSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.AvLogRawDataSet), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_AvLogReportDataReport", "Reports", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.Report), "AvLogReportDataSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.AvLogReportDataSet), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_AvUpdatesRawDataComputer", "Computers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.Computer), "AvUpdatesRawDataSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.AvUpdatesRawDataSet), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_ReportAvUpdatesReportData", "Reports", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.Report), "AvUpdatesReportDataSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.AvUpdatesReportDataSet), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_CisConfigRawDataComputer", "Computers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.Computer), "CisConfigRawDataSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.CisConfigRawDataSet), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_CisConfigReportDataReport", "Reports", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.Report), "CisConfigReportDataSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.CisConfigReportDataSet), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_ComputerDetailsRawDataComputer", "Computers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.Computer), "ComputerDetailsRawDataSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.ComputerDetailsRawDataSet), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_InstalledSoftwareReportDataComputerDetailsReportData", "ComputerDetailsReportDataSet", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.ComputerDetailsReportDataSet), "InstalledSoftwareReportDataSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.InstalledSoftwareReportDataSet), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_ReportComputerDetailsReportData", "Reports", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.Report), "ComputerDetailsReportDataSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.ComputerDetailsReportDataSet), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_ComputerGroupComputer", "ComputerGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Server.ComputerGroup), "Computers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.Computer), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_InternetPolicyComputerGroup", "Policies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.Policy), "ComputerGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.ComputerGroup), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_LocalPolicyComputerGroup", "Policies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.Policy), "ComputerGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.ComputerGroup), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_ComputerProductConnection", "Computers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.Computer), "ProductConnections", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.ProductConnection), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_ComputerSequenceResult", "Computers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.Computer), "SequenceResults", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.SequenceResult), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_DefensePlusLogRawDataComputer", "Computers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.Computer), "DefensePlusLogRawDataSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.DefensePlusLogRawDataSet), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_DiscoveryDataComputers", "Computers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.Computer), "DiscoveryDataSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.DiscoveryDataSet), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_FirewallLogRawDataComputer", "Computers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.Computer), "FirewallLogRawDataSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.FirewallLogRawDataSet), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_InfectedItemRawDataComputer", "Computers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.Computer), "InfectedItemRawDataSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.InfectedItemRawDataSet), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_InstalledSoftwareRawDataComputer", "Computers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.Computer), "InstalledSoftwareRawDataSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.InstalledSoftwareRawDataSet), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_InternetPolicyComputer", "Policies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.Policy), "Computers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.Computer), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_LocalPolicyComputer", "Policies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.Policy), "Computers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.Computer), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_PolicyDeltaRawDataComputer", "Computers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.Computer), "PolicyDeltaRawDataSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.PolicyDeltaRawDataSet), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_QuarantineItemRawDataComputer", "Computers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.Computer), "QuarantineItemRawDataSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.QuarantineItemRawDataSet), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_DefensePlusLogReportDataReport", "Reports", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.Report), "DefensePlusLogReportDataSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.DefensePlusLogReportDataSet), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_FirewallLogReportDataReport", "Reports", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.Report), "FirewallLogReportDataSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.FirewallLogReportDataSet), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_InfectedItemReportDataReport", "Reports", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.Report), "InfectedItemReportDataSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.InfectedItemReportDataSet), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_LicenseLicensedProduct", "Licenses", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.License), "LicensedProducts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.LicensedProduct), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_MalwareStatisticsReportDataReport", "Reports", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.Report), "MalwareStatisticsReportDataSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.MalwareStatisticsReportDataSet), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_PolicyPolicyProductInfo", "Policies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.Policy), "PolicyProductInfoes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.PolicyProductInfo), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_PolicyProductInfoPolicyComponentInfo", "PolicyProductInfoes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.PolicyProductInfo), "PolicyComponentInfoes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.PolicyComponentInfo), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_PolicyDeltaReportDataReport", "Reports", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.Report), "PolicyDeltaReportDataSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.PolicyDeltaReportDataSet), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_ReportPolicyStatusReportData", "Reports", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.Report), "PolicyStatusReportDataSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.PolicyStatusReportDataSet), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_QuarantineItemReportDataReport", "Reports", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.Report), "QuarantineItemReportDataSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.QuarantineItemReportDataSet), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_ReportReportParameter", "Reports", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.Report), "ReportParameters", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Server.ReportParameter), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_ReportReportTarget", "Reports", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.Report), "ReportTargets", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.ReportTarget), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_ReportTypeReport", "ReportTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.ReportType), "Reports", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.Report), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_TopTenMalwaresReportDataReport", "Reports", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.Report), "TopTenMalwaresReportDataSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.TopTenMalwaresReportDataSet), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_SequenceActionsSequences", "Sequences", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.Sequence), "SequenceActions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.SequenceAction), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_SequenceSequenceResult", "Sequences", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.Sequence), "SequenceResults", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.SequenceResult), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_TaskResultSequenceResult", "TaskResults", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.TaskResult), "SequenceResults", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.SequenceResult), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_TasksSequences", "Sequences", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Server.Sequence), "Tasks", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.CrmTask), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "FK_TaskTaskResult", "Tasks", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Server.CrmTask), "TaskResults", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.TaskResult), true)]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "MessageParams_AlertParam", "Alerts", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Server.Alert), "MessageParams", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.MessageParam))]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "MessageParams_RequestAnswerParam", "MessageParams", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.MessageParam), "RequestAnswers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Server.RequestAnswer))]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "ScanProfileLocations", "ScanLocations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.ScanLocation), "ScanProfiles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.ScanProfile))]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "TaskComputerGroups", "ComputerGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.ComputerGroup), "Tasks", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.CrmTask))]
[assembly: EdmRelationshipAttribute("CrmEntitiesModel", "TaskComputers", "Computers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.Computer), "Tasks", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Server.CrmTask))]

#endregion

namespace Server
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CrmEntitiesEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CrmEntitiesEntities object using the connection string found in the 'CrmEntitiesEntities' section of the application configuration file.
        /// </summary>
        public CrmEntitiesEntities() : base("name=CrmEntitiesEntities", "CrmEntitiesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CrmEntitiesEntities object.
        /// </summary>
        public CrmEntitiesEntities(string connectionString) : base(connectionString, "CrmEntitiesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CrmEntitiesEntities object.
        /// </summary>
        public CrmEntitiesEntities(EntityConnection connection) : base(connection, "CrmEntitiesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ActionResult> ActionResults
        {
            get
            {
                if ((_ActionResults == null))
                {
                    _ActionResults = base.CreateObjectSet<ActionResult>("ActionResults");
                }
                return _ActionResults;
            }
        }
        private ObjectSet<ActionResult> _ActionResults;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Alert> Alerts
        {
            get
            {
                if ((_Alerts == null))
                {
                    _Alerts = base.CreateObjectSet<Alert>("Alerts");
                }
                return _Alerts;
            }
        }
        private ObjectSet<Alert> _Alerts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Alerts_Notification> Alerts_Notification
        {
            get
            {
                if ((_Alerts_Notification == null))
                {
                    _Alerts_Notification = base.CreateObjectSet<Alerts_Notification>("Alerts_Notification");
                }
                return _Alerts_Notification;
            }
        }
        private ObjectSet<Alerts_Notification> _Alerts_Notification;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Alerts_Request> Alerts_Request
        {
            get
            {
                if ((_Alerts_Request == null))
                {
                    _Alerts_Request = base.CreateObjectSet<Alerts_Request>("Alerts_Request");
                }
                return _Alerts_Request;
            }
        }
        private ObjectSet<Alerts_Request> _Alerts_Request;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AvLogRawDataSet> AvLogRawDataSets
        {
            get
            {
                if ((_AvLogRawDataSets == null))
                {
                    _AvLogRawDataSets = base.CreateObjectSet<AvLogRawDataSet>("AvLogRawDataSets");
                }
                return _AvLogRawDataSets;
            }
        }
        private ObjectSet<AvLogRawDataSet> _AvLogRawDataSets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AvLogReportDataSet> AvLogReportDataSets
        {
            get
            {
                if ((_AvLogReportDataSets == null))
                {
                    _AvLogReportDataSets = base.CreateObjectSet<AvLogReportDataSet>("AvLogReportDataSets");
                }
                return _AvLogReportDataSets;
            }
        }
        private ObjectSet<AvLogReportDataSet> _AvLogReportDataSets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AvUpdatesRawDataSet> AvUpdatesRawDataSets
        {
            get
            {
                if ((_AvUpdatesRawDataSets == null))
                {
                    _AvUpdatesRawDataSets = base.CreateObjectSet<AvUpdatesRawDataSet>("AvUpdatesRawDataSets");
                }
                return _AvUpdatesRawDataSets;
            }
        }
        private ObjectSet<AvUpdatesRawDataSet> _AvUpdatesRawDataSets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AvUpdatesReportDataSet> AvUpdatesReportDataSets
        {
            get
            {
                if ((_AvUpdatesReportDataSets == null))
                {
                    _AvUpdatesReportDataSets = base.CreateObjectSet<AvUpdatesReportDataSet>("AvUpdatesReportDataSets");
                }
                return _AvUpdatesReportDataSets;
            }
        }
        private ObjectSet<AvUpdatesReportDataSet> _AvUpdatesReportDataSets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CisConfigRawDataSet> CisConfigRawDataSets
        {
            get
            {
                if ((_CisConfigRawDataSets == null))
                {
                    _CisConfigRawDataSets = base.CreateObjectSet<CisConfigRawDataSet>("CisConfigRawDataSets");
                }
                return _CisConfigRawDataSets;
            }
        }
        private ObjectSet<CisConfigRawDataSet> _CisConfigRawDataSets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CisConfigReportDataSet> CisConfigReportDataSets
        {
            get
            {
                if ((_CisConfigReportDataSets == null))
                {
                    _CisConfigReportDataSets = base.CreateObjectSet<CisConfigReportDataSet>("CisConfigReportDataSets");
                }
                return _CisConfigReportDataSets;
            }
        }
        private ObjectSet<CisConfigReportDataSet> _CisConfigReportDataSets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ComputerDetailsRawDataSet> ComputerDetailsRawDataSets
        {
            get
            {
                if ((_ComputerDetailsRawDataSets == null))
                {
                    _ComputerDetailsRawDataSets = base.CreateObjectSet<ComputerDetailsRawDataSet>("ComputerDetailsRawDataSets");
                }
                return _ComputerDetailsRawDataSets;
            }
        }
        private ObjectSet<ComputerDetailsRawDataSet> _ComputerDetailsRawDataSets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ComputerDetailsReportDataSet> ComputerDetailsReportDataSets
        {
            get
            {
                if ((_ComputerDetailsReportDataSets == null))
                {
                    _ComputerDetailsReportDataSets = base.CreateObjectSet<ComputerDetailsReportDataSet>("ComputerDetailsReportDataSets");
                }
                return _ComputerDetailsReportDataSets;
            }
        }
        private ObjectSet<ComputerDetailsReportDataSet> _ComputerDetailsReportDataSets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ComputerGroup> ComputerGroups
        {
            get
            {
                if ((_ComputerGroups == null))
                {
                    _ComputerGroups = base.CreateObjectSet<ComputerGroup>("ComputerGroups");
                }
                return _ComputerGroups;
            }
        }
        private ObjectSet<ComputerGroup> _ComputerGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Computer> Computers
        {
            get
            {
                if ((_Computers == null))
                {
                    _Computers = base.CreateObjectSet<Computer>("Computers");
                }
                return _Computers;
            }
        }
        private ObjectSet<Computer> _Computers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DbInstallerInfo> DbInstallerInfoes
        {
            get
            {
                if ((_DbInstallerInfoes == null))
                {
                    _DbInstallerInfoes = base.CreateObjectSet<DbInstallerInfo>("DbInstallerInfoes");
                }
                return _DbInstallerInfoes;
            }
        }
        private ObjectSet<DbInstallerInfo> _DbInstallerInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DefensePlusLogRawDataSet> DefensePlusLogRawDataSets
        {
            get
            {
                if ((_DefensePlusLogRawDataSets == null))
                {
                    _DefensePlusLogRawDataSets = base.CreateObjectSet<DefensePlusLogRawDataSet>("DefensePlusLogRawDataSets");
                }
                return _DefensePlusLogRawDataSets;
            }
        }
        private ObjectSet<DefensePlusLogRawDataSet> _DefensePlusLogRawDataSets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DefensePlusLogReportDataSet> DefensePlusLogReportDataSets
        {
            get
            {
                if ((_DefensePlusLogReportDataSets == null))
                {
                    _DefensePlusLogReportDataSets = base.CreateObjectSet<DefensePlusLogReportDataSet>("DefensePlusLogReportDataSets");
                }
                return _DefensePlusLogReportDataSets;
            }
        }
        private ObjectSet<DefensePlusLogReportDataSet> _DefensePlusLogReportDataSets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DiscoveryDataSet> DiscoveryDataSets
        {
            get
            {
                if ((_DiscoveryDataSets == null))
                {
                    _DiscoveryDataSets = base.CreateObjectSet<DiscoveryDataSet>("DiscoveryDataSets");
                }
                return _DiscoveryDataSets;
            }
        }
        private ObjectSet<DiscoveryDataSet> _DiscoveryDataSets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FirewallLogRawDataSet> FirewallLogRawDataSets
        {
            get
            {
                if ((_FirewallLogRawDataSets == null))
                {
                    _FirewallLogRawDataSets = base.CreateObjectSet<FirewallLogRawDataSet>("FirewallLogRawDataSets");
                }
                return _FirewallLogRawDataSets;
            }
        }
        private ObjectSet<FirewallLogRawDataSet> _FirewallLogRawDataSets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FirewallLogReportDataSet> FirewallLogReportDataSets
        {
            get
            {
                if ((_FirewallLogReportDataSets == null))
                {
                    _FirewallLogReportDataSets = base.CreateObjectSet<FirewallLogReportDataSet>("FirewallLogReportDataSets");
                }
                return _FirewallLogReportDataSets;
            }
        }
        private ObjectSet<FirewallLogReportDataSet> _FirewallLogReportDataSets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InfectedItemRawDataSet> InfectedItemRawDataSets
        {
            get
            {
                if ((_InfectedItemRawDataSets == null))
                {
                    _InfectedItemRawDataSets = base.CreateObjectSet<InfectedItemRawDataSet>("InfectedItemRawDataSets");
                }
                return _InfectedItemRawDataSets;
            }
        }
        private ObjectSet<InfectedItemRawDataSet> _InfectedItemRawDataSets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InfectedItemReportDataSet> InfectedItemReportDataSets
        {
            get
            {
                if ((_InfectedItemReportDataSets == null))
                {
                    _InfectedItemReportDataSets = base.CreateObjectSet<InfectedItemReportDataSet>("InfectedItemReportDataSets");
                }
                return _InfectedItemReportDataSets;
            }
        }
        private ObjectSet<InfectedItemReportDataSet> _InfectedItemReportDataSets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InstalledSoftwareRawDataSet> InstalledSoftwareRawDataSets
        {
            get
            {
                if ((_InstalledSoftwareRawDataSets == null))
                {
                    _InstalledSoftwareRawDataSets = base.CreateObjectSet<InstalledSoftwareRawDataSet>("InstalledSoftwareRawDataSets");
                }
                return _InstalledSoftwareRawDataSets;
            }
        }
        private ObjectSet<InstalledSoftwareRawDataSet> _InstalledSoftwareRawDataSets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InstalledSoftwareReportDataSet> InstalledSoftwareReportDataSets
        {
            get
            {
                if ((_InstalledSoftwareReportDataSets == null))
                {
                    _InstalledSoftwareReportDataSets = base.CreateObjectSet<InstalledSoftwareReportDataSet>("InstalledSoftwareReportDataSets");
                }
                return _InstalledSoftwareReportDataSets;
            }
        }
        private ObjectSet<InstalledSoftwareReportDataSet> _InstalledSoftwareReportDataSets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LicensedProduct> LicensedProducts
        {
            get
            {
                if ((_LicensedProducts == null))
                {
                    _LicensedProducts = base.CreateObjectSet<LicensedProduct>("LicensedProducts");
                }
                return _LicensedProducts;
            }
        }
        private ObjectSet<LicensedProduct> _LicensedProducts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<License> Licenses
        {
            get
            {
                if ((_Licenses == null))
                {
                    _Licenses = base.CreateObjectSet<License>("Licenses");
                }
                return _Licenses;
            }
        }
        private ObjectSet<License> _Licenses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MalwareStatisticsReportDataSet> MalwareStatisticsReportDataSets
        {
            get
            {
                if ((_MalwareStatisticsReportDataSets == null))
                {
                    _MalwareStatisticsReportDataSets = base.CreateObjectSet<MalwareStatisticsReportDataSet>("MalwareStatisticsReportDataSets");
                }
                return _MalwareStatisticsReportDataSets;
            }
        }
        private ObjectSet<MalwareStatisticsReportDataSet> _MalwareStatisticsReportDataSets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MessageParam> MessageParams
        {
            get
            {
                if ((_MessageParams == null))
                {
                    _MessageParams = base.CreateObjectSet<MessageParam>("MessageParams");
                }
                return _MessageParams;
            }
        }
        private ObjectSet<MessageParam> _MessageParams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Package> Packages
        {
            get
            {
                if ((_Packages == null))
                {
                    _Packages = base.CreateObjectSet<Package>("Packages");
                }
                return _Packages;
            }
        }
        private ObjectSet<Package> _Packages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Policy> Policies
        {
            get
            {
                if ((_Policies == null))
                {
                    _Policies = base.CreateObjectSet<Policy>("Policies");
                }
                return _Policies;
            }
        }
        private ObjectSet<Policy> _Policies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyComponentInfo> PolicyComponentInfoes
        {
            get
            {
                if ((_PolicyComponentInfoes == null))
                {
                    _PolicyComponentInfoes = base.CreateObjectSet<PolicyComponentInfo>("PolicyComponentInfoes");
                }
                return _PolicyComponentInfoes;
            }
        }
        private ObjectSet<PolicyComponentInfo> _PolicyComponentInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyDeltaRawDataSet> PolicyDeltaRawDataSets
        {
            get
            {
                if ((_PolicyDeltaRawDataSets == null))
                {
                    _PolicyDeltaRawDataSets = base.CreateObjectSet<PolicyDeltaRawDataSet>("PolicyDeltaRawDataSets");
                }
                return _PolicyDeltaRawDataSets;
            }
        }
        private ObjectSet<PolicyDeltaRawDataSet> _PolicyDeltaRawDataSets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyDeltaReportDataSet> PolicyDeltaReportDataSets
        {
            get
            {
                if ((_PolicyDeltaReportDataSets == null))
                {
                    _PolicyDeltaReportDataSets = base.CreateObjectSet<PolicyDeltaReportDataSet>("PolicyDeltaReportDataSets");
                }
                return _PolicyDeltaReportDataSets;
            }
        }
        private ObjectSet<PolicyDeltaReportDataSet> _PolicyDeltaReportDataSets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyProductInfo> PolicyProductInfoes
        {
            get
            {
                if ((_PolicyProductInfoes == null))
                {
                    _PolicyProductInfoes = base.CreateObjectSet<PolicyProductInfo>("PolicyProductInfoes");
                }
                return _PolicyProductInfoes;
            }
        }
        private ObjectSet<PolicyProductInfo> _PolicyProductInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyStatusReportDataSet> PolicyStatusReportDataSets
        {
            get
            {
                if ((_PolicyStatusReportDataSets == null))
                {
                    _PolicyStatusReportDataSets = base.CreateObjectSet<PolicyStatusReportDataSet>("PolicyStatusReportDataSets");
                }
                return _PolicyStatusReportDataSets;
            }
        }
        private ObjectSet<PolicyStatusReportDataSet> _PolicyStatusReportDataSets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductConnection> ProductConnections
        {
            get
            {
                if ((_ProductConnections == null))
                {
                    _ProductConnections = base.CreateObjectSet<ProductConnection>("ProductConnections");
                }
                return _ProductConnections;
            }
        }
        private ObjectSet<ProductConnection> _ProductConnections;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<QuarantineItemRawDataSet> QuarantineItemRawDataSets
        {
            get
            {
                if ((_QuarantineItemRawDataSets == null))
                {
                    _QuarantineItemRawDataSets = base.CreateObjectSet<QuarantineItemRawDataSet>("QuarantineItemRawDataSets");
                }
                return _QuarantineItemRawDataSets;
            }
        }
        private ObjectSet<QuarantineItemRawDataSet> _QuarantineItemRawDataSets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<QuarantineItemReportDataSet> QuarantineItemReportDataSets
        {
            get
            {
                if ((_QuarantineItemReportDataSets == null))
                {
                    _QuarantineItemReportDataSets = base.CreateObjectSet<QuarantineItemReportDataSet>("QuarantineItemReportDataSets");
                }
                return _QuarantineItemReportDataSets;
            }
        }
        private ObjectSet<QuarantineItemReportDataSet> _QuarantineItemReportDataSets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReportManagerSetting> ReportManagerSettings
        {
            get
            {
                if ((_ReportManagerSettings == null))
                {
                    _ReportManagerSettings = base.CreateObjectSet<ReportManagerSetting>("ReportManagerSettings");
                }
                return _ReportManagerSettings;
            }
        }
        private ObjectSet<ReportManagerSetting> _ReportManagerSettings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReportParameter> ReportParameters
        {
            get
            {
                if ((_ReportParameters == null))
                {
                    _ReportParameters = base.CreateObjectSet<ReportParameter>("ReportParameters");
                }
                return _ReportParameters;
            }
        }
        private ObjectSet<ReportParameter> _ReportParameters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Report> Reports
        {
            get
            {
                if ((_Reports == null))
                {
                    _Reports = base.CreateObjectSet<Report>("Reports");
                }
                return _Reports;
            }
        }
        private ObjectSet<Report> _Reports;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReportTarget> ReportTargets
        {
            get
            {
                if ((_ReportTargets == null))
                {
                    _ReportTargets = base.CreateObjectSet<ReportTarget>("ReportTargets");
                }
                return _ReportTargets;
            }
        }
        private ObjectSet<ReportTarget> _ReportTargets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReportType> ReportTypes
        {
            get
            {
                if ((_ReportTypes == null))
                {
                    _ReportTypes = base.CreateObjectSet<ReportType>("ReportTypes");
                }
                return _ReportTypes;
            }
        }
        private ObjectSet<ReportType> _ReportTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RequestAnswerResult> RequestAnswerResults
        {
            get
            {
                if ((_RequestAnswerResults == null))
                {
                    _RequestAnswerResults = base.CreateObjectSet<RequestAnswerResult>("RequestAnswerResults");
                }
                return _RequestAnswerResults;
            }
        }
        private ObjectSet<RequestAnswerResult> _RequestAnswerResults;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RequestAnswer> RequestAnswers
        {
            get
            {
                if ((_RequestAnswers == null))
                {
                    _RequestAnswers = base.CreateObjectSet<RequestAnswer>("RequestAnswers");
                }
                return _RequestAnswers;
            }
        }
        private ObjectSet<RequestAnswer> _RequestAnswers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RequestOption> RequestOptions
        {
            get
            {
                if ((_RequestOptions == null))
                {
                    _RequestOptions = base.CreateObjectSet<RequestOption>("RequestOptions");
                }
                return _RequestOptions;
            }
        }
        private ObjectSet<RequestOption> _RequestOptions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ScanLocation> ScanLocations
        {
            get
            {
                if ((_ScanLocations == null))
                {
                    _ScanLocations = base.CreateObjectSet<ScanLocation>("ScanLocations");
                }
                return _ScanLocations;
            }
        }
        private ObjectSet<ScanLocation> _ScanLocations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ScanProfile> ScanProfiles
        {
            get
            {
                if ((_ScanProfiles == null))
                {
                    _ScanProfiles = base.CreateObjectSet<ScanProfile>("ScanProfiles");
                }
                return _ScanProfiles;
            }
        }
        private ObjectSet<ScanProfile> _ScanProfiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SequenceAction> SequenceActions
        {
            get
            {
                if ((_SequenceActions == null))
                {
                    _SequenceActions = base.CreateObjectSet<SequenceAction>("SequenceActions");
                }
                return _SequenceActions;
            }
        }
        private ObjectSet<SequenceAction> _SequenceActions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SequenceResult> SequenceResults
        {
            get
            {
                if ((_SequenceResults == null))
                {
                    _SequenceResults = base.CreateObjectSet<SequenceResult>("SequenceResults");
                }
                return _SequenceResults;
            }
        }
        private ObjectSet<SequenceResult> _SequenceResults;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Sequence> Sequences
        {
            get
            {
                if ((_Sequences == null))
                {
                    _Sequences = base.CreateObjectSet<Sequence>("Sequences");
                }
                return _Sequences;
            }
        }
        private ObjectSet<Sequence> _Sequences;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TaskResult> TaskResults
        {
            get
            {
                if ((_TaskResults == null))
                {
                    _TaskResults = base.CreateObjectSet<TaskResult>("TaskResults");
                }
                return _TaskResults;
            }
        }
        private ObjectSet<TaskResult> _TaskResults;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CrmTask> Tasks
        {
            get
            {
                if ((_Tasks == null))
                {
                    _Tasks = base.CreateObjectSet<CrmTask>("Tasks");
                }
                return _Tasks;
            }
        }
        private ObjectSet<CrmTask> _Tasks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TileConfiguration> TileConfigurations
        {
            get
            {
                if ((_TileConfigurations == null))
                {
                    _TileConfigurations = base.CreateObjectSet<TileConfiguration>("TileConfigurations");
                }
                return _TileConfigurations;
            }
        }
        private ObjectSet<TileConfiguration> _TileConfigurations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TileLayout> TileLayouts
        {
            get
            {
                if ((_TileLayouts == null))
                {
                    _TileLayouts = base.CreateObjectSet<TileLayout>("TileLayouts");
                }
                return _TileLayouts;
            }
        }
        private ObjectSet<TileLayout> _TileLayouts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TopTenMalwaresReportDataSet> TopTenMalwaresReportDataSets
        {
            get
            {
                if ((_TopTenMalwaresReportDataSets == null))
                {
                    _TopTenMalwaresReportDataSets = base.CreateObjectSet<TopTenMalwaresReportDataSet>("TopTenMalwaresReportDataSets");
                }
                return _TopTenMalwaresReportDataSets;
            }
        }
        private ObjectSet<TopTenMalwaresReportDataSet> _TopTenMalwaresReportDataSets;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ActionResults EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActionResults(ActionResult actionResult)
        {
            base.AddObject("ActionResults", actionResult);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Alerts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAlerts(Alert alert)
        {
            base.AddObject("Alerts", alert);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Alerts_Notification EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAlerts_Notification(Alerts_Notification alerts_Notification)
        {
            base.AddObject("Alerts_Notification", alerts_Notification);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Alerts_Request EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAlerts_Request(Alerts_Request alerts_Request)
        {
            base.AddObject("Alerts_Request", alerts_Request);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AvLogRawDataSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAvLogRawDataSets(AvLogRawDataSet avLogRawDataSet)
        {
            base.AddObject("AvLogRawDataSets", avLogRawDataSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AvLogReportDataSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAvLogReportDataSets(AvLogReportDataSet avLogReportDataSet)
        {
            base.AddObject("AvLogReportDataSets", avLogReportDataSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AvUpdatesRawDataSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAvUpdatesRawDataSets(AvUpdatesRawDataSet avUpdatesRawDataSet)
        {
            base.AddObject("AvUpdatesRawDataSets", avUpdatesRawDataSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AvUpdatesReportDataSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAvUpdatesReportDataSets(AvUpdatesReportDataSet avUpdatesReportDataSet)
        {
            base.AddObject("AvUpdatesReportDataSets", avUpdatesReportDataSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CisConfigRawDataSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCisConfigRawDataSets(CisConfigRawDataSet cisConfigRawDataSet)
        {
            base.AddObject("CisConfigRawDataSets", cisConfigRawDataSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CisConfigReportDataSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCisConfigReportDataSets(CisConfigReportDataSet cisConfigReportDataSet)
        {
            base.AddObject("CisConfigReportDataSets", cisConfigReportDataSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ComputerDetailsRawDataSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToComputerDetailsRawDataSets(ComputerDetailsRawDataSet computerDetailsRawDataSet)
        {
            base.AddObject("ComputerDetailsRawDataSets", computerDetailsRawDataSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ComputerDetailsReportDataSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToComputerDetailsReportDataSets(ComputerDetailsReportDataSet computerDetailsReportDataSet)
        {
            base.AddObject("ComputerDetailsReportDataSets", computerDetailsReportDataSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ComputerGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToComputerGroups(ComputerGroup computerGroup)
        {
            base.AddObject("ComputerGroups", computerGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Computers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToComputers(Computer computer)
        {
            base.AddObject("Computers", computer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DbInstallerInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDbInstallerInfoes(DbInstallerInfo dbInstallerInfo)
        {
            base.AddObject("DbInstallerInfoes", dbInstallerInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DefensePlusLogRawDataSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDefensePlusLogRawDataSets(DefensePlusLogRawDataSet defensePlusLogRawDataSet)
        {
            base.AddObject("DefensePlusLogRawDataSets", defensePlusLogRawDataSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DefensePlusLogReportDataSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDefensePlusLogReportDataSets(DefensePlusLogReportDataSet defensePlusLogReportDataSet)
        {
            base.AddObject("DefensePlusLogReportDataSets", defensePlusLogReportDataSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DiscoveryDataSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDiscoveryDataSets(DiscoveryDataSet discoveryDataSet)
        {
            base.AddObject("DiscoveryDataSets", discoveryDataSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FirewallLogRawDataSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFirewallLogRawDataSets(FirewallLogRawDataSet firewallLogRawDataSet)
        {
            base.AddObject("FirewallLogRawDataSets", firewallLogRawDataSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FirewallLogReportDataSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFirewallLogReportDataSets(FirewallLogReportDataSet firewallLogReportDataSet)
        {
            base.AddObject("FirewallLogReportDataSets", firewallLogReportDataSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InfectedItemRawDataSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInfectedItemRawDataSets(InfectedItemRawDataSet infectedItemRawDataSet)
        {
            base.AddObject("InfectedItemRawDataSets", infectedItemRawDataSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InfectedItemReportDataSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInfectedItemReportDataSets(InfectedItemReportDataSet infectedItemReportDataSet)
        {
            base.AddObject("InfectedItemReportDataSets", infectedItemReportDataSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InstalledSoftwareRawDataSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInstalledSoftwareRawDataSets(InstalledSoftwareRawDataSet installedSoftwareRawDataSet)
        {
            base.AddObject("InstalledSoftwareRawDataSets", installedSoftwareRawDataSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InstalledSoftwareReportDataSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInstalledSoftwareReportDataSets(InstalledSoftwareReportDataSet installedSoftwareReportDataSet)
        {
            base.AddObject("InstalledSoftwareReportDataSets", installedSoftwareReportDataSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LicensedProducts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLicensedProducts(LicensedProduct licensedProduct)
        {
            base.AddObject("LicensedProducts", licensedProduct);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Licenses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLicenses(License license)
        {
            base.AddObject("Licenses", license);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MalwareStatisticsReportDataSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMalwareStatisticsReportDataSets(MalwareStatisticsReportDataSet malwareStatisticsReportDataSet)
        {
            base.AddObject("MalwareStatisticsReportDataSets", malwareStatisticsReportDataSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MessageParams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessageParams(MessageParam messageParam)
        {
            base.AddObject("MessageParams", messageParam);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Packages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPackages(Package package)
        {
            base.AddObject("Packages", package);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Policies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicies(Policy policy)
        {
            base.AddObject("Policies", policy);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyComponentInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyComponentInfoes(PolicyComponentInfo policyComponentInfo)
        {
            base.AddObject("PolicyComponentInfoes", policyComponentInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyDeltaRawDataSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyDeltaRawDataSets(PolicyDeltaRawDataSet policyDeltaRawDataSet)
        {
            base.AddObject("PolicyDeltaRawDataSets", policyDeltaRawDataSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyDeltaReportDataSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyDeltaReportDataSets(PolicyDeltaReportDataSet policyDeltaReportDataSet)
        {
            base.AddObject("PolicyDeltaReportDataSets", policyDeltaReportDataSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyProductInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyProductInfoes(PolicyProductInfo policyProductInfo)
        {
            base.AddObject("PolicyProductInfoes", policyProductInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyStatusReportDataSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyStatusReportDataSets(PolicyStatusReportDataSet policyStatusReportDataSet)
        {
            base.AddObject("PolicyStatusReportDataSets", policyStatusReportDataSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductConnections EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductConnections(ProductConnection productConnection)
        {
            base.AddObject("ProductConnections", productConnection);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the QuarantineItemRawDataSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuarantineItemRawDataSets(QuarantineItemRawDataSet quarantineItemRawDataSet)
        {
            base.AddObject("QuarantineItemRawDataSets", quarantineItemRawDataSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the QuarantineItemReportDataSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuarantineItemReportDataSets(QuarantineItemReportDataSet quarantineItemReportDataSet)
        {
            base.AddObject("QuarantineItemReportDataSets", quarantineItemReportDataSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReportManagerSettings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReportManagerSettings(ReportManagerSetting reportManagerSetting)
        {
            base.AddObject("ReportManagerSettings", reportManagerSetting);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReportParameters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReportParameters(ReportParameter reportParameter)
        {
            base.AddObject("ReportParameters", reportParameter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Reports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReports(Report report)
        {
            base.AddObject("Reports", report);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReportTargets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReportTargets(ReportTarget reportTarget)
        {
            base.AddObject("ReportTargets", reportTarget);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReportTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReportTypes(ReportType reportType)
        {
            base.AddObject("ReportTypes", reportType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RequestAnswerResults EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRequestAnswerResults(RequestAnswerResult requestAnswerResult)
        {
            base.AddObject("RequestAnswerResults", requestAnswerResult);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RequestAnswers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRequestAnswers(RequestAnswer requestAnswer)
        {
            base.AddObject("RequestAnswers", requestAnswer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RequestOptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRequestOptions(RequestOption requestOption)
        {
            base.AddObject("RequestOptions", requestOption);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ScanLocations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToScanLocations(ScanLocation scanLocation)
        {
            base.AddObject("ScanLocations", scanLocation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ScanProfiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToScanProfiles(ScanProfile scanProfile)
        {
            base.AddObject("ScanProfiles", scanProfile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SequenceActions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSequenceActions(SequenceAction sequenceAction)
        {
            base.AddObject("SequenceActions", sequenceAction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SequenceResults EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSequenceResults(SequenceResult sequenceResult)
        {
            base.AddObject("SequenceResults", sequenceResult);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sequences EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSequences(Sequence sequence)
        {
            base.AddObject("Sequences", sequence);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TaskResults EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTaskResults(TaskResult taskResult)
        {
            base.AddObject("TaskResults", taskResult);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tasks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTasks(CrmTask task)
        {
            base.AddObject("Tasks", task);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TileConfigurations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTileConfigurations(TileConfiguration tileConfiguration)
        {
            base.AddObject("TileConfigurations", tileConfiguration);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TileLayouts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTileLayouts(TileLayout tileLayout)
        {
            base.AddObject("TileLayouts", tileLayout);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TopTenMalwaresReportDataSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTopTenMalwaresReportDataSets(TopTenMalwaresReportDataSet topTenMalwaresReportDataSet)
        {
            base.AddObject("TopTenMalwaresReportDataSets", topTenMalwaresReportDataSet);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="ActionResult")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActionResult : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ActionResult object.
        /// </summary>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="factoryUid">Initial value of the FactoryUid property.</param>
        /// <param name="resultCode">Initial value of the ResultCode property.</param>
        /// <param name="ownerSequenceResultId">Initial value of the OwnerSequenceResultId property.</param>
        /// <param name="isInternal">Initial value of the IsInternal property.</param>
        public static ActionResult CreateActionResult(global::System.Int16 status, global::System.Int64 id, global::System.Guid factoryUid, global::System.Int32 resultCode, global::System.Int64 ownerSequenceResultId, global::System.Boolean isInternal)
        {
            ActionResult actionResult = new ActionResult();
            actionResult.Status = status;
            actionResult.Id = id;
            actionResult.FactoryUid = factoryUid;
            actionResult.ResultCode = resultCode;
            actionResult.OwnerSequenceResultId = ownerSequenceResultId;
            actionResult.IsInternal = isInternal;
            return actionResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int16 _Status;
        partial void OnStatusChanging(global::System.Int16 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Started
        {
            get
            {
                return _Started;
            }
            set
            {
                OnStartedChanging(value);
                ReportPropertyChanging("Started");
                _Started = StructuralObject.SetValidValue(value, "Started");
                ReportPropertyChanged("Started");
                OnStartedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Started;
        partial void OnStartedChanging(Nullable<global::System.DateTime> value);
        partial void OnStartedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Completed
        {
            get
            {
                return _Completed;
            }
            set
            {
                OnCompletedChanging(value);
                ReportPropertyChanging("Completed");
                _Completed = StructuralObject.SetValidValue(value, "Completed");
                ReportPropertyChanged("Completed");
                OnCompletedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Completed;
        partial void OnCompletedChanging(Nullable<global::System.DateTime> value);
        partial void OnCompletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid FactoryUid
        {
            get
            {
                return _FactoryUid;
            }
            set
            {
                OnFactoryUidChanging(value);
                ReportPropertyChanging("FactoryUid");
                _FactoryUid = StructuralObject.SetValidValue(value, "FactoryUid");
                ReportPropertyChanged("FactoryUid");
                OnFactoryUidChanged();
            }
        }
        private global::System.Guid _FactoryUid;
        partial void OnFactoryUidChanging(global::System.Guid value);
        partial void OnFactoryUidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] InputData
        {
            get
            {
                return StructuralObject.GetValidValue(_InputData);
            }
            set
            {
                OnInputDataChanging(value);
                ReportPropertyChanging("InputData");
                _InputData = StructuralObject.SetValidValue(value, true, "InputData");
                ReportPropertyChanged("InputData");
                OnInputDataChanged();
            }
        }
        private global::System.Byte[] _InputData;
        partial void OnInputDataChanging(global::System.Byte[] value);
        partial void OnInputDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] ResultData
        {
            get
            {
                return StructuralObject.GetValidValue(_ResultData);
            }
            set
            {
                OnResultDataChanging(value);
                ReportPropertyChanging("ResultData");
                _ResultData = StructuralObject.SetValidValue(value, true, "ResultData");
                ReportPropertyChanged("ResultData");
                OnResultDataChanged();
            }
        }
        private global::System.Byte[] _ResultData;
        partial void OnResultDataChanging(global::System.Byte[] value);
        partial void OnResultDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResultCode
        {
            get
            {
                return _ResultCode;
            }
            set
            {
                OnResultCodeChanging(value);
                ReportPropertyChanging("ResultCode");
                _ResultCode = StructuralObject.SetValidValue(value, "ResultCode");
                ReportPropertyChanged("ResultCode");
                OnResultCodeChanged();
            }
        }
        private global::System.Int32 _ResultCode;
        partial void OnResultCodeChanging(global::System.Int32 value);
        partial void OnResultCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ErrorMessageAsXml
        {
            get
            {
                return _ErrorMessageAsXml;
            }
            set
            {
                OnErrorMessageAsXmlChanging(value);
                ReportPropertyChanging("ErrorMessageAsXml");
                _ErrorMessageAsXml = StructuralObject.SetValidValue(value, true, "ErrorMessageAsXml");
                ReportPropertyChanged("ErrorMessageAsXml");
                OnErrorMessageAsXmlChanged();
            }
        }
        private global::System.String _ErrorMessageAsXml;
        partial void OnErrorMessageAsXmlChanging(global::System.String value);
        partial void OnErrorMessageAsXmlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OwnerSequenceResultId
        {
            get
            {
                return _OwnerSequenceResultId;
            }
            set
            {
                OnOwnerSequenceResultIdChanging(value);
                ReportPropertyChanging("OwnerSequenceResultId");
                _OwnerSequenceResultId = StructuralObject.SetValidValue(value, "OwnerSequenceResultId");
                ReportPropertyChanged("OwnerSequenceResultId");
                OnOwnerSequenceResultIdChanged();
            }
        }
        private global::System.Int64 _OwnerSequenceResultId;
        partial void OnOwnerSequenceResultIdChanging(global::System.Int64 value);
        partial void OnOwnerSequenceResultIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsInternal
        {
            get
            {
                return _IsInternal;
            }
            set
            {
                OnIsInternalChanging(value);
                ReportPropertyChanging("IsInternal");
                _IsInternal = StructuralObject.SetValidValue(value, "IsInternal");
                ReportPropertyChanged("IsInternal");
                OnIsInternalChanged();
            }
        }
        private global::System.Boolean _IsInternal;
        partial void OnIsInternalChanging(global::System.Boolean value);
        partial void OnIsInternalChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_SequenceResultActionResult", "SequenceResults")]
        public SequenceResult SequenceResult
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SequenceResult>("CrmEntitiesModel.FK_SequenceResultActionResult", "SequenceResults").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SequenceResult>("CrmEntitiesModel.FK_SequenceResultActionResult", "SequenceResults").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SequenceResult> SequenceResultReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SequenceResult>("CrmEntitiesModel.FK_SequenceResultActionResult", "SequenceResults");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SequenceResult>("CrmEntitiesModel.FK_SequenceResultActionResult", "SequenceResults", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="Alert")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Alert : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Alert object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="uid">Initial value of the Uid property.</param>
        /// <param name="createdTime">Initial value of the CreatedTime property.</param>
        /// <param name="productName">Initial value of the ProductName property.</param>
        /// <param name="productVersion">Initial value of the ProductVersion property.</param>
        /// <param name="receivedTime">Initial value of the ReceivedTime property.</param>
        /// <param name="transportType">Initial value of the TransportType property.</param>
        /// <param name="messageTextAsXml">Initial value of the MessageTextAsXml property.</param>
        /// <param name="timeStamp">Initial value of the TimeStamp property.</param>
        public static Alert CreateAlert(global::System.Int64 id, global::System.Guid uid, global::System.DateTime createdTime, global::System.String productName, global::System.String productVersion, global::System.DateTime receivedTime, global::System.Int16 transportType, global::System.String messageTextAsXml, global::System.Byte[] timeStamp)
        {
            Alert alert = new Alert();
            alert.Id = id;
            alert.Uid = uid;
            alert.CreatedTime = createdTime;
            alert.ProductName = productName;
            alert.ProductVersion = productVersion;
            alert.ReceivedTime = receivedTime;
            alert.TransportType = transportType;
            alert.MessageTextAsXml = messageTextAsXml;
            alert.TimeStamp = timeStamp;
            return alert;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Uid
        {
            get
            {
                return _Uid;
            }
            set
            {
                OnUidChanging(value);
                ReportPropertyChanging("Uid");
                _Uid = StructuralObject.SetValidValue(value, "Uid");
                ReportPropertyChanged("Uid");
                OnUidChanged();
            }
        }
        private global::System.Guid _Uid;
        partial void OnUidChanging(global::System.Guid value);
        partial void OnUidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ComputerId
        {
            get
            {
                return _ComputerId;
            }
            set
            {
                OnComputerIdChanging(value);
                ReportPropertyChanging("ComputerId");
                _ComputerId = StructuralObject.SetValidValue(value, "ComputerId");
                ReportPropertyChanged("ComputerId");
                OnComputerIdChanged();
            }
        }
        private Nullable<global::System.Int64> _ComputerId;
        partial void OnComputerIdChanging(Nullable<global::System.Int64> value);
        partial void OnComputerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedTime
        {
            get
            {
                return _CreatedTime;
            }
            set
            {
                OnCreatedTimeChanging(value);
                ReportPropertyChanging("CreatedTime");
                _CreatedTime = StructuralObject.SetValidValue(value, "CreatedTime");
                ReportPropertyChanged("CreatedTime");
                OnCreatedTimeChanged();
            }
        }
        private global::System.DateTime _CreatedTime;
        partial void OnCreatedTimeChanging(global::System.DateTime value);
        partial void OnCreatedTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductName
        {
            get
            {
                return _ProductName;
            }
            set
            {
                OnProductNameChanging(value);
                ReportPropertyChanging("ProductName");
                _ProductName = StructuralObject.SetValidValue(value, false, "ProductName");
                ReportPropertyChanged("ProductName");
                OnProductNameChanged();
            }
        }
        private global::System.String _ProductName;
        partial void OnProductNameChanging(global::System.String value);
        partial void OnProductNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductVersion
        {
            get
            {
                return _ProductVersion;
            }
            set
            {
                OnProductVersionChanging(value);
                ReportPropertyChanging("ProductVersion");
                _ProductVersion = StructuralObject.SetValidValue(value, false, "ProductVersion");
                ReportPropertyChanged("ProductVersion");
                OnProductVersionChanged();
            }
        }
        private global::System.String _ProductVersion;
        partial void OnProductVersionChanging(global::System.String value);
        partial void OnProductVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ReceivedTime
        {
            get
            {
                return _ReceivedTime;
            }
            set
            {
                OnReceivedTimeChanging(value);
                ReportPropertyChanging("ReceivedTime");
                _ReceivedTime = StructuralObject.SetValidValue(value, "ReceivedTime");
                ReportPropertyChanged("ReceivedTime");
                OnReceivedTimeChanged();
            }
        }
        private global::System.DateTime _ReceivedTime;
        partial void OnReceivedTimeChanging(global::System.DateTime value);
        partial void OnReceivedTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 TransportType
        {
            get
            {
                return _TransportType;
            }
            set
            {
                OnTransportTypeChanging(value);
                ReportPropertyChanging("TransportType");
                _TransportType = StructuralObject.SetValidValue(value, "TransportType");
                ReportPropertyChanged("TransportType");
                OnTransportTypeChanged();
            }
        }
        private global::System.Int16 _TransportType;
        partial void OnTransportTypeChanging(global::System.Int16 value);
        partial void OnTransportTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MessageTextAsXml
        {
            get
            {
                return _MessageTextAsXml;
            }
            set
            {
                OnMessageTextAsXmlChanging(value);
                ReportPropertyChanging("MessageTextAsXml");
                _MessageTextAsXml = StructuralObject.SetValidValue(value, false, "MessageTextAsXml");
                ReportPropertyChanged("MessageTextAsXml");
                OnMessageTextAsXmlChanged();
            }
        }
        private global::System.String _MessageTextAsXml;
        partial void OnMessageTextAsXmlChanging(global::System.String value);
        partial void OnMessageTextAsXmlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> MessageType_Uid
        {
            get
            {
                return _MessageType_Uid;
            }
            set
            {
                OnMessageType_UidChanging(value);
                ReportPropertyChanging("MessageType_Uid");
                _MessageType_Uid = StructuralObject.SetValidValue(value, "MessageType_Uid");
                ReportPropertyChanged("MessageType_Uid");
                OnMessageType_UidChanged();
            }
        }
        private Nullable<global::System.Guid> _MessageType_Uid;
        partial void OnMessageType_UidChanging(Nullable<global::System.Guid> value);
        partial void OnMessageType_UidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MessageType_NameAsXml
        {
            get
            {
                return _MessageType_NameAsXml;
            }
            set
            {
                OnMessageType_NameAsXmlChanging(value);
                ReportPropertyChanging("MessageType_NameAsXml");
                _MessageType_NameAsXml = StructuralObject.SetValidValue(value, true, "MessageType_NameAsXml");
                ReportPropertyChanged("MessageType_NameAsXml");
                OnMessageType_NameAsXmlChanged();
            }
        }
        private global::System.String _MessageType_NameAsXml;
        partial void OnMessageType_NameAsXmlChanging(global::System.String value);
        partial void OnMessageType_NameAsXmlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] TimeStamp
        {
            get
            {
                return StructuralObject.GetValidValue(_TimeStamp);
            }
            set
            {
                OnTimeStampChanging(value);
                ReportPropertyChanging("TimeStamp");
                _TimeStamp = StructuralObject.SetValidValue(value, true, "TimeStamp");
                ReportPropertyChanged("TimeStamp");
                OnTimeStampChanged();
            }
        }
        private global::System.Byte[] _TimeStamp;
        partial void OnTimeStampChanging(global::System.Byte[] value);
        partial void OnTimeStampChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_AlertsComputers", "Computers")]
        public Computer Computer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_AlertsComputers", "Computers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_AlertsComputers", "Computers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Computer> ComputerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_AlertsComputers", "Computers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Computer>("CrmEntitiesModel.FK_AlertsComputers", "Computers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_Notification_inherits_Alert", "Alerts_Notification")]
        public Alerts_Notification Alerts_Notification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Alerts_Notification>("CrmEntitiesModel.FK_Notification_inherits_Alert", "Alerts_Notification").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Alerts_Notification>("CrmEntitiesModel.FK_Notification_inherits_Alert", "Alerts_Notification").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Alerts_Notification> Alerts_NotificationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Alerts_Notification>("CrmEntitiesModel.FK_Notification_inherits_Alert", "Alerts_Notification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Alerts_Notification>("CrmEntitiesModel.FK_Notification_inherits_Alert", "Alerts_Notification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_Request_inherits_Alert", "Alerts_Request")]
        public Alerts_Request Alerts_Request
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Alerts_Request>("CrmEntitiesModel.FK_Request_inherits_Alert", "Alerts_Request").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Alerts_Request>("CrmEntitiesModel.FK_Request_inherits_Alert", "Alerts_Request").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Alerts_Request> Alerts_RequestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Alerts_Request>("CrmEntitiesModel.FK_Request_inherits_Alert", "Alerts_Request");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Alerts_Request>("CrmEntitiesModel.FK_Request_inherits_Alert", "Alerts_Request", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "MessageParams_AlertParam", "MessageParams")]
        public EntityCollection<MessageParam> MessageParams
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MessageParam>("CrmEntitiesModel.MessageParams_AlertParam", "MessageParams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MessageParam>("CrmEntitiesModel.MessageParams_AlertParam", "MessageParams", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="Alerts_Notification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Alerts_Notification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Alerts_Notification object.
        /// </summary>
        /// <param name="isProcessed">Initial value of the IsProcessed property.</param>
        /// <param name="notificationLevel">Initial value of the NotificationLevel property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        public static Alerts_Notification CreateAlerts_Notification(global::System.Boolean isProcessed, global::System.Int16 notificationLevel, global::System.Int64 id)
        {
            Alerts_Notification alerts_Notification = new Alerts_Notification();
            alerts_Notification.IsProcessed = isProcessed;
            alerts_Notification.NotificationLevel = notificationLevel;
            alerts_Notification.Id = id;
            return alerts_Notification;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsProcessed
        {
            get
            {
                return _IsProcessed;
            }
            set
            {
                OnIsProcessedChanging(value);
                ReportPropertyChanging("IsProcessed");
                _IsProcessed = StructuralObject.SetValidValue(value, "IsProcessed");
                ReportPropertyChanged("IsProcessed");
                OnIsProcessedChanged();
            }
        }
        private global::System.Boolean _IsProcessed;
        partial void OnIsProcessedChanging(global::System.Boolean value);
        partial void OnIsProcessedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 NotificationLevel
        {
            get
            {
                return _NotificationLevel;
            }
            set
            {
                OnNotificationLevelChanging(value);
                ReportPropertyChanging("NotificationLevel");
                _NotificationLevel = StructuralObject.SetValidValue(value, "NotificationLevel");
                ReportPropertyChanged("NotificationLevel");
                OnNotificationLevelChanged();
            }
        }
        private global::System.Int16 _NotificationLevel;
        partial void OnNotificationLevelChanging(global::System.Int16 value);
        partial void OnNotificationLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_Notification_inherits_Alert", "Alerts")]
        public Alert Alert
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Alert>("CrmEntitiesModel.FK_Notification_inherits_Alert", "Alerts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Alert>("CrmEntitiesModel.FK_Notification_inherits_Alert", "Alerts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Alert> AlertReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Alert>("CrmEntitiesModel.FK_Notification_inherits_Alert", "Alerts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Alert>("CrmEntitiesModel.FK_Notification_inherits_Alert", "Alerts", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="Alerts_Request")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Alerts_Request : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Alerts_Request object.
        /// </summary>
        /// <param name="requestLevel">Initial value of the RequestLevel property.</param>
        /// <param name="lifeTime">Initial value of the LifeTime property.</param>
        /// <param name="defaultAnswerIndex">Initial value of the DefaultAnswerIndex property.</param>
        /// <param name="selectedAnswerIndex">Initial value of the SelectedAnswerIndex property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        public static Alerts_Request CreateAlerts_Request(global::System.Int16 requestLevel, global::System.Int32 lifeTime, global::System.Int32 defaultAnswerIndex, global::System.Int32 selectedAnswerIndex, global::System.Int64 id)
        {
            Alerts_Request alerts_Request = new Alerts_Request();
            alerts_Request.RequestLevel = requestLevel;
            alerts_Request.LifeTime = lifeTime;
            alerts_Request.DefaultAnswerIndex = defaultAnswerIndex;
            alerts_Request.SelectedAnswerIndex = selectedAnswerIndex;
            alerts_Request.Id = id;
            return alerts_Request;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 RequestLevel
        {
            get
            {
                return _RequestLevel;
            }
            set
            {
                OnRequestLevelChanging(value);
                ReportPropertyChanging("RequestLevel");
                _RequestLevel = StructuralObject.SetValidValue(value, "RequestLevel");
                ReportPropertyChanged("RequestLevel");
                OnRequestLevelChanged();
            }
        }
        private global::System.Int16 _RequestLevel;
        partial void OnRequestLevelChanging(global::System.Int16 value);
        partial void OnRequestLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LifeTime
        {
            get
            {
                return _LifeTime;
            }
            set
            {
                OnLifeTimeChanging(value);
                ReportPropertyChanging("LifeTime");
                _LifeTime = StructuralObject.SetValidValue(value, "LifeTime");
                ReportPropertyChanged("LifeTime");
                OnLifeTimeChanged();
            }
        }
        private global::System.Int32 _LifeTime;
        partial void OnLifeTimeChanging(global::System.Int32 value);
        partial void OnLifeTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DefaultAnswerIndex
        {
            get
            {
                return _DefaultAnswerIndex;
            }
            set
            {
                OnDefaultAnswerIndexChanging(value);
                ReportPropertyChanging("DefaultAnswerIndex");
                _DefaultAnswerIndex = StructuralObject.SetValidValue(value, "DefaultAnswerIndex");
                ReportPropertyChanged("DefaultAnswerIndex");
                OnDefaultAnswerIndexChanged();
            }
        }
        private global::System.Int32 _DefaultAnswerIndex;
        partial void OnDefaultAnswerIndexChanging(global::System.Int32 value);
        partial void OnDefaultAnswerIndexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SelectedAnswerIndex
        {
            get
            {
                return _SelectedAnswerIndex;
            }
            set
            {
                OnSelectedAnswerIndexChanging(value);
                ReportPropertyChanging("SelectedAnswerIndex");
                _SelectedAnswerIndex = StructuralObject.SetValidValue(value, "SelectedAnswerIndex");
                ReportPropertyChanged("SelectedAnswerIndex");
                OnSelectedAnswerIndexChanged();
            }
        }
        private global::System.Int32 _SelectedAnswerIndex;
        partial void OnSelectedAnswerIndexChanging(global::System.Int32 value);
        partial void OnSelectedAnswerIndexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AnswerSelectedTime
        {
            get
            {
                return _AnswerSelectedTime;
            }
            set
            {
                OnAnswerSelectedTimeChanging(value);
                ReportPropertyChanging("AnswerSelectedTime");
                _AnswerSelectedTime = StructuralObject.SetValidValue(value, "AnswerSelectedTime");
                ReportPropertyChanged("AnswerSelectedTime");
                OnAnswerSelectedTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _AnswerSelectedTime;
        partial void OnAnswerSelectedTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnAnswerSelectedTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpireTime
        {
            get
            {
                return _ExpireTime;
            }
            set
            {
                OnExpireTimeChanging(value);
                ReportPropertyChanging("ExpireTime");
                _ExpireTime = StructuralObject.SetValidValue(value, "ExpireTime");
                ReportPropertyChanged("ExpireTime");
                OnExpireTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpireTime;
        partial void OnExpireTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnExpireTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_Request_inherits_Alert", "Alerts")]
        public Alert Alert
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Alert>("CrmEntitiesModel.FK_Request_inherits_Alert", "Alerts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Alert>("CrmEntitiesModel.FK_Request_inherits_Alert", "Alerts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Alert> AlertReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Alert>("CrmEntitiesModel.FK_Request_inherits_Alert", "Alerts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Alert>("CrmEntitiesModel.FK_Request_inherits_Alert", "Alerts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_RequestRequestAnswer", "RequestAnswers")]
        public EntityCollection<RequestAnswer> RequestAnswers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RequestAnswer>("CrmEntitiesModel.FK_RequestRequestAnswer", "RequestAnswers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RequestAnswer>("CrmEntitiesModel.FK_RequestRequestAnswer", "RequestAnswers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_RequestRequestAnswerResult", "RequestAnswerResults")]
        public EntityCollection<RequestAnswerResult> RequestAnswerResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RequestAnswerResult>("CrmEntitiesModel.FK_RequestRequestAnswerResult", "RequestAnswerResults");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RequestAnswerResult>("CrmEntitiesModel.FK_RequestRequestAnswerResult", "RequestAnswerResults", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_RequestRequestOption", "RequestOptions")]
        public EntityCollection<RequestOption> RequestOptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RequestOption>("CrmEntitiesModel.FK_RequestRequestOption", "RequestOptions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RequestOption>("CrmEntitiesModel.FK_RequestRequestOption", "RequestOptions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="AvLogRawDataSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AvLogRawDataSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AvLogRawDataSet object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="computerId">Initial value of the ComputerId property.</param>
        /// <param name="malwareDate">Initial value of the MalwareDate property.</param>
        /// <param name="updated">Initial value of the Updated property.</param>
        public static AvLogRawDataSet CreateAvLogRawDataSet(global::System.Int64 id, global::System.Int64 computerId, global::System.DateTime malwareDate, global::System.DateTime updated)
        {
            AvLogRawDataSet avLogRawDataSet = new AvLogRawDataSet();
            avLogRawDataSet.Id = id;
            avLogRawDataSet.ComputerId = computerId;
            avLogRawDataSet.MalwareDate = malwareDate;
            avLogRawDataSet.Updated = updated;
            return avLogRawDataSet;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ComputerId
        {
            get
            {
                return _ComputerId;
            }
            set
            {
                OnComputerIdChanging(value);
                ReportPropertyChanging("ComputerId");
                _ComputerId = StructuralObject.SetValidValue(value, "ComputerId");
                ReportPropertyChanged("ComputerId");
                OnComputerIdChanged();
            }
        }
        private global::System.Int64 _ComputerId;
        partial void OnComputerIdChanging(global::System.Int64 value);
        partial void OnComputerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MalwareName
        {
            get
            {
                return _MalwareName;
            }
            set
            {
                OnMalwareNameChanging(value);
                ReportPropertyChanging("MalwareName");
                _MalwareName = StructuralObject.SetValidValue(value, true, "MalwareName");
                ReportPropertyChanged("MalwareName");
                OnMalwareNameChanged();
            }
        }
        private global::System.String _MalwareName;
        partial void OnMalwareNameChanging(global::System.String value);
        partial void OnMalwareNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MalwareLocation
        {
            get
            {
                return _MalwareLocation;
            }
            set
            {
                OnMalwareLocationChanging(value);
                ReportPropertyChanging("MalwareLocation");
                _MalwareLocation = StructuralObject.SetValidValue(value, true, "MalwareLocation");
                ReportPropertyChanged("MalwareLocation");
                OnMalwareLocationChanged();
            }
        }
        private global::System.String _MalwareLocation;
        partial void OnMalwareLocationChanging(global::System.String value);
        partial void OnMalwareLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime MalwareDate
        {
            get
            {
                return _MalwareDate;
            }
            set
            {
                OnMalwareDateChanging(value);
                ReportPropertyChanging("MalwareDate");
                _MalwareDate = StructuralObject.SetValidValue(value, "MalwareDate");
                ReportPropertyChanged("MalwareDate");
                OnMalwareDateChanged();
            }
        }
        private global::System.DateTime _MalwareDate;
        partial void OnMalwareDateChanging(global::System.DateTime value);
        partial void OnMalwareDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MalwareAction
        {
            get
            {
                return _MalwareAction;
            }
            set
            {
                OnMalwareActionChanging(value);
                ReportPropertyChanging("MalwareAction");
                _MalwareAction = StructuralObject.SetValidValue(value, true, "MalwareAction");
                ReportPropertyChanged("MalwareAction");
                OnMalwareActionChanged();
            }
        }
        private global::System.String _MalwareAction;
        partial void OnMalwareActionChanging(global::System.String value);
        partial void OnMalwareActionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MalwareStatus
        {
            get
            {
                return _MalwareStatus;
            }
            set
            {
                OnMalwareStatusChanging(value);
                ReportPropertyChanging("MalwareStatus");
                _MalwareStatus = StructuralObject.SetValidValue(value, true, "MalwareStatus");
                ReportPropertyChanged("MalwareStatus");
                OnMalwareStatusChanged();
            }
        }
        private global::System.String _MalwareStatus;
        partial void OnMalwareStatusChanging(global::System.String value);
        partial void OnMalwareStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value, "Updated");
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_AvLogRawDataComputer", "Computers")]
        public Computer Computer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_AvLogRawDataComputer", "Computers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_AvLogRawDataComputer", "Computers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Computer> ComputerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_AvLogRawDataComputer", "Computers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Computer>("CrmEntitiesModel.FK_AvLogRawDataComputer", "Computers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="AvLogReportDataSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AvLogReportDataSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AvLogReportDataSet object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="reportId">Initial value of the ReportId property.</param>
        /// <param name="computerId">Initial value of the ComputerId property.</param>
        /// <param name="hasData">Initial value of the HasData property.</param>
        public static AvLogReportDataSet CreateAvLogReportDataSet(global::System.Int32 id, global::System.Guid reportId, global::System.Int64 computerId, global::System.Boolean hasData)
        {
            AvLogReportDataSet avLogReportDataSet = new AvLogReportDataSet();
            avLogReportDataSet.Id = id;
            avLogReportDataSet.ReportId = reportId;
            avLogReportDataSet.ComputerId = computerId;
            avLogReportDataSet.HasData = hasData;
            return avLogReportDataSet;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReportId
        {
            get
            {
                return _ReportId;
            }
            set
            {
                OnReportIdChanging(value);
                ReportPropertyChanging("ReportId");
                _ReportId = StructuralObject.SetValidValue(value, "ReportId");
                ReportPropertyChanged("ReportId");
                OnReportIdChanged();
            }
        }
        private global::System.Guid _ReportId;
        partial void OnReportIdChanging(global::System.Guid value);
        partial void OnReportIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ComputerName
        {
            get
            {
                return _ComputerName;
            }
            set
            {
                OnComputerNameChanging(value);
                ReportPropertyChanging("ComputerName");
                _ComputerName = StructuralObject.SetValidValue(value, true, "ComputerName");
                ReportPropertyChanged("ComputerName");
                OnComputerNameChanged();
            }
        }
        private global::System.String _ComputerName;
        partial void OnComputerNameChanging(global::System.String value);
        partial void OnComputerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ComputerIPAddess
        {
            get
            {
                return _ComputerIPAddess;
            }
            set
            {
                OnComputerIPAddessChanging(value);
                ReportPropertyChanging("ComputerIPAddess");
                _ComputerIPAddess = StructuralObject.SetValidValue(value, true, "ComputerIPAddess");
                ReportPropertyChanged("ComputerIPAddess");
                OnComputerIPAddessChanged();
            }
        }
        private global::System.String _ComputerIPAddess;
        partial void OnComputerIPAddessChanging(global::System.String value);
        partial void OnComputerIPAddessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MalwareName
        {
            get
            {
                return _MalwareName;
            }
            set
            {
                OnMalwareNameChanging(value);
                ReportPropertyChanging("MalwareName");
                _MalwareName = StructuralObject.SetValidValue(value, true, "MalwareName");
                ReportPropertyChanged("MalwareName");
                OnMalwareNameChanged();
            }
        }
        private global::System.String _MalwareName;
        partial void OnMalwareNameChanging(global::System.String value);
        partial void OnMalwareNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MalwareLocation
        {
            get
            {
                return _MalwareLocation;
            }
            set
            {
                OnMalwareLocationChanging(value);
                ReportPropertyChanging("MalwareLocation");
                _MalwareLocation = StructuralObject.SetValidValue(value, true, "MalwareLocation");
                ReportPropertyChanged("MalwareLocation");
                OnMalwareLocationChanged();
            }
        }
        private global::System.String _MalwareLocation;
        partial void OnMalwareLocationChanging(global::System.String value);
        partial void OnMalwareLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MalwareDate
        {
            get
            {
                return _MalwareDate;
            }
            set
            {
                OnMalwareDateChanging(value);
                ReportPropertyChanging("MalwareDate");
                _MalwareDate = StructuralObject.SetValidValue(value, "MalwareDate");
                ReportPropertyChanged("MalwareDate");
                OnMalwareDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _MalwareDate;
        partial void OnMalwareDateChanging(Nullable<global::System.DateTime> value);
        partial void OnMalwareDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MalwareAction
        {
            get
            {
                return _MalwareAction;
            }
            set
            {
                OnMalwareActionChanging(value);
                ReportPropertyChanging("MalwareAction");
                _MalwareAction = StructuralObject.SetValidValue(value, true, "MalwareAction");
                ReportPropertyChanged("MalwareAction");
                OnMalwareActionChanged();
            }
        }
        private global::System.String _MalwareAction;
        partial void OnMalwareActionChanging(global::System.String value);
        partial void OnMalwareActionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MalwareStatus
        {
            get
            {
                return _MalwareStatus;
            }
            set
            {
                OnMalwareStatusChanging(value);
                ReportPropertyChanging("MalwareStatus");
                _MalwareStatus = StructuralObject.SetValidValue(value, true, "MalwareStatus");
                ReportPropertyChanged("MalwareStatus");
                OnMalwareStatusChanged();
            }
        }
        private global::System.String _MalwareStatus;
        partial void OnMalwareStatusChanging(global::System.String value);
        partial void OnMalwareStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ComputerId
        {
            get
            {
                return _ComputerId;
            }
            set
            {
                OnComputerIdChanging(value);
                ReportPropertyChanging("ComputerId");
                _ComputerId = StructuralObject.SetValidValue(value, "ComputerId");
                ReportPropertyChanged("ComputerId");
                OnComputerIdChanged();
            }
        }
        private global::System.Int64 _ComputerId;
        partial void OnComputerIdChanging(global::System.Int64 value);
        partial void OnComputerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasData
        {
            get
            {
                return _HasData;
            }
            set
            {
                OnHasDataChanging(value);
                ReportPropertyChanging("HasData");
                _HasData = StructuralObject.SetValidValue(value, "HasData");
                ReportPropertyChanged("HasData");
                OnHasDataChanged();
            }
        }
        private global::System.Boolean _HasData;
        partial void OnHasDataChanging(global::System.Boolean value);
        partial void OnHasDataChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_AvLogReportDataReport", "Reports")]
        public Report Report
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_AvLogReportDataReport", "Reports").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_AvLogReportDataReport", "Reports").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Report> ReportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_AvLogReportDataReport", "Reports");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Report>("CrmEntitiesModel.FK_AvLogReportDataReport", "Reports", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="AvUpdatesRawDataSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AvUpdatesRawDataSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AvUpdatesRawDataSet object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="computerId">Initial value of the ComputerId property.</param>
        /// <param name="updated">Initial value of the Updated property.</param>
        public static AvUpdatesRawDataSet CreateAvUpdatesRawDataSet(global::System.Int64 id, global::System.Int16 status, global::System.Int64 computerId, global::System.DateTime updated)
        {
            AvUpdatesRawDataSet avUpdatesRawDataSet = new AvUpdatesRawDataSet();
            avUpdatesRawDataSet.Id = id;
            avUpdatesRawDataSet.Status = status;
            avUpdatesRawDataSet.ComputerId = computerId;
            avUpdatesRawDataSet.Updated = updated;
            return avUpdatesRawDataSet;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, true, "Version");
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.String _Version;
        partial void OnVersionChanging(global::System.String value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int16 _Status;
        partial void OnStatusChanging(global::System.Int16 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ComputerId
        {
            get
            {
                return _ComputerId;
            }
            set
            {
                OnComputerIdChanging(value);
                ReportPropertyChanging("ComputerId");
                _ComputerId = StructuralObject.SetValidValue(value, "ComputerId");
                ReportPropertyChanged("ComputerId");
                OnComputerIdChanged();
            }
        }
        private global::System.Int64 _ComputerId;
        partial void OnComputerIdChanging(global::System.Int64 value);
        partial void OnComputerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value, "Updated");
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_AvUpdatesRawDataComputer", "Computers")]
        public Computer Computer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_AvUpdatesRawDataComputer", "Computers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_AvUpdatesRawDataComputer", "Computers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Computer> ComputerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_AvUpdatesRawDataComputer", "Computers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Computer>("CrmEntitiesModel.FK_AvUpdatesRawDataComputer", "Computers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="AvUpdatesReportDataSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AvUpdatesReportDataSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AvUpdatesReportDataSet object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="computerId">Initial value of the ComputerId property.</param>
        /// <param name="reportId">Initial value of the ReportId property.</param>
        /// <param name="hasData">Initial value of the HasData property.</param>
        public static AvUpdatesReportDataSet CreateAvUpdatesReportDataSet(global::System.Int64 id, global::System.Int16 status, global::System.Int64 computerId, global::System.Guid reportId, global::System.Boolean hasData)
        {
            AvUpdatesReportDataSet avUpdatesReportDataSet = new AvUpdatesReportDataSet();
            avUpdatesReportDataSet.Id = id;
            avUpdatesReportDataSet.Status = status;
            avUpdatesReportDataSet.ComputerId = computerId;
            avUpdatesReportDataSet.ReportId = reportId;
            avUpdatesReportDataSet.HasData = hasData;
            return avUpdatesReportDataSet;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, true, "Version");
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.String _Version;
        partial void OnVersionChanging(global::System.String value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int16 _Status;
        partial void OnStatusChanging(global::System.Int16 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ComputerId
        {
            get
            {
                return _ComputerId;
            }
            set
            {
                OnComputerIdChanging(value);
                ReportPropertyChanging("ComputerId");
                _ComputerId = StructuralObject.SetValidValue(value, "ComputerId");
                ReportPropertyChanged("ComputerId");
                OnComputerIdChanged();
            }
        }
        private global::System.Int64 _ComputerId;
        partial void OnComputerIdChanging(global::System.Int64 value);
        partial void OnComputerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReportId
        {
            get
            {
                return _ReportId;
            }
            set
            {
                OnReportIdChanging(value);
                ReportPropertyChanging("ReportId");
                _ReportId = StructuralObject.SetValidValue(value, "ReportId");
                ReportPropertyChanged("ReportId");
                OnReportIdChanged();
            }
        }
        private global::System.Guid _ReportId;
        partial void OnReportIdChanging(global::System.Guid value);
        partial void OnReportIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ComputerName
        {
            get
            {
                return _ComputerName;
            }
            set
            {
                OnComputerNameChanging(value);
                ReportPropertyChanging("ComputerName");
                _ComputerName = StructuralObject.SetValidValue(value, true, "ComputerName");
                ReportPropertyChanged("ComputerName");
                OnComputerNameChanged();
            }
        }
        private global::System.String _ComputerName;
        partial void OnComputerNameChanging(global::System.String value);
        partial void OnComputerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ComputerIPAddess
        {
            get
            {
                return _ComputerIPAddess;
            }
            set
            {
                OnComputerIPAddessChanging(value);
                ReportPropertyChanging("ComputerIPAddess");
                _ComputerIPAddess = StructuralObject.SetValidValue(value, true, "ComputerIPAddess");
                ReportPropertyChanged("ComputerIPAddess");
                OnComputerIPAddessChanged();
            }
        }
        private global::System.String _ComputerIPAddess;
        partial void OnComputerIPAddessChanging(global::System.String value);
        partial void OnComputerIPAddessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasData
        {
            get
            {
                return _HasData;
            }
            set
            {
                OnHasDataChanging(value);
                ReportPropertyChanging("HasData");
                _HasData = StructuralObject.SetValidValue(value, "HasData");
                ReportPropertyChanged("HasData");
                OnHasDataChanged();
            }
        }
        private global::System.Boolean _HasData;
        partial void OnHasDataChanging(global::System.Boolean value);
        partial void OnHasDataChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_ReportAvUpdatesReportData", "Reports")]
        public Report Report
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_ReportAvUpdatesReportData", "Reports").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_ReportAvUpdatesReportData", "Reports").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Report> ReportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_ReportAvUpdatesReportData", "Reports");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Report>("CrmEntitiesModel.FK_ReportAvUpdatesReportData", "Reports", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="CisConfigRawDataSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CisConfigRawDataSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CisConfigRawDataSet object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="computerId">Initial value of the ComputerId property.</param>
        /// <param name="componentEnabled">Initial value of the ComponentEnabled property.</param>
        /// <param name="componentInstalled">Initial value of the ComponentInstalled property.</param>
        /// <param name="updated">Initial value of the Updated property.</param>
        public static CisConfigRawDataSet CreateCisConfigRawDataSet(global::System.Int64 id, global::System.Int64 computerId, global::System.Boolean componentEnabled, global::System.Boolean componentInstalled, global::System.DateTime updated)
        {
            CisConfigRawDataSet cisConfigRawDataSet = new CisConfigRawDataSet();
            cisConfigRawDataSet.Id = id;
            cisConfigRawDataSet.ComputerId = computerId;
            cisConfigRawDataSet.ComponentEnabled = componentEnabled;
            cisConfigRawDataSet.ComponentInstalled = componentInstalled;
            cisConfigRawDataSet.Updated = updated;
            return cisConfigRawDataSet;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ComputerId
        {
            get
            {
                return _ComputerId;
            }
            set
            {
                OnComputerIdChanging(value);
                ReportPropertyChanging("ComputerId");
                _ComputerId = StructuralObject.SetValidValue(value, "ComputerId");
                ReportPropertyChanged("ComputerId");
                OnComputerIdChanged();
            }
        }
        private global::System.Int64 _ComputerId;
        partial void OnComputerIdChanging(global::System.Int64 value);
        partial void OnComputerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ComponentName
        {
            get
            {
                return _ComponentName;
            }
            set
            {
                OnComponentNameChanging(value);
                ReportPropertyChanging("ComponentName");
                _ComponentName = StructuralObject.SetValidValue(value, true, "ComponentName");
                ReportPropertyChanged("ComponentName");
                OnComponentNameChanged();
            }
        }
        private global::System.String _ComponentName;
        partial void OnComponentNameChanging(global::System.String value);
        partial void OnComponentNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ComponentEnabled
        {
            get
            {
                return _ComponentEnabled;
            }
            set
            {
                OnComponentEnabledChanging(value);
                ReportPropertyChanging("ComponentEnabled");
                _ComponentEnabled = StructuralObject.SetValidValue(value, "ComponentEnabled");
                ReportPropertyChanged("ComponentEnabled");
                OnComponentEnabledChanged();
            }
        }
        private global::System.Boolean _ComponentEnabled;
        partial void OnComponentEnabledChanging(global::System.Boolean value);
        partial void OnComponentEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ComponentInstalled
        {
            get
            {
                return _ComponentInstalled;
            }
            set
            {
                OnComponentInstalledChanging(value);
                ReportPropertyChanging("ComponentInstalled");
                _ComponentInstalled = StructuralObject.SetValidValue(value, "ComponentInstalled");
                ReportPropertyChanged("ComponentInstalled");
                OnComponentInstalledChanged();
            }
        }
        private global::System.Boolean _ComponentInstalled;
        partial void OnComponentInstalledChanging(global::System.Boolean value);
        partial void OnComponentInstalledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CisVersion
        {
            get
            {
                return _CisVersion;
            }
            set
            {
                OnCisVersionChanging(value);
                ReportPropertyChanging("CisVersion");
                _CisVersion = StructuralObject.SetValidValue(value, true, "CisVersion");
                ReportPropertyChanged("CisVersion");
                OnCisVersionChanged();
            }
        }
        private global::System.String _CisVersion;
        partial void OnCisVersionChanging(global::System.String value);
        partial void OnCisVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value, "Updated");
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_CisConfigRawDataComputer", "Computers")]
        public Computer Computer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_CisConfigRawDataComputer", "Computers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_CisConfigRawDataComputer", "Computers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Computer> ComputerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_CisConfigRawDataComputer", "Computers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Computer>("CrmEntitiesModel.FK_CisConfigRawDataComputer", "Computers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="CisConfigReportDataSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CisConfigReportDataSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CisConfigReportDataSet object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="reportId">Initial value of the ReportId property.</param>
        /// <param name="computerId">Initial value of the ComputerId property.</param>
        /// <param name="hasData">Initial value of the HasData property.</param>
        public static CisConfigReportDataSet CreateCisConfigReportDataSet(global::System.Int32 id, global::System.Guid reportId, global::System.Int64 computerId, global::System.Boolean hasData)
        {
            CisConfigReportDataSet cisConfigReportDataSet = new CisConfigReportDataSet();
            cisConfigReportDataSet.Id = id;
            cisConfigReportDataSet.ReportId = reportId;
            cisConfigReportDataSet.ComputerId = computerId;
            cisConfigReportDataSet.HasData = hasData;
            return cisConfigReportDataSet;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReportId
        {
            get
            {
                return _ReportId;
            }
            set
            {
                OnReportIdChanging(value);
                ReportPropertyChanging("ReportId");
                _ReportId = StructuralObject.SetValidValue(value, "ReportId");
                ReportPropertyChanged("ReportId");
                OnReportIdChanged();
            }
        }
        private global::System.Guid _ReportId;
        partial void OnReportIdChanging(global::System.Guid value);
        partial void OnReportIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ComputerId
        {
            get
            {
                return _ComputerId;
            }
            set
            {
                OnComputerIdChanging(value);
                ReportPropertyChanging("ComputerId");
                _ComputerId = StructuralObject.SetValidValue(value, "ComputerId");
                ReportPropertyChanged("ComputerId");
                OnComputerIdChanged();
            }
        }
        private global::System.Int64 _ComputerId;
        partial void OnComputerIdChanging(global::System.Int64 value);
        partial void OnComputerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ComputerName
        {
            get
            {
                return _ComputerName;
            }
            set
            {
                OnComputerNameChanging(value);
                ReportPropertyChanging("ComputerName");
                _ComputerName = StructuralObject.SetValidValue(value, true, "ComputerName");
                ReportPropertyChanged("ComputerName");
                OnComputerNameChanged();
            }
        }
        private global::System.String _ComputerName;
        partial void OnComputerNameChanging(global::System.String value);
        partial void OnComputerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ComputerIPAddess
        {
            get
            {
                return _ComputerIPAddess;
            }
            set
            {
                OnComputerIPAddessChanging(value);
                ReportPropertyChanging("ComputerIPAddess");
                _ComputerIPAddess = StructuralObject.SetValidValue(value, true, "ComputerIPAddess");
                ReportPropertyChanged("ComputerIPAddess");
                OnComputerIPAddessChanged();
            }
        }
        private global::System.String _ComputerIPAddess;
        partial void OnComputerIPAddessChanging(global::System.String value);
        partial void OnComputerIPAddessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GroupName
        {
            get
            {
                return _GroupName;
            }
            set
            {
                OnGroupNameChanging(value);
                ReportPropertyChanging("GroupName");
                _GroupName = StructuralObject.SetValidValue(value, true, "GroupName");
                ReportPropertyChanged("GroupName");
                OnGroupNameChanged();
            }
        }
        private global::System.String _GroupName;
        partial void OnGroupNameChanging(global::System.String value);
        partial void OnGroupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ComponentName
        {
            get
            {
                return _ComponentName;
            }
            set
            {
                OnComponentNameChanging(value);
                ReportPropertyChanging("ComponentName");
                _ComponentName = StructuralObject.SetValidValue(value, true, "ComponentName");
                ReportPropertyChanged("ComponentName");
                OnComponentNameChanged();
            }
        }
        private global::System.String _ComponentName;
        partial void OnComponentNameChanging(global::System.String value);
        partial void OnComponentNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ComponentEnabled
        {
            get
            {
                return _ComponentEnabled;
            }
            set
            {
                OnComponentEnabledChanging(value);
                ReportPropertyChanging("ComponentEnabled");
                _ComponentEnabled = StructuralObject.SetValidValue(value, "ComponentEnabled");
                ReportPropertyChanged("ComponentEnabled");
                OnComponentEnabledChanged();
            }
        }
        private Nullable<global::System.Boolean> _ComponentEnabled;
        partial void OnComponentEnabledChanging(Nullable<global::System.Boolean> value);
        partial void OnComponentEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ComponentInstalled
        {
            get
            {
                return _ComponentInstalled;
            }
            set
            {
                OnComponentInstalledChanging(value);
                ReportPropertyChanging("ComponentInstalled");
                _ComponentInstalled = StructuralObject.SetValidValue(value, "ComponentInstalled");
                ReportPropertyChanged("ComponentInstalled");
                OnComponentInstalledChanged();
            }
        }
        private Nullable<global::System.Boolean> _ComponentInstalled;
        partial void OnComponentInstalledChanging(Nullable<global::System.Boolean> value);
        partial void OnComponentInstalledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CisVersion
        {
            get
            {
                return _CisVersion;
            }
            set
            {
                OnCisVersionChanging(value);
                ReportPropertyChanging("CisVersion");
                _CisVersion = StructuralObject.SetValidValue(value, true, "CisVersion");
                ReportPropertyChanged("CisVersion");
                OnCisVersionChanged();
            }
        }
        private global::System.String _CisVersion;
        partial void OnCisVersionChanging(global::System.String value);
        partial void OnCisVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasData
        {
            get
            {
                return _HasData;
            }
            set
            {
                OnHasDataChanging(value);
                ReportPropertyChanging("HasData");
                _HasData = StructuralObject.SetValidValue(value, "HasData");
                ReportPropertyChanged("HasData");
                OnHasDataChanged();
            }
        }
        private global::System.Boolean _HasData;
        partial void OnHasDataChanging(global::System.Boolean value);
        partial void OnHasDataChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_CisConfigReportDataReport", "Reports")]
        public Report Report
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_CisConfigReportDataReport", "Reports").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_CisConfigReportDataReport", "Reports").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Report> ReportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_CisConfigReportDataReport", "Reports");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Report>("CrmEntitiesModel.FK_CisConfigReportDataReport", "Reports", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="Computer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Computer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Computer object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="uid">Initial value of the Uid property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="modified">Initial value of the Modified property.</param>
        /// <param name="isLicensed">Initial value of the IsLicensed property.</param>
        /// <param name="timeStamp">Initial value of the TimeStamp property.</param>
        /// <param name="visible">Initial value of the Visible property.</param>
        /// <param name="warrantyStatus">Initial value of the WarrantyStatus property.</param>
        /// <param name="localPolicyId">Initial value of the LocalPolicyId property.</param>
        /// <param name="internetPolicyId">Initial value of the InternetPolicyId property.</param>
        /// <param name="policyStatus">Initial value of the PolicyStatus property.</param>
        /// <param name="remoteMode">Initial value of the RemoteMode property.</param>
        /// <param name="forceRemoteMode">Initial value of the ForceRemoteMode property.</param>
        /// <param name="avBasesVersion">Initial value of the AvBasesVersion property.</param>
        /// <param name="beingUninstalled">Initial value of the BeingUninstalled property.</param>
        public static Computer CreateComputer(global::System.Int64 id, global::System.Guid uid, global::System.String name, global::System.DateTime created, global::System.DateTime modified, global::System.Boolean isLicensed, global::System.Byte[] timeStamp, global::System.Boolean visible, global::System.Int16 warrantyStatus, global::System.Int64 localPolicyId, global::System.Int64 internetPolicyId, global::System.Int16 policyStatus, global::System.Boolean remoteMode, global::System.Boolean forceRemoteMode, global::System.String avBasesVersion, global::System.Boolean beingUninstalled)
        {
            Computer computer = new Computer();
            computer.Id = id;
            computer.Uid = uid;
            computer.Name = name;
            computer.Created = created;
            computer.Modified = modified;
            computer.IsLicensed = isLicensed;
            computer.TimeStamp = timeStamp;
            computer.Visible = visible;
            computer.WarrantyStatus = warrantyStatus;
            computer.LocalPolicyId = localPolicyId;
            computer.InternetPolicyId = internetPolicyId;
            computer.PolicyStatus = policyStatus;
            computer.RemoteMode = remoteMode;
            computer.ForceRemoteMode = forceRemoteMode;
            computer.AvBasesVersion = avBasesVersion;
            computer.BeingUninstalled = beingUninstalled;
            return computer;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Sid
        {
            get
            {
                return _Sid;
            }
            set
            {
                OnSidChanging(value);
                ReportPropertyChanging("Sid");
                _Sid = StructuralObject.SetValidValue(value, true, "Sid");
                ReportPropertyChanged("Sid");
                OnSidChanged();
            }
        }
        private global::System.String _Sid;
        partial void OnSidChanging(global::System.String value);
        partial void OnSidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Uid
        {
            get
            {
                return _Uid;
            }
            set
            {
                OnUidChanging(value);
                ReportPropertyChanging("Uid");
                _Uid = StructuralObject.SetValidValue(value, "Uid");
                ReportPropertyChanged("Uid");
                OnUidChanged();
            }
        }
        private global::System.Guid _Uid;
        partial void OnUidChanging(global::System.Guid value);
        partial void OnUidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DnsName
        {
            get
            {
                return _DnsName;
            }
            set
            {
                OnDnsNameChanging(value);
                ReportPropertyChanging("DnsName");
                _DnsName = StructuralObject.SetValidValue(value, true, "DnsName");
                ReportPropertyChanged("DnsName");
                OnDnsNameChanged();
            }
        }
        private global::System.String _DnsName;
        partial void OnDnsNameChanging(global::System.String value);
        partial void OnDnsNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value, "Created");
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value, "Modified");
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private global::System.DateTime _Modified;
        partial void OnModifiedChanging(global::System.DateTime value);
        partial void OnModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLicensed
        {
            get
            {
                return _IsLicensed;
            }
            set
            {
                OnIsLicensedChanging(value);
                ReportPropertyChanging("IsLicensed");
                _IsLicensed = StructuralObject.SetValidValue(value, "IsLicensed");
                ReportPropertyChanged("IsLicensed");
                OnIsLicensedChanged();
            }
        }
        private global::System.Boolean _IsLicensed;
        partial void OnIsLicensedChanging(global::System.Boolean value);
        partial void OnIsLicensedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] TimeStamp
        {
            get
            {
                return StructuralObject.GetValidValue(_TimeStamp);
            }
            set
            {
                OnTimeStampChanging(value);
                ReportPropertyChanging("TimeStamp");
                _TimeStamp = StructuralObject.SetValidValue(value, true, "TimeStamp");
                ReportPropertyChanged("TimeStamp");
                OnTimeStampChanged();
            }
        }
        private global::System.Byte[] _TimeStamp;
        partial void OnTimeStampChanging(global::System.Byte[] value);
        partial void OnTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Visible
        {
            get
            {
                return _Visible;
            }
            set
            {
                OnVisibleChanging(value);
                ReportPropertyChanging("Visible");
                _Visible = StructuralObject.SetValidValue(value, "Visible");
                ReportPropertyChanged("Visible");
                OnVisibleChanged();
            }
        }
        private global::System.Boolean _Visible;
        partial void OnVisibleChanging(global::System.Boolean value);
        partial void OnVisibleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AgentPackageName
        {
            get
            {
                return _AgentPackageName;
            }
            set
            {
                OnAgentPackageNameChanging(value);
                ReportPropertyChanging("AgentPackageName");
                _AgentPackageName = StructuralObject.SetValidValue(value, true, "AgentPackageName");
                ReportPropertyChanged("AgentPackageName");
                OnAgentPackageNameChanged();
            }
        }
        private global::System.String _AgentPackageName;
        partial void OnAgentPackageNameChanging(global::System.String value);
        partial void OnAgentPackageNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RejectedConnectionDate
        {
            get
            {
                return _RejectedConnectionDate;
            }
            set
            {
                OnRejectedConnectionDateChanging(value);
                ReportPropertyChanging("RejectedConnectionDate");
                _RejectedConnectionDate = StructuralObject.SetValidValue(value, "RejectedConnectionDate");
                ReportPropertyChanged("RejectedConnectionDate");
                OnRejectedConnectionDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RejectedConnectionDate;
        partial void OnRejectedConnectionDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRejectedConnectionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] MacAddress
        {
            get
            {
                return StructuralObject.GetValidValue(_MacAddress);
            }
            set
            {
                OnMacAddressChanging(value);
                ReportPropertyChanging("MacAddress");
                _MacAddress = StructuralObject.SetValidValue(value, true, "MacAddress");
                ReportPropertyChanged("MacAddress");
                OnMacAddressChanged();
            }
        }
        private global::System.Byte[] _MacAddress;
        partial void OnMacAddressChanging(global::System.Byte[] value);
        partial void OnMacAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] IPAddress
        {
            get
            {
                return StructuralObject.GetValidValue(_IPAddress);
            }
            set
            {
                OnIPAddressChanging(value);
                ReportPropertyChanging("IPAddress");
                _IPAddress = StructuralObject.SetValidValue(value, true, "IPAddress");
                ReportPropertyChanged("IPAddress");
                OnIPAddressChanged();
            }
        }
        private global::System.Byte[] _IPAddress;
        partial void OnIPAddressChanging(global::System.Byte[] value);
        partial void OnIPAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 WarrantyStatus
        {
            get
            {
                return _WarrantyStatus;
            }
            set
            {
                OnWarrantyStatusChanging(value);
                ReportPropertyChanging("WarrantyStatus");
                _WarrantyStatus = StructuralObject.SetValidValue(value, "WarrantyStatus");
                ReportPropertyChanged("WarrantyStatus");
                OnWarrantyStatusChanged();
            }
        }
        private global::System.Int16 _WarrantyStatus;
        partial void OnWarrantyStatusChanging(global::System.Int16 value);
        partial void OnWarrantyStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 LocalPolicyId
        {
            get
            {
                return _LocalPolicyId;
            }
            set
            {
                OnLocalPolicyIdChanging(value);
                ReportPropertyChanging("LocalPolicyId");
                _LocalPolicyId = StructuralObject.SetValidValue(value, "LocalPolicyId");
                ReportPropertyChanged("LocalPolicyId");
                OnLocalPolicyIdChanged();
            }
        }
        private global::System.Int64 _LocalPolicyId;
        partial void OnLocalPolicyIdChanging(global::System.Int64 value);
        partial void OnLocalPolicyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 InternetPolicyId
        {
            get
            {
                return _InternetPolicyId;
            }
            set
            {
                OnInternetPolicyIdChanging(value);
                ReportPropertyChanging("InternetPolicyId");
                _InternetPolicyId = StructuralObject.SetValidValue(value, "InternetPolicyId");
                ReportPropertyChanged("InternetPolicyId");
                OnInternetPolicyIdChanged();
            }
        }
        private global::System.Int64 _InternetPolicyId;
        partial void OnInternetPolicyIdChanging(global::System.Int64 value);
        partial void OnInternetPolicyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 PolicyStatus
        {
            get
            {
                return _PolicyStatus;
            }
            set
            {
                OnPolicyStatusChanging(value);
                ReportPropertyChanging("PolicyStatus");
                _PolicyStatus = StructuralObject.SetValidValue(value, "PolicyStatus");
                ReportPropertyChanged("PolicyStatus");
                OnPolicyStatusChanged();
            }
        }
        private global::System.Int16 _PolicyStatus;
        partial void OnPolicyStatusChanging(global::System.Int16 value);
        partial void OnPolicyStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PolicyLastPollDate
        {
            get
            {
                return _PolicyLastPollDate;
            }
            set
            {
                OnPolicyLastPollDateChanging(value);
                ReportPropertyChanging("PolicyLastPollDate");
                _PolicyLastPollDate = StructuralObject.SetValidValue(value, "PolicyLastPollDate");
                ReportPropertyChanged("PolicyLastPollDate");
                OnPolicyLastPollDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PolicyLastPollDate;
        partial void OnPolicyLastPollDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPolicyLastPollDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PolicyNonComplianceDate
        {
            get
            {
                return _PolicyNonComplianceDate;
            }
            set
            {
                OnPolicyNonComplianceDateChanging(value);
                ReportPropertyChanging("PolicyNonComplianceDate");
                _PolicyNonComplianceDate = StructuralObject.SetValidValue(value, "PolicyNonComplianceDate");
                ReportPropertyChanged("PolicyNonComplianceDate");
                OnPolicyNonComplianceDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PolicyNonComplianceDate;
        partial void OnPolicyNonComplianceDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPolicyNonComplianceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ComputerGroupId
        {
            get
            {
                return _ComputerGroupId;
            }
            set
            {
                OnComputerGroupIdChanging(value);
                ReportPropertyChanging("ComputerGroupId");
                _ComputerGroupId = StructuralObject.SetValidValue(value, "ComputerGroupId");
                ReportPropertyChanged("ComputerGroupId");
                OnComputerGroupIdChanged();
            }
        }
        private Nullable<global::System.Int64> _ComputerGroupId;
        partial void OnComputerGroupIdChanging(Nullable<global::System.Int64> value);
        partial void OnComputerGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean RemoteMode
        {
            get
            {
                return _RemoteMode;
            }
            set
            {
                OnRemoteModeChanging(value);
                ReportPropertyChanging("RemoteMode");
                _RemoteMode = StructuralObject.SetValidValue(value, "RemoteMode");
                ReportPropertyChanged("RemoteMode");
                OnRemoteModeChanged();
            }
        }
        private global::System.Boolean _RemoteMode;
        partial void OnRemoteModeChanging(global::System.Boolean value);
        partial void OnRemoteModeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ForceRemoteMode
        {
            get
            {
                return _ForceRemoteMode;
            }
            set
            {
                OnForceRemoteModeChanging(value);
                ReportPropertyChanging("ForceRemoteMode");
                _ForceRemoteMode = StructuralObject.SetValidValue(value, "ForceRemoteMode");
                ReportPropertyChanged("ForceRemoteMode");
                OnForceRemoteModeChanged();
            }
        }
        private global::System.Boolean _ForceRemoteMode;
        partial void OnForceRemoteModeChanging(global::System.Boolean value);
        partial void OnForceRemoteModeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AvBasesVersion
        {
            get
            {
                return _AvBasesVersion;
            }
            set
            {
                OnAvBasesVersionChanging(value);
                ReportPropertyChanging("AvBasesVersion");
                _AvBasesVersion = StructuralObject.SetValidValue(value, false, "AvBasesVersion");
                ReportPropertyChanged("AvBasesVersion");
                OnAvBasesVersionChanged();
            }
        }
        private global::System.String _AvBasesVersion;
        partial void OnAvBasesVersionChanging(global::System.String value);
        partial void OnAvBasesVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AvBasesUpdateTime
        {
            get
            {
                return _AvBasesUpdateTime;
            }
            set
            {
                OnAvBasesUpdateTimeChanging(value);
                ReportPropertyChanging("AvBasesUpdateTime");
                _AvBasesUpdateTime = StructuralObject.SetValidValue(value, "AvBasesUpdateTime");
                ReportPropertyChanged("AvBasesUpdateTime");
                OnAvBasesUpdateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _AvBasesUpdateTime;
        partial void OnAvBasesUpdateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnAvBasesUpdateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean BeingUninstalled
        {
            get
            {
                return _BeingUninstalled;
            }
            set
            {
                OnBeingUninstalledChanging(value);
                ReportPropertyChanging("BeingUninstalled");
                _BeingUninstalled = StructuralObject.SetValidValue(value, "BeingUninstalled");
                ReportPropertyChanged("BeingUninstalled");
                OnBeingUninstalledChanged();
            }
        }
        private global::System.Boolean _BeingUninstalled;
        partial void OnBeingUninstalledChanging(global::System.Boolean value);
        partial void OnBeingUninstalledChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_AlertsComputers", "Alerts")]
        public EntityCollection<Alert> Alerts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Alert>("CrmEntitiesModel.FK_AlertsComputers", "Alerts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Alert>("CrmEntitiesModel.FK_AlertsComputers", "Alerts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_AvLogRawDataComputer", "AvLogRawDataSet")]
        public EntityCollection<AvLogRawDataSet> AvLogRawDataSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AvLogRawDataSet>("CrmEntitiesModel.FK_AvLogRawDataComputer", "AvLogRawDataSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AvLogRawDataSet>("CrmEntitiesModel.FK_AvLogRawDataComputer", "AvLogRawDataSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_AvUpdatesRawDataComputer", "AvUpdatesRawDataSet")]
        public EntityCollection<AvUpdatesRawDataSet> AvUpdatesRawDataSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AvUpdatesRawDataSet>("CrmEntitiesModel.FK_AvUpdatesRawDataComputer", "AvUpdatesRawDataSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AvUpdatesRawDataSet>("CrmEntitiesModel.FK_AvUpdatesRawDataComputer", "AvUpdatesRawDataSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_CisConfigRawDataComputer", "CisConfigRawDataSet")]
        public EntityCollection<CisConfigRawDataSet> CisConfigRawDataSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CisConfigRawDataSet>("CrmEntitiesModel.FK_CisConfigRawDataComputer", "CisConfigRawDataSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CisConfigRawDataSet>("CrmEntitiesModel.FK_CisConfigRawDataComputer", "CisConfigRawDataSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_ComputerDetailsRawDataComputer", "ComputerDetailsRawDataSet")]
        public EntityCollection<ComputerDetailsRawDataSet> ComputerDetailsRawDataSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ComputerDetailsRawDataSet>("CrmEntitiesModel.FK_ComputerDetailsRawDataComputer", "ComputerDetailsRawDataSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ComputerDetailsRawDataSet>("CrmEntitiesModel.FK_ComputerDetailsRawDataComputer", "ComputerDetailsRawDataSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_ComputerGroupComputer", "ComputerGroups")]
        public ComputerGroup ComputerGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ComputerGroup>("CrmEntitiesModel.FK_ComputerGroupComputer", "ComputerGroups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ComputerGroup>("CrmEntitiesModel.FK_ComputerGroupComputer", "ComputerGroups").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ComputerGroup> ComputerGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ComputerGroup>("CrmEntitiesModel.FK_ComputerGroupComputer", "ComputerGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ComputerGroup>("CrmEntitiesModel.FK_ComputerGroupComputer", "ComputerGroups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_ComputerProductConnection", "ProductConnections")]
        public EntityCollection<ProductConnection> ProductConnections
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductConnection>("CrmEntitiesModel.FK_ComputerProductConnection", "ProductConnections");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductConnection>("CrmEntitiesModel.FK_ComputerProductConnection", "ProductConnections", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_ComputerSequenceResult", "SequenceResults")]
        public EntityCollection<SequenceResult> SequenceResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SequenceResult>("CrmEntitiesModel.FK_ComputerSequenceResult", "SequenceResults");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SequenceResult>("CrmEntitiesModel.FK_ComputerSequenceResult", "SequenceResults", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_DefensePlusLogRawDataComputer", "DefensePlusLogRawDataSet")]
        public EntityCollection<DefensePlusLogRawDataSet> DefensePlusLogRawDataSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DefensePlusLogRawDataSet>("CrmEntitiesModel.FK_DefensePlusLogRawDataComputer", "DefensePlusLogRawDataSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DefensePlusLogRawDataSet>("CrmEntitiesModel.FK_DefensePlusLogRawDataComputer", "DefensePlusLogRawDataSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_DiscoveryDataComputers", "DiscoveryDataSet")]
        public EntityCollection<DiscoveryDataSet> DiscoveryDataSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DiscoveryDataSet>("CrmEntitiesModel.FK_DiscoveryDataComputers", "DiscoveryDataSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DiscoveryDataSet>("CrmEntitiesModel.FK_DiscoveryDataComputers", "DiscoveryDataSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_FirewallLogRawDataComputer", "FirewallLogRawDataSet")]
        public EntityCollection<FirewallLogRawDataSet> FirewallLogRawDataSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FirewallLogRawDataSet>("CrmEntitiesModel.FK_FirewallLogRawDataComputer", "FirewallLogRawDataSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FirewallLogRawDataSet>("CrmEntitiesModel.FK_FirewallLogRawDataComputer", "FirewallLogRawDataSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_InfectedItemRawDataComputer", "InfectedItemRawDataSet")]
        public EntityCollection<InfectedItemRawDataSet> InfectedItemRawDataSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InfectedItemRawDataSet>("CrmEntitiesModel.FK_InfectedItemRawDataComputer", "InfectedItemRawDataSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InfectedItemRawDataSet>("CrmEntitiesModel.FK_InfectedItemRawDataComputer", "InfectedItemRawDataSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_InstalledSoftwareRawDataComputer", "InstalledSoftwareRawDataSet")]
        public EntityCollection<InstalledSoftwareRawDataSet> InstalledSoftwareRawDataSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InstalledSoftwareRawDataSet>("CrmEntitiesModel.FK_InstalledSoftwareRawDataComputer", "InstalledSoftwareRawDataSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InstalledSoftwareRawDataSet>("CrmEntitiesModel.FK_InstalledSoftwareRawDataComputer", "InstalledSoftwareRawDataSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_InternetPolicyComputer", "Policies")]
        public Policy Policy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("CrmEntitiesModel.FK_InternetPolicyComputer", "Policies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("CrmEntitiesModel.FK_InternetPolicyComputer", "Policies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Policy> PolicyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("CrmEntitiesModel.FK_InternetPolicyComputer", "Policies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Policy>("CrmEntitiesModel.FK_InternetPolicyComputer", "Policies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_LocalPolicyComputer", "Policies")]
        public Policy Policy1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("CrmEntitiesModel.FK_LocalPolicyComputer", "Policies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("CrmEntitiesModel.FK_LocalPolicyComputer", "Policies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Policy> Policy1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("CrmEntitiesModel.FK_LocalPolicyComputer", "Policies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Policy>("CrmEntitiesModel.FK_LocalPolicyComputer", "Policies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_PolicyDeltaRawDataComputer", "PolicyDeltaRawDataSet")]
        public EntityCollection<PolicyDeltaRawDataSet> PolicyDeltaRawDataSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyDeltaRawDataSet>("CrmEntitiesModel.FK_PolicyDeltaRawDataComputer", "PolicyDeltaRawDataSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyDeltaRawDataSet>("CrmEntitiesModel.FK_PolicyDeltaRawDataComputer", "PolicyDeltaRawDataSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_QuarantineItemRawDataComputer", "QuarantineItemRawDataSet")]
        public EntityCollection<QuarantineItemRawDataSet> QuarantineItemRawDataSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<QuarantineItemRawDataSet>("CrmEntitiesModel.FK_QuarantineItemRawDataComputer", "QuarantineItemRawDataSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<QuarantineItemRawDataSet>("CrmEntitiesModel.FK_QuarantineItemRawDataComputer", "QuarantineItemRawDataSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "TaskComputers", "Tasks")]
        public EntityCollection<CrmTask> Tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CrmTask>("CrmEntitiesModel.TaskComputers", "Tasks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CrmTask>("CrmEntitiesModel.TaskComputers", "Tasks", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="ComputerDetailsRawDataSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ComputerDetailsRawDataSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ComputerDetailsRawDataSet object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="computerId">Initial value of the ComputerId property.</param>
        /// <param name="updated">Initial value of the Updated property.</param>
        public static ComputerDetailsRawDataSet CreateComputerDetailsRawDataSet(global::System.Int64 id, global::System.Int64 computerId, global::System.DateTime updated)
        {
            ComputerDetailsRawDataSet computerDetailsRawDataSet = new ComputerDetailsRawDataSet();
            computerDetailsRawDataSet.Id = id;
            computerDetailsRawDataSet.ComputerId = computerId;
            computerDetailsRawDataSet.Updated = updated;
            return computerDetailsRawDataSet;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OsName
        {
            get
            {
                return _OsName;
            }
            set
            {
                OnOsNameChanging(value);
                ReportPropertyChanging("OsName");
                _OsName = StructuralObject.SetValidValue(value, true, "OsName");
                ReportPropertyChanged("OsName");
                OnOsNameChanged();
            }
        }
        private global::System.String _OsName;
        partial void OnOsNameChanging(global::System.String value);
        partial void OnOsNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OsType
        {
            get
            {
                return _OsType;
            }
            set
            {
                OnOsTypeChanging(value);
                ReportPropertyChanging("OsType");
                _OsType = StructuralObject.SetValidValue(value, true, "OsType");
                ReportPropertyChanged("OsType");
                OnOsTypeChanged();
            }
        }
        private global::System.String _OsType;
        partial void OnOsTypeChanging(global::System.String value);
        partial void OnOsTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CPU
        {
            get
            {
                return _CPU;
            }
            set
            {
                OnCPUChanging(value);
                ReportPropertyChanging("CPU");
                _CPU = StructuralObject.SetValidValue(value, true, "CPU");
                ReportPropertyChanged("CPU");
                OnCPUChanged();
            }
        }
        private global::System.String _CPU;
        partial void OnCPUChanging(global::System.String value);
        partial void OnCPUChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RAM
        {
            get
            {
                return _RAM;
            }
            set
            {
                OnRAMChanging(value);
                ReportPropertyChanging("RAM");
                _RAM = StructuralObject.SetValidValue(value, true, "RAM");
                ReportPropertyChanged("RAM");
                OnRAMChanged();
            }
        }
        private global::System.String _RAM;
        partial void OnRAMChanging(global::System.String value);
        partial void OnRAMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HDD
        {
            get
            {
                return _HDD;
            }
            set
            {
                OnHDDChanging(value);
                ReportPropertyChanging("HDD");
                _HDD = StructuralObject.SetValidValue(value, true, "HDD");
                ReportPropertyChanged("HDD");
                OnHDDChanged();
            }
        }
        private global::System.String _HDD;
        partial void OnHDDChanging(global::System.String value);
        partial void OnHDDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ComputerId
        {
            get
            {
                return _ComputerId;
            }
            set
            {
                OnComputerIdChanging(value);
                ReportPropertyChanging("ComputerId");
                _ComputerId = StructuralObject.SetValidValue(value, "ComputerId");
                ReportPropertyChanged("ComputerId");
                OnComputerIdChanged();
            }
        }
        private global::System.Int64 _ComputerId;
        partial void OnComputerIdChanging(global::System.Int64 value);
        partial void OnComputerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value, "Updated");
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OsVersion
        {
            get
            {
                return _OsVersion;
            }
            set
            {
                OnOsVersionChanging(value);
                ReportPropertyChanging("OsVersion");
                _OsVersion = StructuralObject.SetValidValue(value, true, "OsVersion");
                ReportPropertyChanged("OsVersion");
                OnOsVersionChanged();
            }
        }
        private global::System.String _OsVersion;
        partial void OnOsVersionChanging(global::System.String value);
        partial void OnOsVersionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_ComputerDetailsRawDataComputer", "Computers")]
        public Computer Computer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_ComputerDetailsRawDataComputer", "Computers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_ComputerDetailsRawDataComputer", "Computers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Computer> ComputerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_ComputerDetailsRawDataComputer", "Computers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Computer>("CrmEntitiesModel.FK_ComputerDetailsRawDataComputer", "Computers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="ComputerDetailsReportDataSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ComputerDetailsReportDataSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ComputerDetailsReportDataSet object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="computerId">Initial value of the ComputerId property.</param>
        /// <param name="reportId">Initial value of the ReportId property.</param>
        /// <param name="computerCreated">Initial value of the ComputerCreated property.</param>
        public static ComputerDetailsReportDataSet CreateComputerDetailsReportDataSet(global::System.Int64 id, global::System.Int64 computerId, global::System.Guid reportId, global::System.DateTime computerCreated)
        {
            ComputerDetailsReportDataSet computerDetailsReportDataSet = new ComputerDetailsReportDataSet();
            computerDetailsReportDataSet.Id = id;
            computerDetailsReportDataSet.ComputerId = computerId;
            computerDetailsReportDataSet.ReportId = reportId;
            computerDetailsReportDataSet.ComputerCreated = computerCreated;
            return computerDetailsReportDataSet;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OsName
        {
            get
            {
                return _OsName;
            }
            set
            {
                OnOsNameChanging(value);
                ReportPropertyChanging("OsName");
                _OsName = StructuralObject.SetValidValue(value, true, "OsName");
                ReportPropertyChanged("OsName");
                OnOsNameChanged();
            }
        }
        private global::System.String _OsName;
        partial void OnOsNameChanging(global::System.String value);
        partial void OnOsNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OsType
        {
            get
            {
                return _OsType;
            }
            set
            {
                OnOsTypeChanging(value);
                ReportPropertyChanging("OsType");
                _OsType = StructuralObject.SetValidValue(value, true, "OsType");
                ReportPropertyChanged("OsType");
                OnOsTypeChanged();
            }
        }
        private global::System.String _OsType;
        partial void OnOsTypeChanging(global::System.String value);
        partial void OnOsTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CPU
        {
            get
            {
                return _CPU;
            }
            set
            {
                OnCPUChanging(value);
                ReportPropertyChanging("CPU");
                _CPU = StructuralObject.SetValidValue(value, true, "CPU");
                ReportPropertyChanged("CPU");
                OnCPUChanged();
            }
        }
        private global::System.String _CPU;
        partial void OnCPUChanging(global::System.String value);
        partial void OnCPUChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RAM
        {
            get
            {
                return _RAM;
            }
            set
            {
                OnRAMChanging(value);
                ReportPropertyChanging("RAM");
                _RAM = StructuralObject.SetValidValue(value, true, "RAM");
                ReportPropertyChanged("RAM");
                OnRAMChanged();
            }
        }
        private global::System.String _RAM;
        partial void OnRAMChanging(global::System.String value);
        partial void OnRAMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HDD
        {
            get
            {
                return _HDD;
            }
            set
            {
                OnHDDChanging(value);
                ReportPropertyChanging("HDD");
                _HDD = StructuralObject.SetValidValue(value, true, "HDD");
                ReportPropertyChanged("HDD");
                OnHDDChanged();
            }
        }
        private global::System.String _HDD;
        partial void OnHDDChanging(global::System.String value);
        partial void OnHDDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ComputerId
        {
            get
            {
                return _ComputerId;
            }
            set
            {
                OnComputerIdChanging(value);
                ReportPropertyChanging("ComputerId");
                _ComputerId = StructuralObject.SetValidValue(value, "ComputerId");
                ReportPropertyChanged("ComputerId");
                OnComputerIdChanged();
            }
        }
        private global::System.Int64 _ComputerId;
        partial void OnComputerIdChanging(global::System.Int64 value);
        partial void OnComputerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReportId
        {
            get
            {
                return _ReportId;
            }
            set
            {
                OnReportIdChanging(value);
                ReportPropertyChanging("ReportId");
                _ReportId = StructuralObject.SetValidValue(value, "ReportId");
                ReportPropertyChanged("ReportId");
                OnReportIdChanged();
            }
        }
        private global::System.Guid _ReportId;
        partial void OnReportIdChanging(global::System.Guid value);
        partial void OnReportIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ComputerName
        {
            get
            {
                return _ComputerName;
            }
            set
            {
                OnComputerNameChanging(value);
                ReportPropertyChanging("ComputerName");
                _ComputerName = StructuralObject.SetValidValue(value, true, "ComputerName");
                ReportPropertyChanged("ComputerName");
                OnComputerNameChanged();
            }
        }
        private global::System.String _ComputerName;
        partial void OnComputerNameChanging(global::System.String value);
        partial void OnComputerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ComputerDnsName
        {
            get
            {
                return _ComputerDnsName;
            }
            set
            {
                OnComputerDnsNameChanging(value);
                ReportPropertyChanging("ComputerDnsName");
                _ComputerDnsName = StructuralObject.SetValidValue(value, true, "ComputerDnsName");
                ReportPropertyChanged("ComputerDnsName");
                OnComputerDnsNameChanged();
            }
        }
        private global::System.String _ComputerDnsName;
        partial void OnComputerDnsNameChanging(global::System.String value);
        partial void OnComputerDnsNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ComputerIPAddess
        {
            get
            {
                return _ComputerIPAddess;
            }
            set
            {
                OnComputerIPAddessChanging(value);
                ReportPropertyChanging("ComputerIPAddess");
                _ComputerIPAddess = StructuralObject.SetValidValue(value, true, "ComputerIPAddess");
                ReportPropertyChanged("ComputerIPAddess");
                OnComputerIPAddessChanged();
            }
        }
        private global::System.String _ComputerIPAddess;
        partial void OnComputerIPAddessChanging(global::System.String value);
        partial void OnComputerIPAddessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OSVersion
        {
            get
            {
                return _OSVersion;
            }
            set
            {
                OnOSVersionChanging(value);
                ReportPropertyChanging("OSVersion");
                _OSVersion = StructuralObject.SetValidValue(value, true, "OSVersion");
                ReportPropertyChanged("OSVersion");
                OnOSVersionChanged();
            }
        }
        private global::System.String _OSVersion;
        partial void OnOSVersionChanging(global::System.String value);
        partial void OnOSVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ComputerCreated
        {
            get
            {
                return _ComputerCreated;
            }
            set
            {
                OnComputerCreatedChanging(value);
                ReportPropertyChanging("ComputerCreated");
                _ComputerCreated = StructuralObject.SetValidValue(value, "ComputerCreated");
                ReportPropertyChanged("ComputerCreated");
                OnComputerCreatedChanged();
            }
        }
        private global::System.DateTime _ComputerCreated;
        partial void OnComputerCreatedChanging(global::System.DateTime value);
        partial void OnComputerCreatedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_InstalledSoftwareReportDataComputerDetailsReportData", "InstalledSoftwareReportDataSet")]
        public EntityCollection<InstalledSoftwareReportDataSet> InstalledSoftwareReportDataSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InstalledSoftwareReportDataSet>("CrmEntitiesModel.FK_InstalledSoftwareReportDataComputerDetailsReportData", "InstalledSoftwareReportDataSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InstalledSoftwareReportDataSet>("CrmEntitiesModel.FK_InstalledSoftwareReportDataComputerDetailsReportData", "InstalledSoftwareReportDataSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_ReportComputerDetailsReportData", "Reports")]
        public Report Report
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_ReportComputerDetailsReportData", "Reports").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_ReportComputerDetailsReportData", "Reports").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Report> ReportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_ReportComputerDetailsReportData", "Reports");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Report>("CrmEntitiesModel.FK_ReportComputerDetailsReportData", "Reports", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="ComputerGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ComputerGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ComputerGroup object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        /// <param name="timeStamp">Initial value of the TimeStamp property.</param>
        /// <param name="localPolicyId">Initial value of the LocalPolicyId property.</param>
        /// <param name="internetPolicyId">Initial value of the InternetPolicyId property.</param>
        public static ComputerGroup CreateComputerGroup(global::System.Int64 id, global::System.String name, global::System.Boolean deleted, global::System.Byte[] timeStamp, global::System.Int64 localPolicyId, global::System.Int64 internetPolicyId)
        {
            ComputerGroup computerGroup = new ComputerGroup();
            computerGroup.Id = id;
            computerGroup.Name = name;
            computerGroup.Deleted = deleted;
            computerGroup.TimeStamp = timeStamp;
            computerGroup.LocalPolicyId = localPolicyId;
            computerGroup.InternetPolicyId = internetPolicyId;
            return computerGroup;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value, "Deleted");
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] TimeStamp
        {
            get
            {
                return StructuralObject.GetValidValue(_TimeStamp);
            }
            set
            {
                OnTimeStampChanging(value);
                ReportPropertyChanging("TimeStamp");
                _TimeStamp = StructuralObject.SetValidValue(value, true, "TimeStamp");
                ReportPropertyChanged("TimeStamp");
                OnTimeStampChanged();
            }
        }
        private global::System.Byte[] _TimeStamp;
        partial void OnTimeStampChanging(global::System.Byte[] value);
        partial void OnTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 LocalPolicyId
        {
            get
            {
                return _LocalPolicyId;
            }
            set
            {
                OnLocalPolicyIdChanging(value);
                ReportPropertyChanging("LocalPolicyId");
                _LocalPolicyId = StructuralObject.SetValidValue(value, "LocalPolicyId");
                ReportPropertyChanged("LocalPolicyId");
                OnLocalPolicyIdChanged();
            }
        }
        private global::System.Int64 _LocalPolicyId;
        partial void OnLocalPolicyIdChanging(global::System.Int64 value);
        partial void OnLocalPolicyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 InternetPolicyId
        {
            get
            {
                return _InternetPolicyId;
            }
            set
            {
                OnInternetPolicyIdChanging(value);
                ReportPropertyChanging("InternetPolicyId");
                _InternetPolicyId = StructuralObject.SetValidValue(value, "InternetPolicyId");
                ReportPropertyChanged("InternetPolicyId");
                OnInternetPolicyIdChanged();
            }
        }
        private global::System.Int64 _InternetPolicyId;
        partial void OnInternetPolicyIdChanging(global::System.Int64 value);
        partial void OnInternetPolicyIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_ComputerGroupComputer", "Computers")]
        public EntityCollection<Computer> Computers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Computer>("CrmEntitiesModel.FK_ComputerGroupComputer", "Computers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Computer>("CrmEntitiesModel.FK_ComputerGroupComputer", "Computers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_InternetPolicyComputerGroup", "Policies")]
        public Policy Policy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("CrmEntitiesModel.FK_InternetPolicyComputerGroup", "Policies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("CrmEntitiesModel.FK_InternetPolicyComputerGroup", "Policies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Policy> PolicyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("CrmEntitiesModel.FK_InternetPolicyComputerGroup", "Policies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Policy>("CrmEntitiesModel.FK_InternetPolicyComputerGroup", "Policies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_LocalPolicyComputerGroup", "Policies")]
        public Policy Policy1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("CrmEntitiesModel.FK_LocalPolicyComputerGroup", "Policies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("CrmEntitiesModel.FK_LocalPolicyComputerGroup", "Policies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Policy> Policy1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("CrmEntitiesModel.FK_LocalPolicyComputerGroup", "Policies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Policy>("CrmEntitiesModel.FK_LocalPolicyComputerGroup", "Policies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "TaskComputerGroups", "Tasks")]
        public EntityCollection<CrmTask> Tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CrmTask>("CrmEntitiesModel.TaskComputerGroups", "Tasks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CrmTask>("CrmEntitiesModel.TaskComputerGroups", "Tasks", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="DbInstallerInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DbInstallerInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DbInstallerInfo object.
        /// </summary>
        /// <param name="internalVersion">Initial value of the InternalVersion property.</param>
        public static DbInstallerInfo CreateDbInstallerInfo(global::System.Int32 internalVersion)
        {
            DbInstallerInfo dbInstallerInfo = new DbInstallerInfo();
            dbInstallerInfo.InternalVersion = internalVersion;
            return dbInstallerInfo;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InternalVersion
        {
            get
            {
                return _InternalVersion;
            }
            set
            {
                if (_InternalVersion != value)
                {
                    OnInternalVersionChanging(value);
                    ReportPropertyChanging("InternalVersion");
                    _InternalVersion = StructuralObject.SetValidValue(value, "InternalVersion");
                    ReportPropertyChanged("InternalVersion");
                    OnInternalVersionChanged();
                }
            }
        }
        private global::System.Int32 _InternalVersion;
        partial void OnInternalVersionChanging(global::System.Int32 value);
        partial void OnInternalVersionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="DefensePlusLogRawDataSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DefensePlusLogRawDataSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DefensePlusLogRawDataSet object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="computerId">Initial value of the ComputerId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="updated">Initial value of the Updated property.</param>
        public static DefensePlusLogRawDataSet CreateDefensePlusLogRawDataSet(global::System.Int64 id, global::System.Int64 computerId, global::System.DateTime date, global::System.DateTime updated)
        {
            DefensePlusLogRawDataSet defensePlusLogRawDataSet = new DefensePlusLogRawDataSet();
            defensePlusLogRawDataSet.Id = id;
            defensePlusLogRawDataSet.ComputerId = computerId;
            defensePlusLogRawDataSet.Date = date;
            defensePlusLogRawDataSet.Updated = updated;
            return defensePlusLogRawDataSet;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ComputerId
        {
            get
            {
                return _ComputerId;
            }
            set
            {
                OnComputerIdChanging(value);
                ReportPropertyChanging("ComputerId");
                _ComputerId = StructuralObject.SetValidValue(value, "ComputerId");
                ReportPropertyChanged("ComputerId");
                OnComputerIdChanged();
            }
        }
        private global::System.Int64 _ComputerId;
        partial void OnComputerIdChanging(global::System.Int64 value);
        partial void OnComputerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Application
        {
            get
            {
                return _Application;
            }
            set
            {
                OnApplicationChanging(value);
                ReportPropertyChanging("Application");
                _Application = StructuralObject.SetValidValue(value, true, "Application");
                ReportPropertyChanged("Application");
                OnApplicationChanged();
            }
        }
        private global::System.String _Application;
        partial void OnApplicationChanging(global::System.String value);
        partial void OnApplicationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Target
        {
            get
            {
                return _Target;
            }
            set
            {
                OnTargetChanging(value);
                ReportPropertyChanging("Target");
                _Target = StructuralObject.SetValidValue(value, true, "Target");
                ReportPropertyChanged("Target");
                OnTargetChanged();
            }
        }
        private global::System.String _Target;
        partial void OnTargetChanging(global::System.String value);
        partial void OnTargetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Action
        {
            get
            {
                return _Action;
            }
            set
            {
                OnActionChanging(value);
                ReportPropertyChanging("Action");
                _Action = StructuralObject.SetValidValue(value, true, "Action");
                ReportPropertyChanged("Action");
                OnActionChanged();
            }
        }
        private global::System.String _Action;
        partial void OnActionChanging(global::System.String value);
        partial void OnActionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value, "Updated");
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_DefensePlusLogRawDataComputer", "Computers")]
        public Computer Computer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_DefensePlusLogRawDataComputer", "Computers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_DefensePlusLogRawDataComputer", "Computers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Computer> ComputerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_DefensePlusLogRawDataComputer", "Computers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Computer>("CrmEntitiesModel.FK_DefensePlusLogRawDataComputer", "Computers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="DefensePlusLogReportDataSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DefensePlusLogReportDataSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DefensePlusLogReportDataSet object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="reportId">Initial value of the ReportId property.</param>
        /// <param name="computerId">Initial value of the ComputerId property.</param>
        /// <param name="hasData">Initial value of the HasData property.</param>
        public static DefensePlusLogReportDataSet CreateDefensePlusLogReportDataSet(global::System.Int32 id, global::System.Guid reportId, global::System.Int64 computerId, global::System.Boolean hasData)
        {
            DefensePlusLogReportDataSet defensePlusLogReportDataSet = new DefensePlusLogReportDataSet();
            defensePlusLogReportDataSet.Id = id;
            defensePlusLogReportDataSet.ReportId = reportId;
            defensePlusLogReportDataSet.ComputerId = computerId;
            defensePlusLogReportDataSet.HasData = hasData;
            return defensePlusLogReportDataSet;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReportId
        {
            get
            {
                return _ReportId;
            }
            set
            {
                OnReportIdChanging(value);
                ReportPropertyChanging("ReportId");
                _ReportId = StructuralObject.SetValidValue(value, "ReportId");
                ReportPropertyChanged("ReportId");
                OnReportIdChanged();
            }
        }
        private global::System.Guid _ReportId;
        partial void OnReportIdChanging(global::System.Guid value);
        partial void OnReportIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ComputerName
        {
            get
            {
                return _ComputerName;
            }
            set
            {
                OnComputerNameChanging(value);
                ReportPropertyChanging("ComputerName");
                _ComputerName = StructuralObject.SetValidValue(value, true, "ComputerName");
                ReportPropertyChanged("ComputerName");
                OnComputerNameChanged();
            }
        }
        private global::System.String _ComputerName;
        partial void OnComputerNameChanging(global::System.String value);
        partial void OnComputerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ComputerIPAddess
        {
            get
            {
                return _ComputerIPAddess;
            }
            set
            {
                OnComputerIPAddessChanging(value);
                ReportPropertyChanging("ComputerIPAddess");
                _ComputerIPAddess = StructuralObject.SetValidValue(value, true, "ComputerIPAddess");
                ReportPropertyChanged("ComputerIPAddess");
                OnComputerIPAddessChanged();
            }
        }
        private global::System.String _ComputerIPAddess;
        partial void OnComputerIPAddessChanging(global::System.String value);
        partial void OnComputerIPAddessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Application
        {
            get
            {
                return _Application;
            }
            set
            {
                OnApplicationChanging(value);
                ReportPropertyChanging("Application");
                _Application = StructuralObject.SetValidValue(value, true, "Application");
                ReportPropertyChanged("Application");
                OnApplicationChanged();
            }
        }
        private global::System.String _Application;
        partial void OnApplicationChanging(global::System.String value);
        partial void OnApplicationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Target
        {
            get
            {
                return _Target;
            }
            set
            {
                OnTargetChanging(value);
                ReportPropertyChanging("Target");
                _Target = StructuralObject.SetValidValue(value, true, "Target");
                ReportPropertyChanged("Target");
                OnTargetChanged();
            }
        }
        private global::System.String _Target;
        partial void OnTargetChanging(global::System.String value);
        partial void OnTargetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Action
        {
            get
            {
                return _Action;
            }
            set
            {
                OnActionChanging(value);
                ReportPropertyChanging("Action");
                _Action = StructuralObject.SetValidValue(value, true, "Action");
                ReportPropertyChanged("Action");
                OnActionChanged();
            }
        }
        private global::System.String _Action;
        partial void OnActionChanging(global::System.String value);
        partial void OnActionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ComputerId
        {
            get
            {
                return _ComputerId;
            }
            set
            {
                OnComputerIdChanging(value);
                ReportPropertyChanging("ComputerId");
                _ComputerId = StructuralObject.SetValidValue(value, "ComputerId");
                ReportPropertyChanged("ComputerId");
                OnComputerIdChanged();
            }
        }
        private global::System.Int64 _ComputerId;
        partial void OnComputerIdChanging(global::System.Int64 value);
        partial void OnComputerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasData
        {
            get
            {
                return _HasData;
            }
            set
            {
                OnHasDataChanging(value);
                ReportPropertyChanging("HasData");
                _HasData = StructuralObject.SetValidValue(value, "HasData");
                ReportPropertyChanged("HasData");
                OnHasDataChanged();
            }
        }
        private global::System.Boolean _HasData;
        partial void OnHasDataChanging(global::System.Boolean value);
        partial void OnHasDataChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_DefensePlusLogReportDataReport", "Reports")]
        public Report Report
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_DefensePlusLogReportDataReport", "Reports").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_DefensePlusLogReportDataReport", "Reports").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Report> ReportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_DefensePlusLogReportDataReport", "Reports");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Report>("CrmEntitiesModel.FK_DefensePlusLogReportDataReport", "Reports", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="DiscoveryDataSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DiscoveryDataSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DiscoveryDataSet object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="profileUid">Initial value of the ProfileUid property.</param>
        /// <param name="computerId">Initial value of the ComputerId property.</param>
        /// <param name="discovered">Initial value of the Discovered property.</param>
        public static DiscoveryDataSet CreateDiscoveryDataSet(global::System.Int64 id, global::System.Guid profileUid, global::System.Int64 computerId, global::System.DateTime discovered)
        {
            DiscoveryDataSet discoveryDataSet = new DiscoveryDataSet();
            discoveryDataSet.Id = id;
            discoveryDataSet.ProfileUid = profileUid;
            discoveryDataSet.ComputerId = computerId;
            discoveryDataSet.Discovered = discovered;
            return discoveryDataSet;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ProfileUid
        {
            get
            {
                return _ProfileUid;
            }
            set
            {
                OnProfileUidChanging(value);
                ReportPropertyChanging("ProfileUid");
                _ProfileUid = StructuralObject.SetValidValue(value, "ProfileUid");
                ReportPropertyChanged("ProfileUid");
                OnProfileUidChanged();
            }
        }
        private global::System.Guid _ProfileUid;
        partial void OnProfileUidChanging(global::System.Guid value);
        partial void OnProfileUidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ComputerId
        {
            get
            {
                return _ComputerId;
            }
            set
            {
                OnComputerIdChanging(value);
                ReportPropertyChanging("ComputerId");
                _ComputerId = StructuralObject.SetValidValue(value, "ComputerId");
                ReportPropertyChanged("ComputerId");
                OnComputerIdChanged();
            }
        }
        private global::System.Int64 _ComputerId;
        partial void OnComputerIdChanging(global::System.Int64 value);
        partial void OnComputerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Discovered
        {
            get
            {
                return _Discovered;
            }
            set
            {
                OnDiscoveredChanging(value);
                ReportPropertyChanging("Discovered");
                _Discovered = StructuralObject.SetValidValue(value, "Discovered");
                ReportPropertyChanged("Discovered");
                OnDiscoveredChanged();
            }
        }
        private global::System.DateTime _Discovered;
        partial void OnDiscoveredChanging(global::System.DateTime value);
        partial void OnDiscoveredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Results
        {
            get
            {
                return StructuralObject.GetValidValue(_Results);
            }
            set
            {
                OnResultsChanging(value);
                ReportPropertyChanging("Results");
                _Results = StructuralObject.SetValidValue(value, true, "Results");
                ReportPropertyChanged("Results");
                OnResultsChanged();
            }
        }
        private global::System.Byte[] _Results;
        partial void OnResultsChanging(global::System.Byte[] value);
        partial void OnResultsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] InputData
        {
            get
            {
                return StructuralObject.GetValidValue(_InputData);
            }
            set
            {
                OnInputDataChanging(value);
                ReportPropertyChanging("InputData");
                _InputData = StructuralObject.SetValidValue(value, true, "InputData");
                ReportPropertyChanged("InputData");
                OnInputDataChanged();
            }
        }
        private global::System.Byte[] _InputData;
        partial void OnInputDataChanging(global::System.Byte[] value);
        partial void OnInputDataChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_DiscoveryDataComputers", "Computers")]
        public Computer Computer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_DiscoveryDataComputers", "Computers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_DiscoveryDataComputers", "Computers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Computer> ComputerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_DiscoveryDataComputers", "Computers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Computer>("CrmEntitiesModel.FK_DiscoveryDataComputers", "Computers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="FirewallLogRawDataSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FirewallLogRawDataSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FirewallLogRawDataSet object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="computerId">Initial value of the ComputerId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="destinationPort">Initial value of the DestinationPort property.</param>
        /// <param name="sourcePort">Initial value of the SourcePort property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="updated">Initial value of the Updated property.</param>
        public static FirewallLogRawDataSet CreateFirewallLogRawDataSet(global::System.Int64 id, global::System.Int64 computerId, global::System.DateTime date, global::System.Int32 destinationPort, global::System.Int32 sourcePort, global::System.Int32 type, global::System.DateTime updated)
        {
            FirewallLogRawDataSet firewallLogRawDataSet = new FirewallLogRawDataSet();
            firewallLogRawDataSet.Id = id;
            firewallLogRawDataSet.ComputerId = computerId;
            firewallLogRawDataSet.Date = date;
            firewallLogRawDataSet.DestinationPort = destinationPort;
            firewallLogRawDataSet.SourcePort = sourcePort;
            firewallLogRawDataSet.Type = type;
            firewallLogRawDataSet.Updated = updated;
            return firewallLogRawDataSet;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ComputerId
        {
            get
            {
                return _ComputerId;
            }
            set
            {
                OnComputerIdChanging(value);
                ReportPropertyChanging("ComputerId");
                _ComputerId = StructuralObject.SetValidValue(value, "ComputerId");
                ReportPropertyChanged("ComputerId");
                OnComputerIdChanged();
            }
        }
        private global::System.Int64 _ComputerId;
        partial void OnComputerIdChanging(global::System.Int64 value);
        partial void OnComputerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Application
        {
            get
            {
                return _Application;
            }
            set
            {
                OnApplicationChanging(value);
                ReportPropertyChanging("Application");
                _Application = StructuralObject.SetValidValue(value, true, "Application");
                ReportPropertyChanged("Application");
                OnApplicationChanged();
            }
        }
        private global::System.String _Application;
        partial void OnApplicationChanging(global::System.String value);
        partial void OnApplicationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Action
        {
            get
            {
                return _Action;
            }
            set
            {
                OnActionChanging(value);
                ReportPropertyChanging("Action");
                _Action = StructuralObject.SetValidValue(value, true, "Action");
                ReportPropertyChanged("Action");
                OnActionChanged();
            }
        }
        private global::System.String _Action;
        partial void OnActionChanging(global::System.String value);
        partial void OnActionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DestinationIP
        {
            get
            {
                return _DestinationIP;
            }
            set
            {
                OnDestinationIPChanging(value);
                ReportPropertyChanging("DestinationIP");
                _DestinationIP = StructuralObject.SetValidValue(value, true, "DestinationIP");
                ReportPropertyChanged("DestinationIP");
                OnDestinationIPChanged();
            }
        }
        private global::System.String _DestinationIP;
        partial void OnDestinationIPChanging(global::System.String value);
        partial void OnDestinationIPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DestinationPort
        {
            get
            {
                return _DestinationPort;
            }
            set
            {
                OnDestinationPortChanging(value);
                ReportPropertyChanging("DestinationPort");
                _DestinationPort = StructuralObject.SetValidValue(value, "DestinationPort");
                ReportPropertyChanged("DestinationPort");
                OnDestinationPortChanged();
            }
        }
        private global::System.Int32 _DestinationPort;
        partial void OnDestinationPortChanging(global::System.Int32 value);
        partial void OnDestinationPortChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SourceIP
        {
            get
            {
                return _SourceIP;
            }
            set
            {
                OnSourceIPChanging(value);
                ReportPropertyChanging("SourceIP");
                _SourceIP = StructuralObject.SetValidValue(value, true, "SourceIP");
                ReportPropertyChanged("SourceIP");
                OnSourceIPChanged();
            }
        }
        private global::System.String _SourceIP;
        partial void OnSourceIPChanging(global::System.String value);
        partial void OnSourceIPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourcePort
        {
            get
            {
                return _SourcePort;
            }
            set
            {
                OnSourcePortChanging(value);
                ReportPropertyChanging("SourcePort");
                _SourcePort = StructuralObject.SetValidValue(value, "SourcePort");
                ReportPropertyChanged("SourcePort");
                OnSourcePortChanged();
            }
        }
        private global::System.Int32 _SourcePort;
        partial void OnSourcePortChanging(global::System.Int32 value);
        partial void OnSourcePortChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Protocol
        {
            get
            {
                return _Protocol;
            }
            set
            {
                OnProtocolChanging(value);
                ReportPropertyChanging("Protocol");
                _Protocol = StructuralObject.SetValidValue(value, true, "Protocol");
                ReportPropertyChanged("Protocol");
                OnProtocolChanged();
            }
        }
        private global::System.String _Protocol;
        partial void OnProtocolChanging(global::System.String value);
        partial void OnProtocolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Details
        {
            get
            {
                return _Details;
            }
            set
            {
                OnDetailsChanging(value);
                ReportPropertyChanging("Details");
                _Details = StructuralObject.SetValidValue(value, true, "Details");
                ReportPropertyChanged("Details");
                OnDetailsChanged();
            }
        }
        private global::System.String _Details;
        partial void OnDetailsChanging(global::System.String value);
        partial void OnDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, "Type");
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value, "Updated");
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_FirewallLogRawDataComputer", "Computers")]
        public Computer Computer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_FirewallLogRawDataComputer", "Computers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_FirewallLogRawDataComputer", "Computers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Computer> ComputerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_FirewallLogRawDataComputer", "Computers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Computer>("CrmEntitiesModel.FK_FirewallLogRawDataComputer", "Computers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="FirewallLogReportDataSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FirewallLogReportDataSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FirewallLogReportDataSet object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="reportId">Initial value of the ReportId property.</param>
        /// <param name="destinationPort">Initial value of the DestinationPort property.</param>
        /// <param name="sourcePort">Initial value of the SourcePort property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="computerId">Initial value of the ComputerId property.</param>
        /// <param name="hasData">Initial value of the HasData property.</param>
        public static FirewallLogReportDataSet CreateFirewallLogReportDataSet(global::System.Int32 id, global::System.Guid reportId, global::System.Int32 destinationPort, global::System.Int32 sourcePort, global::System.Int32 type, global::System.Int64 computerId, global::System.Boolean hasData)
        {
            FirewallLogReportDataSet firewallLogReportDataSet = new FirewallLogReportDataSet();
            firewallLogReportDataSet.Id = id;
            firewallLogReportDataSet.ReportId = reportId;
            firewallLogReportDataSet.DestinationPort = destinationPort;
            firewallLogReportDataSet.SourcePort = sourcePort;
            firewallLogReportDataSet.Type = type;
            firewallLogReportDataSet.ComputerId = computerId;
            firewallLogReportDataSet.HasData = hasData;
            return firewallLogReportDataSet;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReportId
        {
            get
            {
                return _ReportId;
            }
            set
            {
                OnReportIdChanging(value);
                ReportPropertyChanging("ReportId");
                _ReportId = StructuralObject.SetValidValue(value, "ReportId");
                ReportPropertyChanged("ReportId");
                OnReportIdChanged();
            }
        }
        private global::System.Guid _ReportId;
        partial void OnReportIdChanging(global::System.Guid value);
        partial void OnReportIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ComputerName
        {
            get
            {
                return _ComputerName;
            }
            set
            {
                OnComputerNameChanging(value);
                ReportPropertyChanging("ComputerName");
                _ComputerName = StructuralObject.SetValidValue(value, true, "ComputerName");
                ReportPropertyChanged("ComputerName");
                OnComputerNameChanged();
            }
        }
        private global::System.String _ComputerName;
        partial void OnComputerNameChanging(global::System.String value);
        partial void OnComputerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ComputerIPAddess
        {
            get
            {
                return _ComputerIPAddess;
            }
            set
            {
                OnComputerIPAddessChanging(value);
                ReportPropertyChanging("ComputerIPAddess");
                _ComputerIPAddess = StructuralObject.SetValidValue(value, true, "ComputerIPAddess");
                ReportPropertyChanged("ComputerIPAddess");
                OnComputerIPAddessChanged();
            }
        }
        private global::System.String _ComputerIPAddess;
        partial void OnComputerIPAddessChanging(global::System.String value);
        partial void OnComputerIPAddessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Application
        {
            get
            {
                return _Application;
            }
            set
            {
                OnApplicationChanging(value);
                ReportPropertyChanging("Application");
                _Application = StructuralObject.SetValidValue(value, true, "Application");
                ReportPropertyChanged("Application");
                OnApplicationChanged();
            }
        }
        private global::System.String _Application;
        partial void OnApplicationChanging(global::System.String value);
        partial void OnApplicationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Action
        {
            get
            {
                return _Action;
            }
            set
            {
                OnActionChanging(value);
                ReportPropertyChanging("Action");
                _Action = StructuralObject.SetValidValue(value, true, "Action");
                ReportPropertyChanged("Action");
                OnActionChanged();
            }
        }
        private global::System.String _Action;
        partial void OnActionChanging(global::System.String value);
        partial void OnActionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DestinationIP
        {
            get
            {
                return _DestinationIP;
            }
            set
            {
                OnDestinationIPChanging(value);
                ReportPropertyChanging("DestinationIP");
                _DestinationIP = StructuralObject.SetValidValue(value, true, "DestinationIP");
                ReportPropertyChanged("DestinationIP");
                OnDestinationIPChanged();
            }
        }
        private global::System.String _DestinationIP;
        partial void OnDestinationIPChanging(global::System.String value);
        partial void OnDestinationIPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DestinationPort
        {
            get
            {
                return _DestinationPort;
            }
            set
            {
                OnDestinationPortChanging(value);
                ReportPropertyChanging("DestinationPort");
                _DestinationPort = StructuralObject.SetValidValue(value, "DestinationPort");
                ReportPropertyChanged("DestinationPort");
                OnDestinationPortChanged();
            }
        }
        private global::System.Int32 _DestinationPort;
        partial void OnDestinationPortChanging(global::System.Int32 value);
        partial void OnDestinationPortChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SourceIP
        {
            get
            {
                return _SourceIP;
            }
            set
            {
                OnSourceIPChanging(value);
                ReportPropertyChanging("SourceIP");
                _SourceIP = StructuralObject.SetValidValue(value, true, "SourceIP");
                ReportPropertyChanged("SourceIP");
                OnSourceIPChanged();
            }
        }
        private global::System.String _SourceIP;
        partial void OnSourceIPChanging(global::System.String value);
        partial void OnSourceIPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourcePort
        {
            get
            {
                return _SourcePort;
            }
            set
            {
                OnSourcePortChanging(value);
                ReportPropertyChanging("SourcePort");
                _SourcePort = StructuralObject.SetValidValue(value, "SourcePort");
                ReportPropertyChanged("SourcePort");
                OnSourcePortChanged();
            }
        }
        private global::System.Int32 _SourcePort;
        partial void OnSourcePortChanging(global::System.Int32 value);
        partial void OnSourcePortChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Protocol
        {
            get
            {
                return _Protocol;
            }
            set
            {
                OnProtocolChanging(value);
                ReportPropertyChanging("Protocol");
                _Protocol = StructuralObject.SetValidValue(value, true, "Protocol");
                ReportPropertyChanged("Protocol");
                OnProtocolChanged();
            }
        }
        private global::System.String _Protocol;
        partial void OnProtocolChanging(global::System.String value);
        partial void OnProtocolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Details
        {
            get
            {
                return _Details;
            }
            set
            {
                OnDetailsChanging(value);
                ReportPropertyChanging("Details");
                _Details = StructuralObject.SetValidValue(value, true, "Details");
                ReportPropertyChanged("Details");
                OnDetailsChanged();
            }
        }
        private global::System.String _Details;
        partial void OnDetailsChanging(global::System.String value);
        partial void OnDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, "Type");
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ComputerId
        {
            get
            {
                return _ComputerId;
            }
            set
            {
                OnComputerIdChanging(value);
                ReportPropertyChanging("ComputerId");
                _ComputerId = StructuralObject.SetValidValue(value, "ComputerId");
                ReportPropertyChanged("ComputerId");
                OnComputerIdChanged();
            }
        }
        private global::System.Int64 _ComputerId;
        partial void OnComputerIdChanging(global::System.Int64 value);
        partial void OnComputerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasData
        {
            get
            {
                return _HasData;
            }
            set
            {
                OnHasDataChanging(value);
                ReportPropertyChanging("HasData");
                _HasData = StructuralObject.SetValidValue(value, "HasData");
                ReportPropertyChanged("HasData");
                OnHasDataChanged();
            }
        }
        private global::System.Boolean _HasData;
        partial void OnHasDataChanging(global::System.Boolean value);
        partial void OnHasDataChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_FirewallLogReportDataReport", "Reports")]
        public Report Report
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_FirewallLogReportDataReport", "Reports").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_FirewallLogReportDataReport", "Reports").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Report> ReportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_FirewallLogReportDataReport", "Reports");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Report>("CrmEntitiesModel.FK_FirewallLogReportDataReport", "Reports", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="InfectedItemRawDataSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InfectedItemRawDataSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InfectedItemRawDataSet object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="computerId">Initial value of the ComputerId property.</param>
        /// <param name="malwareDetected">Initial value of the MalwareDetected property.</param>
        /// <param name="updated">Initial value of the Updated property.</param>
        public static InfectedItemRawDataSet CreateInfectedItemRawDataSet(global::System.Int64 id, global::System.Int64 computerId, global::System.DateTime malwareDetected, global::System.DateTime updated)
        {
            InfectedItemRawDataSet infectedItemRawDataSet = new InfectedItemRawDataSet();
            infectedItemRawDataSet.Id = id;
            infectedItemRawDataSet.ComputerId = computerId;
            infectedItemRawDataSet.MalwareDetected = malwareDetected;
            infectedItemRawDataSet.Updated = updated;
            return infectedItemRawDataSet;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ComputerId
        {
            get
            {
                return _ComputerId;
            }
            set
            {
                OnComputerIdChanging(value);
                ReportPropertyChanging("ComputerId");
                _ComputerId = StructuralObject.SetValidValue(value, "ComputerId");
                ReportPropertyChanged("ComputerId");
                OnComputerIdChanged();
            }
        }
        private global::System.Int64 _ComputerId;
        partial void OnComputerIdChanging(global::System.Int64 value);
        partial void OnComputerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MalwareName
        {
            get
            {
                return _MalwareName;
            }
            set
            {
                OnMalwareNameChanging(value);
                ReportPropertyChanging("MalwareName");
                _MalwareName = StructuralObject.SetValidValue(value, true, "MalwareName");
                ReportPropertyChanged("MalwareName");
                OnMalwareNameChanged();
            }
        }
        private global::System.String _MalwareName;
        partial void OnMalwareNameChanging(global::System.String value);
        partial void OnMalwareNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MalwareLocation
        {
            get
            {
                return _MalwareLocation;
            }
            set
            {
                OnMalwareLocationChanging(value);
                ReportPropertyChanging("MalwareLocation");
                _MalwareLocation = StructuralObject.SetValidValue(value, true, "MalwareLocation");
                ReportPropertyChanged("MalwareLocation");
                OnMalwareLocationChanged();
            }
        }
        private global::System.String _MalwareLocation;
        partial void OnMalwareLocationChanging(global::System.String value);
        partial void OnMalwareLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime MalwareDetected
        {
            get
            {
                return _MalwareDetected;
            }
            set
            {
                OnMalwareDetectedChanging(value);
                ReportPropertyChanging("MalwareDetected");
                _MalwareDetected = StructuralObject.SetValidValue(value, "MalwareDetected");
                ReportPropertyChanged("MalwareDetected");
                OnMalwareDetectedChanged();
            }
        }
        private global::System.DateTime _MalwareDetected;
        partial void OnMalwareDetectedChanging(global::System.DateTime value);
        partial void OnMalwareDetectedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value, "Updated");
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_InfectedItemRawDataComputer", "Computers")]
        public Computer Computer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_InfectedItemRawDataComputer", "Computers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_InfectedItemRawDataComputer", "Computers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Computer> ComputerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_InfectedItemRawDataComputer", "Computers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Computer>("CrmEntitiesModel.FK_InfectedItemRawDataComputer", "Computers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="InfectedItemReportDataSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InfectedItemReportDataSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InfectedItemReportDataSet object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="reportId">Initial value of the ReportId property.</param>
        /// <param name="computerId">Initial value of the ComputerId property.</param>
        /// <param name="computerOnline">Initial value of the ComputerOnline property.</param>
        public static InfectedItemReportDataSet CreateInfectedItemReportDataSet(global::System.Int32 id, global::System.Guid reportId, global::System.Int64 computerId, global::System.Boolean computerOnline)
        {
            InfectedItemReportDataSet infectedItemReportDataSet = new InfectedItemReportDataSet();
            infectedItemReportDataSet.Id = id;
            infectedItemReportDataSet.ReportId = reportId;
            infectedItemReportDataSet.ComputerId = computerId;
            infectedItemReportDataSet.ComputerOnline = computerOnline;
            return infectedItemReportDataSet;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReportId
        {
            get
            {
                return _ReportId;
            }
            set
            {
                OnReportIdChanging(value);
                ReportPropertyChanging("ReportId");
                _ReportId = StructuralObject.SetValidValue(value, "ReportId");
                ReportPropertyChanged("ReportId");
                OnReportIdChanged();
            }
        }
        private global::System.Guid _ReportId;
        partial void OnReportIdChanging(global::System.Guid value);
        partial void OnReportIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ComputerId
        {
            get
            {
                return _ComputerId;
            }
            set
            {
                OnComputerIdChanging(value);
                ReportPropertyChanging("ComputerId");
                _ComputerId = StructuralObject.SetValidValue(value, "ComputerId");
                ReportPropertyChanged("ComputerId");
                OnComputerIdChanged();
            }
        }
        private global::System.Int64 _ComputerId;
        partial void OnComputerIdChanging(global::System.Int64 value);
        partial void OnComputerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ComputerName
        {
            get
            {
                return _ComputerName;
            }
            set
            {
                OnComputerNameChanging(value);
                ReportPropertyChanging("ComputerName");
                _ComputerName = StructuralObject.SetValidValue(value, true, "ComputerName");
                ReportPropertyChanged("ComputerName");
                OnComputerNameChanged();
            }
        }
        private global::System.String _ComputerName;
        partial void OnComputerNameChanging(global::System.String value);
        partial void OnComputerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ComputerIPAddess
        {
            get
            {
                return _ComputerIPAddess;
            }
            set
            {
                OnComputerIPAddessChanging(value);
                ReportPropertyChanging("ComputerIPAddess");
                _ComputerIPAddess = StructuralObject.SetValidValue(value, true, "ComputerIPAddess");
                ReportPropertyChanged("ComputerIPAddess");
                OnComputerIPAddessChanged();
            }
        }
        private global::System.String _ComputerIPAddess;
        partial void OnComputerIPAddessChanging(global::System.String value);
        partial void OnComputerIPAddessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GroupName
        {
            get
            {
                return _GroupName;
            }
            set
            {
                OnGroupNameChanging(value);
                ReportPropertyChanging("GroupName");
                _GroupName = StructuralObject.SetValidValue(value, true, "GroupName");
                ReportPropertyChanged("GroupName");
                OnGroupNameChanged();
            }
        }
        private global::System.String _GroupName;
        partial void OnGroupNameChanging(global::System.String value);
        partial void OnGroupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ComputerOnline
        {
            get
            {
                return _ComputerOnline;
            }
            set
            {
                OnComputerOnlineChanging(value);
                ReportPropertyChanging("ComputerOnline");
                _ComputerOnline = StructuralObject.SetValidValue(value, "ComputerOnline");
                ReportPropertyChanged("ComputerOnline");
                OnComputerOnlineChanged();
            }
        }
        private global::System.Boolean _ComputerOnline;
        partial void OnComputerOnlineChanging(global::System.Boolean value);
        partial void OnComputerOnlineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastDiscoveryDate
        {
            get
            {
                return _LastDiscoveryDate;
            }
            set
            {
                OnLastDiscoveryDateChanging(value);
                ReportPropertyChanging("LastDiscoveryDate");
                _LastDiscoveryDate = StructuralObject.SetValidValue(value, "LastDiscoveryDate");
                ReportPropertyChanged("LastDiscoveryDate");
                OnLastDiscoveryDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastDiscoveryDate;
        partial void OnLastDiscoveryDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastDiscoveryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MalwareName
        {
            get
            {
                return _MalwareName;
            }
            set
            {
                OnMalwareNameChanging(value);
                ReportPropertyChanging("MalwareName");
                _MalwareName = StructuralObject.SetValidValue(value, true, "MalwareName");
                ReportPropertyChanged("MalwareName");
                OnMalwareNameChanged();
            }
        }
        private global::System.String _MalwareName;
        partial void OnMalwareNameChanging(global::System.String value);
        partial void OnMalwareNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MalwareLocation
        {
            get
            {
                return _MalwareLocation;
            }
            set
            {
                OnMalwareLocationChanging(value);
                ReportPropertyChanging("MalwareLocation");
                _MalwareLocation = StructuralObject.SetValidValue(value, true, "MalwareLocation");
                ReportPropertyChanged("MalwareLocation");
                OnMalwareLocationChanged();
            }
        }
        private global::System.String _MalwareLocation;
        partial void OnMalwareLocationChanging(global::System.String value);
        partial void OnMalwareLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MalwareDetected
        {
            get
            {
                return _MalwareDetected;
            }
            set
            {
                OnMalwareDetectedChanging(value);
                ReportPropertyChanging("MalwareDetected");
                _MalwareDetected = StructuralObject.SetValidValue(value, "MalwareDetected");
                ReportPropertyChanged("MalwareDetected");
                OnMalwareDetectedChanged();
            }
        }
        private Nullable<global::System.DateTime> _MalwareDetected;
        partial void OnMalwareDetectedChanging(Nullable<global::System.DateTime> value);
        partial void OnMalwareDetectedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_InfectedItemReportDataReport", "Reports")]
        public Report Report
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_InfectedItemReportDataReport", "Reports").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_InfectedItemReportDataReport", "Reports").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Report> ReportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_InfectedItemReportDataReport", "Reports");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Report>("CrmEntitiesModel.FK_InfectedItemReportDataReport", "Reports", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="InstalledSoftwareRawDataSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InstalledSoftwareRawDataSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InstalledSoftwareRawDataSet object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="computerId">Initial value of the ComputerId property.</param>
        /// <param name="updated">Initial value of the Updated property.</param>
        public static InstalledSoftwareRawDataSet CreateInstalledSoftwareRawDataSet(global::System.Int64 id, global::System.Int64 computerId, global::System.DateTime updated)
        {
            InstalledSoftwareRawDataSet installedSoftwareRawDataSet = new InstalledSoftwareRawDataSet();
            installedSoftwareRawDataSet.Id = id;
            installedSoftwareRawDataSet.ComputerId = computerId;
            installedSoftwareRawDataSet.Updated = updated;
            return installedSoftwareRawDataSet;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ComputerId
        {
            get
            {
                return _ComputerId;
            }
            set
            {
                OnComputerIdChanging(value);
                ReportPropertyChanging("ComputerId");
                _ComputerId = StructuralObject.SetValidValue(value, "ComputerId");
                ReportPropertyChanged("ComputerId");
                OnComputerIdChanged();
            }
        }
        private global::System.Int64 _ComputerId;
        partial void OnComputerIdChanging(global::System.Int64 value);
        partial void OnComputerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, true, "Version");
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.String _Version;
        partial void OnVersionChanging(global::System.String value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Publisher
        {
            get
            {
                return _Publisher;
            }
            set
            {
                OnPublisherChanging(value);
                ReportPropertyChanging("Publisher");
                _Publisher = StructuralObject.SetValidValue(value, true, "Publisher");
                ReportPropertyChanged("Publisher");
                OnPublisherChanged();
            }
        }
        private global::System.String _Publisher;
        partial void OnPublisherChanging(global::System.String value);
        partial void OnPublisherChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value, "Updated");
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_InstalledSoftwareRawDataComputer", "Computers")]
        public Computer Computer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_InstalledSoftwareRawDataComputer", "Computers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_InstalledSoftwareRawDataComputer", "Computers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Computer> ComputerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_InstalledSoftwareRawDataComputer", "Computers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Computer>("CrmEntitiesModel.FK_InstalledSoftwareRawDataComputer", "Computers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="InstalledSoftwareReportDataSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InstalledSoftwareReportDataSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InstalledSoftwareReportDataSet object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="computerId">Initial value of the ComputerId property.</param>
        /// <param name="computerDetailsReportDataId">Initial value of the ComputerDetailsReportDataId property.</param>
        public static InstalledSoftwareReportDataSet CreateInstalledSoftwareReportDataSet(global::System.Int32 id, global::System.Int64 computerId, global::System.Int64 computerDetailsReportDataId)
        {
            InstalledSoftwareReportDataSet installedSoftwareReportDataSet = new InstalledSoftwareReportDataSet();
            installedSoftwareReportDataSet.Id = id;
            installedSoftwareReportDataSet.ComputerId = computerId;
            installedSoftwareReportDataSet.ComputerDetailsReportDataId = computerDetailsReportDataId;
            return installedSoftwareReportDataSet;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, true, "Version");
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.String _Version;
        partial void OnVersionChanging(global::System.String value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Publisher
        {
            get
            {
                return _Publisher;
            }
            set
            {
                OnPublisherChanging(value);
                ReportPropertyChanging("Publisher");
                _Publisher = StructuralObject.SetValidValue(value, true, "Publisher");
                ReportPropertyChanged("Publisher");
                OnPublisherChanged();
            }
        }
        private global::System.String _Publisher;
        partial void OnPublisherChanging(global::System.String value);
        partial void OnPublisherChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ComputerId
        {
            get
            {
                return _ComputerId;
            }
            set
            {
                OnComputerIdChanging(value);
                ReportPropertyChanging("ComputerId");
                _ComputerId = StructuralObject.SetValidValue(value, "ComputerId");
                ReportPropertyChanged("ComputerId");
                OnComputerIdChanged();
            }
        }
        private global::System.Int64 _ComputerId;
        partial void OnComputerIdChanging(global::System.Int64 value);
        partial void OnComputerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ComputerDetailsReportDataId
        {
            get
            {
                return _ComputerDetailsReportDataId;
            }
            set
            {
                OnComputerDetailsReportDataIdChanging(value);
                ReportPropertyChanging("ComputerDetailsReportDataId");
                _ComputerDetailsReportDataId = StructuralObject.SetValidValue(value, "ComputerDetailsReportDataId");
                ReportPropertyChanged("ComputerDetailsReportDataId");
                OnComputerDetailsReportDataIdChanged();
            }
        }
        private global::System.Int64 _ComputerDetailsReportDataId;
        partial void OnComputerDetailsReportDataIdChanging(global::System.Int64 value);
        partial void OnComputerDetailsReportDataIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_InstalledSoftwareReportDataComputerDetailsReportData", "ComputerDetailsReportDataSet")]
        public ComputerDetailsReportDataSet ComputerDetailsReportDataSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ComputerDetailsReportDataSet>("CrmEntitiesModel.FK_InstalledSoftwareReportDataComputerDetailsReportData", "ComputerDetailsReportDataSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ComputerDetailsReportDataSet>("CrmEntitiesModel.FK_InstalledSoftwareReportDataComputerDetailsReportData", "ComputerDetailsReportDataSet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ComputerDetailsReportDataSet> ComputerDetailsReportDataSetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ComputerDetailsReportDataSet>("CrmEntitiesModel.FK_InstalledSoftwareReportDataComputerDetailsReportData", "ComputerDetailsReportDataSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ComputerDetailsReportDataSet>("CrmEntitiesModel.FK_InstalledSoftwareReportDataComputerDetailsReportData", "ComputerDetailsReportDataSet", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="License")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class License : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new License object.
        /// </summary>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="licenseStatus">Initial value of the LicenseStatus property.</param>
        /// <param name="productPrefix">Initial value of the ProductPrefix property.</param>
        /// <param name="subscriberId">Initial value of the SubscriberId property.</param>
        /// <param name="warrantyAvailable">Initial value of the WarrantyAvailable property.</param>
        /// <param name="isInEffect">Initial value of the IsInEffect property.</param>
        /// <param name="overuseCount">Initial value of the OveruseCount property.</param>
        /// <param name="overuseEndpointTicks">Initial value of the OveruseEndpointTicks property.</param>
        /// <param name="isFree">Initial value of the IsFree property.</param>
        public static License CreateLicense(global::System.Guid number, global::System.String licenseStatus, global::System.String productPrefix, global::System.String subscriberId, global::System.Boolean warrantyAvailable, global::System.Boolean isInEffect, global::System.Int32 overuseCount, global::System.Int64 overuseEndpointTicks, global::System.Boolean isFree)
        {
            License license = new License();
            license.Number = number;
            license.LicenseStatus = licenseStatus;
            license.ProductPrefix = productPrefix;
            license.SubscriberId = subscriberId;
            license.WarrantyAvailable = warrantyAvailable;
            license.IsInEffect = isInEffect;
            license.OveruseCount = overuseCount;
            license.OveruseEndpointTicks = overuseEndpointTicks;
            license.IsFree = isFree;
            return license;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Number
        {
            get
            {
                return _Number;
            }
            set
            {
                if (_Number != value)
                {
                    OnNumberChanging(value);
                    ReportPropertyChanging("Number");
                    _Number = StructuralObject.SetValidValue(value, "Number");
                    ReportPropertyChanged("Number");
                    OnNumberChanged();
                }
            }
        }
        private global::System.Guid _Number;
        partial void OnNumberChanging(global::System.Guid value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LicenseStatus
        {
            get
            {
                return _LicenseStatus;
            }
            set
            {
                OnLicenseStatusChanging(value);
                ReportPropertyChanging("LicenseStatus");
                _LicenseStatus = StructuralObject.SetValidValue(value, false, "LicenseStatus");
                ReportPropertyChanged("LicenseStatus");
                OnLicenseStatusChanged();
            }
        }
        private global::System.String _LicenseStatus;
        partial void OnLicenseStatusChanging(global::System.String value);
        partial void OnLicenseStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductPrefix
        {
            get
            {
                return _ProductPrefix;
            }
            set
            {
                OnProductPrefixChanging(value);
                ReportPropertyChanging("ProductPrefix");
                _ProductPrefix = StructuralObject.SetValidValue(value, false, "ProductPrefix");
                ReportPropertyChanged("ProductPrefix");
                OnProductPrefixChanged();
            }
        }
        private global::System.String _ProductPrefix;
        partial void OnProductPrefixChanging(global::System.String value);
        partial void OnProductPrefixChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MachineKey
        {
            get
            {
                return _MachineKey;
            }
            set
            {
                OnMachineKeyChanging(value);
                ReportPropertyChanging("MachineKey");
                _MachineKey = StructuralObject.SetValidValue(value, true, "MachineKey");
                ReportPropertyChanged("MachineKey");
                OnMachineKeyChanged();
            }
        }
        private global::System.String _MachineKey;
        partial void OnMachineKeyChanging(global::System.String value);
        partial void OnMachineKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ComputersCount
        {
            get
            {
                return _ComputersCount;
            }
            set
            {
                OnComputersCountChanging(value);
                ReportPropertyChanging("ComputersCount");
                _ComputersCount = StructuralObject.SetValidValue(value, "ComputersCount");
                ReportPropertyChanged("ComputersCount");
                OnComputersCountChanged();
            }
        }
        private Nullable<global::System.Int32> _ComputersCount;
        partial void OnComputersCountChanging(Nullable<global::System.Int32> value);
        partial void OnComputersCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpirationDate
        {
            get
            {
                return _ExpirationDate;
            }
            set
            {
                OnExpirationDateChanging(value);
                ReportPropertyChanging("ExpirationDate");
                _ExpirationDate = StructuralObject.SetValidValue(value, "ExpirationDate");
                ReportPropertyChanged("ExpirationDate");
                OnExpirationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpirationDate;
        partial void OnExpirationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpirationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value, "StartDate");
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SubscriberId
        {
            get
            {
                return _SubscriberId;
            }
            set
            {
                OnSubscriberIdChanging(value);
                ReportPropertyChanging("SubscriberId");
                _SubscriberId = StructuralObject.SetValidValue(value, false, "SubscriberId");
                ReportPropertyChanged("SubscriberId");
                OnSubscriberIdChanged();
            }
        }
        private global::System.String _SubscriberId;
        partial void OnSubscriberIdChanging(global::System.String value);
        partial void OnSubscriberIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, true, "CompanyName");
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VendorName
        {
            get
            {
                return _VendorName;
            }
            set
            {
                OnVendorNameChanging(value);
                ReportPropertyChanging("VendorName");
                _VendorName = StructuralObject.SetValidValue(value, true, "VendorName");
                ReportPropertyChanged("VendorName");
                OnVendorNameChanged();
            }
        }
        private global::System.String _VendorName;
        partial void OnVendorNameChanging(global::System.String value);
        partial void OnVendorNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VendorPhone
        {
            get
            {
                return _VendorPhone;
            }
            set
            {
                OnVendorPhoneChanging(value);
                ReportPropertyChanging("VendorPhone");
                _VendorPhone = StructuralObject.SetValidValue(value, true, "VendorPhone");
                ReportPropertyChanged("VendorPhone");
                OnVendorPhoneChanged();
            }
        }
        private global::System.String _VendorPhone;
        partial void OnVendorPhoneChanging(global::System.String value);
        partial void OnVendorPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VendorWebsite
        {
            get
            {
                return _VendorWebsite;
            }
            set
            {
                OnVendorWebsiteChanging(value);
                ReportPropertyChanging("VendorWebsite");
                _VendorWebsite = StructuralObject.SetValidValue(value, true, "VendorWebsite");
                ReportPropertyChanged("VendorWebsite");
                OnVendorWebsiteChanged();
            }
        }
        private global::System.String _VendorWebsite;
        partial void OnVendorWebsiteChanging(global::System.String value);
        partial void OnVendorWebsiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VendorAddress
        {
            get
            {
                return _VendorAddress;
            }
            set
            {
                OnVendorAddressChanging(value);
                ReportPropertyChanging("VendorAddress");
                _VendorAddress = StructuralObject.SetValidValue(value, true, "VendorAddress");
                ReportPropertyChanged("VendorAddress");
                OnVendorAddressChanged();
            }
        }
        private global::System.String _VendorAddress;
        partial void OnVendorAddressChanging(global::System.String value);
        partial void OnVendorAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VendorCountry
        {
            get
            {
                return _VendorCountry;
            }
            set
            {
                OnVendorCountryChanging(value);
                ReportPropertyChanging("VendorCountry");
                _VendorCountry = StructuralObject.SetValidValue(value, true, "VendorCountry");
                ReportPropertyChanged("VendorCountry");
                OnVendorCountryChanged();
            }
        }
        private global::System.String _VendorCountry;
        partial void OnVendorCountryChanging(global::System.String value);
        partial void OnVendorCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean WarrantyAvailable
        {
            get
            {
                return _WarrantyAvailable;
            }
            set
            {
                OnWarrantyAvailableChanging(value);
                ReportPropertyChanging("WarrantyAvailable");
                _WarrantyAvailable = StructuralObject.SetValidValue(value, "WarrantyAvailable");
                ReportPropertyChanged("WarrantyAvailable");
                OnWarrantyAvailableChanged();
            }
        }
        private global::System.Boolean _WarrantyAvailable;
        partial void OnWarrantyAvailableChanging(global::System.Boolean value);
        partial void OnWarrantyAvailableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> WarrantyActivationDate
        {
            get
            {
                return _WarrantyActivationDate;
            }
            set
            {
                OnWarrantyActivationDateChanging(value);
                ReportPropertyChanging("WarrantyActivationDate");
                _WarrantyActivationDate = StructuralObject.SetValidValue(value, "WarrantyActivationDate");
                ReportPropertyChanged("WarrantyActivationDate");
                OnWarrantyActivationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _WarrantyActivationDate;
        partial void OnWarrantyActivationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnWarrantyActivationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ValidationFailures
        {
            get
            {
                return _ValidationFailures;
            }
            set
            {
                OnValidationFailuresChanging(value);
                ReportPropertyChanging("ValidationFailures");
                _ValidationFailures = StructuralObject.SetValidValue(value, "ValidationFailures");
                ReportPropertyChanged("ValidationFailures");
                OnValidationFailuresChanged();
            }
        }
        private Nullable<global::System.Int32> _ValidationFailures;
        partial void OnValidationFailuresChanging(Nullable<global::System.Int32> value);
        partial void OnValidationFailuresChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsInEffect
        {
            get
            {
                return _IsInEffect;
            }
            set
            {
                OnIsInEffectChanging(value);
                ReportPropertyChanging("IsInEffect");
                _IsInEffect = StructuralObject.SetValidValue(value, "IsInEffect");
                ReportPropertyChanged("IsInEffect");
                OnIsInEffectChanged();
            }
        }
        private global::System.Boolean _IsInEffect;
        partial void OnIsInEffectChanging(global::System.Boolean value);
        partial void OnIsInEffectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OveruseCount
        {
            get
            {
                return _OveruseCount;
            }
            set
            {
                OnOveruseCountChanging(value);
                ReportPropertyChanging("OveruseCount");
                _OveruseCount = StructuralObject.SetValidValue(value, "OveruseCount");
                ReportPropertyChanged("OveruseCount");
                OnOveruseCountChanged();
            }
        }
        private global::System.Int32 _OveruseCount;
        partial void OnOveruseCountChanging(global::System.Int32 value);
        partial void OnOveruseCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> OveruseExpirationDate
        {
            get
            {
                return _OveruseExpirationDate;
            }
            set
            {
                OnOveruseExpirationDateChanging(value);
                ReportPropertyChanging("OveruseExpirationDate");
                _OveruseExpirationDate = StructuralObject.SetValidValue(value, "OveruseExpirationDate");
                ReportPropertyChanged("OveruseExpirationDate");
                OnOveruseExpirationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _OveruseExpirationDate;
        partial void OnOveruseExpirationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnOveruseExpirationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OveruseEndpointTicks
        {
            get
            {
                return _OveruseEndpointTicks;
            }
            set
            {
                OnOveruseEndpointTicksChanging(value);
                ReportPropertyChanging("OveruseEndpointTicks");
                _OveruseEndpointTicks = StructuralObject.SetValidValue(value, "OveruseEndpointTicks");
                ReportPropertyChanged("OveruseEndpointTicks");
                OnOveruseEndpointTicksChanged();
            }
        }
        private global::System.Int64 _OveruseEndpointTicks;
        partial void OnOveruseEndpointTicksChanging(global::System.Int64 value);
        partial void OnOveruseEndpointTicksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsFree
        {
            get
            {
                return _IsFree;
            }
            set
            {
                OnIsFreeChanging(value);
                ReportPropertyChanging("IsFree");
                _IsFree = StructuralObject.SetValidValue(value, "IsFree");
                ReportPropertyChanged("IsFree");
                OnIsFreeChanged();
            }
        }
        private global::System.Boolean _IsFree;
        partial void OnIsFreeChanging(global::System.Boolean value);
        partial void OnIsFreeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FreeRenewals
        {
            get
            {
                return _FreeRenewals;
            }
            set
            {
                OnFreeRenewalsChanging(value);
                ReportPropertyChanging("FreeRenewals");
                _FreeRenewals = StructuralObject.SetValidValue(value, "FreeRenewals");
                ReportPropertyChanged("FreeRenewals");
                OnFreeRenewalsChanged();
            }
        }
        private Nullable<global::System.Int32> _FreeRenewals;
        partial void OnFreeRenewalsChanging(Nullable<global::System.Int32> value);
        partial void OnFreeRenewalsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UsedFreeRenewals
        {
            get
            {
                return _UsedFreeRenewals;
            }
            set
            {
                OnUsedFreeRenewalsChanging(value);
                ReportPropertyChanging("UsedFreeRenewals");
                _UsedFreeRenewals = StructuralObject.SetValidValue(value, "UsedFreeRenewals");
                ReportPropertyChanged("UsedFreeRenewals");
                OnUsedFreeRenewalsChanged();
            }
        }
        private Nullable<global::System.Int32> _UsedFreeRenewals;
        partial void OnUsedFreeRenewalsChanging(Nullable<global::System.Int32> value);
        partial void OnUsedFreeRenewalsChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_LicenseLicensedProduct", "LicensedProducts")]
        public EntityCollection<LicensedProduct> LicensedProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LicensedProduct>("CrmEntitiesModel.FK_LicenseLicensedProduct", "LicensedProducts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LicensedProduct>("CrmEntitiesModel.FK_LicenseLicensedProduct", "LicensedProducts", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="LicensedProduct")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LicensedProduct : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LicensedProduct object.
        /// </summary>
        /// <param name="uid">Initial value of the Uid property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="limitation">Initial value of the Limitation property.</param>
        /// <param name="licenseNumber">Initial value of the LicenseNumber property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        public static LicensedProduct CreateLicensedProduct(global::System.Guid uid, global::System.String name, global::System.Int32 limitation, global::System.Guid licenseNumber, global::System.Int64 id)
        {
            LicensedProduct licensedProduct = new LicensedProduct();
            licensedProduct.Uid = uid;
            licensedProduct.Name = name;
            licensedProduct.Limitation = limitation;
            licensedProduct.LicenseNumber = licenseNumber;
            licensedProduct.Id = id;
            return licensedProduct;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Uid
        {
            get
            {
                return _Uid;
            }
            set
            {
                OnUidChanging(value);
                ReportPropertyChanging("Uid");
                _Uid = StructuralObject.SetValidValue(value, "Uid");
                ReportPropertyChanged("Uid");
                OnUidChanged();
            }
        }
        private global::System.Guid _Uid;
        partial void OnUidChanging(global::System.Guid value);
        partial void OnUidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Limitation
        {
            get
            {
                return _Limitation;
            }
            set
            {
                OnLimitationChanging(value);
                ReportPropertyChanging("Limitation");
                _Limitation = StructuralObject.SetValidValue(value, "Limitation");
                ReportPropertyChanged("Limitation");
                OnLimitationChanged();
            }
        }
        private global::System.Int32 _Limitation;
        partial void OnLimitationChanging(global::System.Int32 value);
        partial void OnLimitationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LicenseNumber
        {
            get
            {
                return _LicenseNumber;
            }
            set
            {
                OnLicenseNumberChanging(value);
                ReportPropertyChanging("LicenseNumber");
                _LicenseNumber = StructuralObject.SetValidValue(value, "LicenseNumber");
                ReportPropertyChanged("LicenseNumber");
                OnLicenseNumberChanged();
            }
        }
        private global::System.Guid _LicenseNumber;
        partial void OnLicenseNumberChanging(global::System.Guid value);
        partial void OnLicenseNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_LicenseLicensedProduct", "Licenses")]
        public License License
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<License>("CrmEntitiesModel.FK_LicenseLicensedProduct", "Licenses").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<License>("CrmEntitiesModel.FK_LicenseLicensedProduct", "Licenses").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<License> LicenseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<License>("CrmEntitiesModel.FK_LicenseLicensedProduct", "Licenses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<License>("CrmEntitiesModel.FK_LicenseLicensedProduct", "Licenses", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="MalwareStatisticsReportDataSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MalwareStatisticsReportDataSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MalwareStatisticsReportDataSet object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="reportId">Initial value of the ReportId property.</param>
        /// <param name="computerId">Initial value of the ComputerId property.</param>
        /// <param name="hasData">Initial value of the HasData property.</param>
        public static MalwareStatisticsReportDataSet CreateMalwareStatisticsReportDataSet(global::System.Int32 id, global::System.Guid reportId, global::System.Int64 computerId, global::System.Boolean hasData)
        {
            MalwareStatisticsReportDataSet malwareStatisticsReportDataSet = new MalwareStatisticsReportDataSet();
            malwareStatisticsReportDataSet.Id = id;
            malwareStatisticsReportDataSet.ReportId = reportId;
            malwareStatisticsReportDataSet.ComputerId = computerId;
            malwareStatisticsReportDataSet.HasData = hasData;
            return malwareStatisticsReportDataSet;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReportId
        {
            get
            {
                return _ReportId;
            }
            set
            {
                OnReportIdChanging(value);
                ReportPropertyChanging("ReportId");
                _ReportId = StructuralObject.SetValidValue(value, "ReportId");
                ReportPropertyChanged("ReportId");
                OnReportIdChanged();
            }
        }
        private global::System.Guid _ReportId;
        partial void OnReportIdChanging(global::System.Guid value);
        partial void OnReportIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ComputerName
        {
            get
            {
                return _ComputerName;
            }
            set
            {
                OnComputerNameChanging(value);
                ReportPropertyChanging("ComputerName");
                _ComputerName = StructuralObject.SetValidValue(value, true, "ComputerName");
                ReportPropertyChanged("ComputerName");
                OnComputerNameChanged();
            }
        }
        private global::System.String _ComputerName;
        partial void OnComputerNameChanging(global::System.String value);
        partial void OnComputerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ComputerIPAddess
        {
            get
            {
                return _ComputerIPAddess;
            }
            set
            {
                OnComputerIPAddessChanging(value);
                ReportPropertyChanging("ComputerIPAddess");
                _ComputerIPAddess = StructuralObject.SetValidValue(value, true, "ComputerIPAddess");
                ReportPropertyChanged("ComputerIPAddess");
                OnComputerIPAddessChanged();
            }
        }
        private global::System.String _ComputerIPAddess;
        partial void OnComputerIPAddessChanging(global::System.String value);
        partial void OnComputerIPAddessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GroupName
        {
            get
            {
                return _GroupName;
            }
            set
            {
                OnGroupNameChanging(value);
                ReportPropertyChanging("GroupName");
                _GroupName = StructuralObject.SetValidValue(value, true, "GroupName");
                ReportPropertyChanged("GroupName");
                OnGroupNameChanged();
            }
        }
        private global::System.String _GroupName;
        partial void OnGroupNameChanging(global::System.String value);
        partial void OnGroupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MalwareName
        {
            get
            {
                return _MalwareName;
            }
            set
            {
                OnMalwareNameChanging(value);
                ReportPropertyChanging("MalwareName");
                _MalwareName = StructuralObject.SetValidValue(value, true, "MalwareName");
                ReportPropertyChanged("MalwareName");
                OnMalwareNameChanged();
            }
        }
        private global::System.String _MalwareName;
        partial void OnMalwareNameChanging(global::System.String value);
        partial void OnMalwareNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MalwareLocation
        {
            get
            {
                return _MalwareLocation;
            }
            set
            {
                OnMalwareLocationChanging(value);
                ReportPropertyChanging("MalwareLocation");
                _MalwareLocation = StructuralObject.SetValidValue(value, true, "MalwareLocation");
                ReportPropertyChanged("MalwareLocation");
                OnMalwareLocationChanged();
            }
        }
        private global::System.String _MalwareLocation;
        partial void OnMalwareLocationChanging(global::System.String value);
        partial void OnMalwareLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MalwareDate
        {
            get
            {
                return _MalwareDate;
            }
            set
            {
                OnMalwareDateChanging(value);
                ReportPropertyChanging("MalwareDate");
                _MalwareDate = StructuralObject.SetValidValue(value, "MalwareDate");
                ReportPropertyChanged("MalwareDate");
                OnMalwareDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _MalwareDate;
        partial void OnMalwareDateChanging(Nullable<global::System.DateTime> value);
        partial void OnMalwareDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MalwareAction
        {
            get
            {
                return _MalwareAction;
            }
            set
            {
                OnMalwareActionChanging(value);
                ReportPropertyChanging("MalwareAction");
                _MalwareAction = StructuralObject.SetValidValue(value, true, "MalwareAction");
                ReportPropertyChanged("MalwareAction");
                OnMalwareActionChanged();
            }
        }
        private global::System.String _MalwareAction;
        partial void OnMalwareActionChanging(global::System.String value);
        partial void OnMalwareActionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MalwareStatus
        {
            get
            {
                return _MalwareStatus;
            }
            set
            {
                OnMalwareStatusChanging(value);
                ReportPropertyChanging("MalwareStatus");
                _MalwareStatus = StructuralObject.SetValidValue(value, true, "MalwareStatus");
                ReportPropertyChanged("MalwareStatus");
                OnMalwareStatusChanged();
            }
        }
        private global::System.String _MalwareStatus;
        partial void OnMalwareStatusChanging(global::System.String value);
        partial void OnMalwareStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ComputerId
        {
            get
            {
                return _ComputerId;
            }
            set
            {
                OnComputerIdChanging(value);
                ReportPropertyChanging("ComputerId");
                _ComputerId = StructuralObject.SetValidValue(value, "ComputerId");
                ReportPropertyChanged("ComputerId");
                OnComputerIdChanged();
            }
        }
        private global::System.Int64 _ComputerId;
        partial void OnComputerIdChanging(global::System.Int64 value);
        partial void OnComputerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasData
        {
            get
            {
                return _HasData;
            }
            set
            {
                OnHasDataChanging(value);
                ReportPropertyChanging("HasData");
                _HasData = StructuralObject.SetValidValue(value, "HasData");
                ReportPropertyChanged("HasData");
                OnHasDataChanged();
            }
        }
        private global::System.Boolean _HasData;
        partial void OnHasDataChanging(global::System.Boolean value);
        partial void OnHasDataChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_MalwareStatisticsReportDataReport", "Reports")]
        public Report Report
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_MalwareStatisticsReportDataReport", "Reports").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_MalwareStatisticsReportDataReport", "Reports").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Report> ReportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_MalwareStatisticsReportDataReport", "Reports");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Report>("CrmEntitiesModel.FK_MalwareStatisticsReportDataReport", "Reports", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="MessageParam")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MessageParam : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MessageParam object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="descriptionAsXml">Initial value of the DescriptionAsXml property.</param>
        /// <param name="value_TypeName">Initial value of the Value_TypeName property.</param>
        /// <param name="value_ValueAsXml">Initial value of the Value_ValueAsXml property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        public static MessageParam CreateMessageParam(global::System.String name, global::System.String descriptionAsXml, global::System.String value_TypeName, global::System.String value_ValueAsXml, global::System.Int64 id)
        {
            MessageParam messageParam = new MessageParam();
            messageParam.Name = name;
            messageParam.DescriptionAsXml = descriptionAsXml;
            messageParam.Value_TypeName = value_TypeName;
            messageParam.Value_ValueAsXml = value_ValueAsXml;
            messageParam.Id = id;
            return messageParam;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DescriptionAsXml
        {
            get
            {
                return _DescriptionAsXml;
            }
            set
            {
                OnDescriptionAsXmlChanging(value);
                ReportPropertyChanging("DescriptionAsXml");
                _DescriptionAsXml = StructuralObject.SetValidValue(value, false, "DescriptionAsXml");
                ReportPropertyChanged("DescriptionAsXml");
                OnDescriptionAsXmlChanged();
            }
        }
        private global::System.String _DescriptionAsXml;
        partial void OnDescriptionAsXmlChanging(global::System.String value);
        partial void OnDescriptionAsXmlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value_TypeName
        {
            get
            {
                return _Value_TypeName;
            }
            set
            {
                OnValue_TypeNameChanging(value);
                ReportPropertyChanging("Value_TypeName");
                _Value_TypeName = StructuralObject.SetValidValue(value, false, "Value_TypeName");
                ReportPropertyChanged("Value_TypeName");
                OnValue_TypeNameChanged();
            }
        }
        private global::System.String _Value_TypeName;
        partial void OnValue_TypeNameChanging(global::System.String value);
        partial void OnValue_TypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value_ValueAsXml
        {
            get
            {
                return _Value_ValueAsXml;
            }
            set
            {
                OnValue_ValueAsXmlChanging(value);
                ReportPropertyChanging("Value_ValueAsXml");
                _Value_ValueAsXml = StructuralObject.SetValidValue(value, false, "Value_ValueAsXml");
                ReportPropertyChanged("Value_ValueAsXml");
                OnValue_ValueAsXmlChanged();
            }
        }
        private global::System.String _Value_ValueAsXml;
        partial void OnValue_ValueAsXmlChanging(global::System.String value);
        partial void OnValue_ValueAsXmlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "MessageParams_AlertParam", "Alerts")]
        public Alert Alert
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Alert>("CrmEntitiesModel.MessageParams_AlertParam", "Alerts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Alert>("CrmEntitiesModel.MessageParams_AlertParam", "Alerts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Alert> AlertReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Alert>("CrmEntitiesModel.MessageParams_AlertParam", "Alerts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Alert>("CrmEntitiesModel.MessageParams_AlertParam", "Alerts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "MessageParams_RequestAnswerParam", "RequestAnswers")]
        public RequestAnswer RequestAnswer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RequestAnswer>("CrmEntitiesModel.MessageParams_RequestAnswerParam", "RequestAnswers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RequestAnswer>("CrmEntitiesModel.MessageParams_RequestAnswerParam", "RequestAnswers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RequestAnswer> RequestAnswerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RequestAnswer>("CrmEntitiesModel.MessageParams_RequestAnswerParam", "RequestAnswers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RequestAnswer>("CrmEntitiesModel.MessageParams_RequestAnswerParam", "RequestAnswers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="Package")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Package : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Package object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="uid">Initial value of the Uid property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="size">Initial value of the Size property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="storedPath">Initial value of the StoredPath property.</param>
        /// <param name="productCode">Initial value of the ProductCode property.</param>
        /// <param name="upgradeCode">Initial value of the UpgradeCode property.</param>
        /// <param name="productVersion">Initial value of the ProductVersion property.</param>
        /// <param name="timeStamp">Initial value of the TimeStamp property.</param>
        /// <param name="hash">Initial value of the Hash property.</param>
        public static Package CreatePackage(global::System.Int64 id, global::System.Guid uid, global::System.String name, global::System.Int64 size, global::System.DateTime created, global::System.String storedPath, global::System.Guid productCode, global::System.Guid upgradeCode, global::System.String productVersion, global::System.Byte[] timeStamp, global::System.String hash)
        {
            Package package = new Package();
            package.Id = id;
            package.Uid = uid;
            package.Name = name;
            package.Size = size;
            package.Created = created;
            package.StoredPath = storedPath;
            package.ProductCode = productCode;
            package.UpgradeCode = upgradeCode;
            package.ProductVersion = productVersion;
            package.TimeStamp = timeStamp;
            package.Hash = hash;
            return package;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Uid
        {
            get
            {
                return _Uid;
            }
            set
            {
                OnUidChanging(value);
                ReportPropertyChanging("Uid");
                _Uid = StructuralObject.SetValidValue(value, "Uid");
                ReportPropertyChanged("Uid");
                OnUidChanged();
            }
        }
        private global::System.Guid _Uid;
        partial void OnUidChanging(global::System.Guid value);
        partial void OnUidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Size
        {
            get
            {
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = StructuralObject.SetValidValue(value, "Size");
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private global::System.Int64 _Size;
        partial void OnSizeChanging(global::System.Int64 value);
        partial void OnSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value, "Created");
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StoredPath
        {
            get
            {
                return _StoredPath;
            }
            set
            {
                OnStoredPathChanging(value);
                ReportPropertyChanging("StoredPath");
                _StoredPath = StructuralObject.SetValidValue(value, false, "StoredPath");
                ReportPropertyChanged("StoredPath");
                OnStoredPathChanged();
            }
        }
        private global::System.String _StoredPath;
        partial void OnStoredPathChanging(global::System.String value);
        partial void OnStoredPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ProductCode
        {
            get
            {
                return _ProductCode;
            }
            set
            {
                OnProductCodeChanging(value);
                ReportPropertyChanging("ProductCode");
                _ProductCode = StructuralObject.SetValidValue(value, "ProductCode");
                ReportPropertyChanged("ProductCode");
                OnProductCodeChanged();
            }
        }
        private global::System.Guid _ProductCode;
        partial void OnProductCodeChanging(global::System.Guid value);
        partial void OnProductCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UpgradeCode
        {
            get
            {
                return _UpgradeCode;
            }
            set
            {
                OnUpgradeCodeChanging(value);
                ReportPropertyChanging("UpgradeCode");
                _UpgradeCode = StructuralObject.SetValidValue(value, "UpgradeCode");
                ReportPropertyChanged("UpgradeCode");
                OnUpgradeCodeChanged();
            }
        }
        private global::System.Guid _UpgradeCode;
        partial void OnUpgradeCodeChanging(global::System.Guid value);
        partial void OnUpgradeCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductVersion
        {
            get
            {
                return _ProductVersion;
            }
            set
            {
                OnProductVersionChanging(value);
                ReportPropertyChanging("ProductVersion");
                _ProductVersion = StructuralObject.SetValidValue(value, false, "ProductVersion");
                ReportPropertyChanged("ProductVersion");
                OnProductVersionChanged();
            }
        }
        private global::System.String _ProductVersion;
        partial void OnProductVersionChanging(global::System.String value);
        partial void OnProductVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] TimeStamp
        {
            get
            {
                return StructuralObject.GetValidValue(_TimeStamp);
            }
            set
            {
                OnTimeStampChanging(value);
                ReportPropertyChanging("TimeStamp");
                _TimeStamp = StructuralObject.SetValidValue(value, true, "TimeStamp");
                ReportPropertyChanged("TimeStamp");
                OnTimeStampChanged();
            }
        }
        private global::System.Byte[] _TimeStamp;
        partial void OnTimeStampChanging(global::System.Byte[] value);
        partial void OnTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Hash
        {
            get
            {
                return _Hash;
            }
            set
            {
                OnHashChanging(value);
                ReportPropertyChanging("Hash");
                _Hash = StructuralObject.SetValidValue(value, false, "Hash");
                ReportPropertyChanged("Hash");
                OnHashChanged();
            }
        }
        private global::System.String _Hash;
        partial void OnHashChanging(global::System.String value);
        partial void OnHashChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="Policy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Policy : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Policy object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="isDefault">Initial value of the IsDefault property.</param>
        /// <param name="modified">Initial value of the Modified property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="overrideDefaultPolicy">Initial value of the OverrideDefaultPolicy property.</param>
        /// <param name="uid">Initial value of the Uid property.</param>
        /// <param name="agentInfo_AllowComputerAdmin">Initial value of the AgentInfo_AllowComputerAdmin property.</param>
        /// <param name="agentInfo_AllowLocalAdmin">Initial value of the AgentInfo_AllowLocalAdmin property.</param>
        /// <param name="agentInfo_InternetServer">Initial value of the AgentInfo_InternetServer property.</param>
        /// <param name="agentInfo_LocalPassword">Initial value of the AgentInfo_LocalPassword property.</param>
        /// <param name="agentInfo_LocalServer">Initial value of the AgentInfo_LocalServer property.</param>
        /// <param name="agentInfo_PolicyPollingInterval">Initial value of the AgentInfo_PolicyPollingInterval property.</param>
        /// <param name="agentInfo_PollingInterval">Initial value of the AgentInfo_PollingInterval property.</param>
        public static Policy CreatePolicy(global::System.Int64 id, global::System.String description, global::System.Boolean isDefault, global::System.DateTime modified, global::System.String name, global::System.Boolean overrideDefaultPolicy, global::System.Guid uid, global::System.Boolean agentInfo_AllowComputerAdmin, global::System.Boolean agentInfo_AllowLocalAdmin, global::System.String agentInfo_InternetServer, global::System.String agentInfo_LocalPassword, global::System.String agentInfo_LocalServer, global::System.Int32 agentInfo_PolicyPollingInterval, global::System.Int32 agentInfo_PollingInterval)
        {
            Policy policy = new Policy();
            policy.Id = id;
            policy.Description = description;
            policy.IsDefault = isDefault;
            policy.Modified = modified;
            policy.Name = name;
            policy.OverrideDefaultPolicy = overrideDefaultPolicy;
            policy.Uid = uid;
            policy.AgentInfo_AllowComputerAdmin = agentInfo_AllowComputerAdmin;
            policy.AgentInfo_AllowLocalAdmin = agentInfo_AllowLocalAdmin;
            policy.AgentInfo_InternetServer = agentInfo_InternetServer;
            policy.AgentInfo_LocalPassword = agentInfo_LocalPassword;
            policy.AgentInfo_LocalServer = agentInfo_LocalServer;
            policy.AgentInfo_PolicyPollingInterval = agentInfo_PolicyPollingInterval;
            policy.AgentInfo_PollingInterval = agentInfo_PollingInterval;
            return policy;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDefault
        {
            get
            {
                return _IsDefault;
            }
            set
            {
                OnIsDefaultChanging(value);
                ReportPropertyChanging("IsDefault");
                _IsDefault = StructuralObject.SetValidValue(value, "IsDefault");
                ReportPropertyChanged("IsDefault");
                OnIsDefaultChanged();
            }
        }
        private global::System.Boolean _IsDefault;
        partial void OnIsDefaultChanging(global::System.Boolean value);
        partial void OnIsDefaultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value, "Modified");
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private global::System.DateTime _Modified;
        partial void OnModifiedChanging(global::System.DateTime value);
        partial void OnModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean OverrideDefaultPolicy
        {
            get
            {
                return _OverrideDefaultPolicy;
            }
            set
            {
                OnOverrideDefaultPolicyChanging(value);
                ReportPropertyChanging("OverrideDefaultPolicy");
                _OverrideDefaultPolicy = StructuralObject.SetValidValue(value, "OverrideDefaultPolicy");
                ReportPropertyChanged("OverrideDefaultPolicy");
                OnOverrideDefaultPolicyChanged();
            }
        }
        private global::System.Boolean _OverrideDefaultPolicy;
        partial void OnOverrideDefaultPolicyChanging(global::System.Boolean value);
        partial void OnOverrideDefaultPolicyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Uid
        {
            get
            {
                return _Uid;
            }
            set
            {
                OnUidChanging(value);
                ReportPropertyChanging("Uid");
                _Uid = StructuralObject.SetValidValue(value, "Uid");
                ReportPropertyChanged("Uid");
                OnUidChanged();
            }
        }
        private global::System.Guid _Uid;
        partial void OnUidChanging(global::System.Guid value);
        partial void OnUidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AgentInfo_AllowComputerAdmin
        {
            get
            {
                return _AgentInfo_AllowComputerAdmin;
            }
            set
            {
                OnAgentInfo_AllowComputerAdminChanging(value);
                ReportPropertyChanging("AgentInfo_AllowComputerAdmin");
                _AgentInfo_AllowComputerAdmin = StructuralObject.SetValidValue(value, "AgentInfo_AllowComputerAdmin");
                ReportPropertyChanged("AgentInfo_AllowComputerAdmin");
                OnAgentInfo_AllowComputerAdminChanged();
            }
        }
        private global::System.Boolean _AgentInfo_AllowComputerAdmin;
        partial void OnAgentInfo_AllowComputerAdminChanging(global::System.Boolean value);
        partial void OnAgentInfo_AllowComputerAdminChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AgentInfo_AllowLocalAdmin
        {
            get
            {
                return _AgentInfo_AllowLocalAdmin;
            }
            set
            {
                OnAgentInfo_AllowLocalAdminChanging(value);
                ReportPropertyChanging("AgentInfo_AllowLocalAdmin");
                _AgentInfo_AllowLocalAdmin = StructuralObject.SetValidValue(value, "AgentInfo_AllowLocalAdmin");
                ReportPropertyChanged("AgentInfo_AllowLocalAdmin");
                OnAgentInfo_AllowLocalAdminChanged();
            }
        }
        private global::System.Boolean _AgentInfo_AllowLocalAdmin;
        partial void OnAgentInfo_AllowLocalAdminChanging(global::System.Boolean value);
        partial void OnAgentInfo_AllowLocalAdminChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AgentInfo_InternetServer
        {
            get
            {
                return _AgentInfo_InternetServer;
            }
            set
            {
                OnAgentInfo_InternetServerChanging(value);
                ReportPropertyChanging("AgentInfo_InternetServer");
                _AgentInfo_InternetServer = StructuralObject.SetValidValue(value, false, "AgentInfo_InternetServer");
                ReportPropertyChanged("AgentInfo_InternetServer");
                OnAgentInfo_InternetServerChanged();
            }
        }
        private global::System.String _AgentInfo_InternetServer;
        partial void OnAgentInfo_InternetServerChanging(global::System.String value);
        partial void OnAgentInfo_InternetServerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AgentInfo_LocalPassword
        {
            get
            {
                return _AgentInfo_LocalPassword;
            }
            set
            {
                OnAgentInfo_LocalPasswordChanging(value);
                ReportPropertyChanging("AgentInfo_LocalPassword");
                _AgentInfo_LocalPassword = StructuralObject.SetValidValue(value, false, "AgentInfo_LocalPassword");
                ReportPropertyChanged("AgentInfo_LocalPassword");
                OnAgentInfo_LocalPasswordChanged();
            }
        }
        private global::System.String _AgentInfo_LocalPassword;
        partial void OnAgentInfo_LocalPasswordChanging(global::System.String value);
        partial void OnAgentInfo_LocalPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AgentInfo_LocalServer
        {
            get
            {
                return _AgentInfo_LocalServer;
            }
            set
            {
                OnAgentInfo_LocalServerChanging(value);
                ReportPropertyChanging("AgentInfo_LocalServer");
                _AgentInfo_LocalServer = StructuralObject.SetValidValue(value, false, "AgentInfo_LocalServer");
                ReportPropertyChanged("AgentInfo_LocalServer");
                OnAgentInfo_LocalServerChanged();
            }
        }
        private global::System.String _AgentInfo_LocalServer;
        partial void OnAgentInfo_LocalServerChanging(global::System.String value);
        partial void OnAgentInfo_LocalServerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AgentInfo_PolicyPollingInterval
        {
            get
            {
                return _AgentInfo_PolicyPollingInterval;
            }
            set
            {
                OnAgentInfo_PolicyPollingIntervalChanging(value);
                ReportPropertyChanging("AgentInfo_PolicyPollingInterval");
                _AgentInfo_PolicyPollingInterval = StructuralObject.SetValidValue(value, "AgentInfo_PolicyPollingInterval");
                ReportPropertyChanged("AgentInfo_PolicyPollingInterval");
                OnAgentInfo_PolicyPollingIntervalChanged();
            }
        }
        private global::System.Int32 _AgentInfo_PolicyPollingInterval;
        partial void OnAgentInfo_PolicyPollingIntervalChanging(global::System.Int32 value);
        partial void OnAgentInfo_PolicyPollingIntervalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AgentInfo_PollingInterval
        {
            get
            {
                return _AgentInfo_PollingInterval;
            }
            set
            {
                OnAgentInfo_PollingIntervalChanging(value);
                ReportPropertyChanging("AgentInfo_PollingInterval");
                _AgentInfo_PollingInterval = StructuralObject.SetValidValue(value, "AgentInfo_PollingInterval");
                ReportPropertyChanged("AgentInfo_PollingInterval");
                OnAgentInfo_PollingIntervalChanged();
            }
        }
        private global::System.Int32 _AgentInfo_PollingInterval;
        partial void OnAgentInfo_PollingIntervalChanging(global::System.Int32 value);
        partial void OnAgentInfo_PollingIntervalChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_InternetPolicyComputerGroup", "ComputerGroups")]
        public EntityCollection<ComputerGroup> ComputerGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ComputerGroup>("CrmEntitiesModel.FK_InternetPolicyComputerGroup", "ComputerGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ComputerGroup>("CrmEntitiesModel.FK_InternetPolicyComputerGroup", "ComputerGroups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_LocalPolicyComputerGroup", "ComputerGroups")]
        public EntityCollection<ComputerGroup> ComputerGroups1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ComputerGroup>("CrmEntitiesModel.FK_LocalPolicyComputerGroup", "ComputerGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ComputerGroup>("CrmEntitiesModel.FK_LocalPolicyComputerGroup", "ComputerGroups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_InternetPolicyComputer", "Computers")]
        public EntityCollection<Computer> Computers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Computer>("CrmEntitiesModel.FK_InternetPolicyComputer", "Computers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Computer>("CrmEntitiesModel.FK_InternetPolicyComputer", "Computers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_LocalPolicyComputer", "Computers")]
        public EntityCollection<Computer> Computers1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Computer>("CrmEntitiesModel.FK_LocalPolicyComputer", "Computers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Computer>("CrmEntitiesModel.FK_LocalPolicyComputer", "Computers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_PolicyPolicyProductInfo", "PolicyProductInfoes")]
        public EntityCollection<PolicyProductInfo> PolicyProductInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyProductInfo>("CrmEntitiesModel.FK_PolicyPolicyProductInfo", "PolicyProductInfoes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyProductInfo>("CrmEntitiesModel.FK_PolicyPolicyProductInfo", "PolicyProductInfoes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="PolicyComponentInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PolicyComponentInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PolicyComponentInfo object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="settingsAsXml">Initial value of the SettingsAsXml property.</param>
        /// <param name="policyProductInfoId">Initial value of the PolicyProductInfoId property.</param>
        public static PolicyComponentInfo CreatePolicyComponentInfo(global::System.Int64 id, global::System.String name, global::System.String settingsAsXml, global::System.Int64 policyProductInfoId)
        {
            PolicyComponentInfo policyComponentInfo = new PolicyComponentInfo();
            policyComponentInfo.Id = id;
            policyComponentInfo.Name = name;
            policyComponentInfo.SettingsAsXml = settingsAsXml;
            policyComponentInfo.PolicyProductInfoId = policyProductInfoId;
            return policyComponentInfo;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SettingsAsXml
        {
            get
            {
                return _SettingsAsXml;
            }
            set
            {
                OnSettingsAsXmlChanging(value);
                ReportPropertyChanging("SettingsAsXml");
                _SettingsAsXml = StructuralObject.SetValidValue(value, false, "SettingsAsXml");
                ReportPropertyChanged("SettingsAsXml");
                OnSettingsAsXmlChanged();
            }
        }
        private global::System.String _SettingsAsXml;
        partial void OnSettingsAsXmlChanging(global::System.String value);
        partial void OnSettingsAsXmlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PolicyProductInfoId
        {
            get
            {
                return _PolicyProductInfoId;
            }
            set
            {
                OnPolicyProductInfoIdChanging(value);
                ReportPropertyChanging("PolicyProductInfoId");
                _PolicyProductInfoId = StructuralObject.SetValidValue(value, "PolicyProductInfoId");
                ReportPropertyChanged("PolicyProductInfoId");
                OnPolicyProductInfoIdChanged();
            }
        }
        private global::System.Int64 _PolicyProductInfoId;
        partial void OnPolicyProductInfoIdChanging(global::System.Int64 value);
        partial void OnPolicyProductInfoIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_PolicyProductInfoPolicyComponentInfo", "PolicyProductInfoes")]
        public PolicyProductInfo PolicyProductInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyProductInfo>("CrmEntitiesModel.FK_PolicyProductInfoPolicyComponentInfo", "PolicyProductInfoes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyProductInfo>("CrmEntitiesModel.FK_PolicyProductInfoPolicyComponentInfo", "PolicyProductInfoes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PolicyProductInfo> PolicyProductInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicyProductInfo>("CrmEntitiesModel.FK_PolicyProductInfoPolicyComponentInfo", "PolicyProductInfoes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PolicyProductInfo>("CrmEntitiesModel.FK_PolicyProductInfoPolicyComponentInfo", "PolicyProductInfoes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="PolicyDeltaRawDataSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PolicyDeltaRawDataSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PolicyDeltaRawDataSet object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="computerId">Initial value of the ComputerId property.</param>
        /// <param name="discovered">Initial value of the Discovered property.</param>
        /// <param name="updated">Initial value of the Updated property.</param>
        public static PolicyDeltaRawDataSet CreatePolicyDeltaRawDataSet(global::System.Int32 id, global::System.Int64 computerId, global::System.DateTime discovered, global::System.DateTime updated)
        {
            PolicyDeltaRawDataSet policyDeltaRawDataSet = new PolicyDeltaRawDataSet();
            policyDeltaRawDataSet.Id = id;
            policyDeltaRawDataSet.ComputerId = computerId;
            policyDeltaRawDataSet.Discovered = discovered;
            policyDeltaRawDataSet.Updated = updated;
            return policyDeltaRawDataSet;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ComputerId
        {
            get
            {
                return _ComputerId;
            }
            set
            {
                OnComputerIdChanging(value);
                ReportPropertyChanging("ComputerId");
                _ComputerId = StructuralObject.SetValidValue(value, "ComputerId");
                ReportPropertyChanged("ComputerId");
                OnComputerIdChanged();
            }
        }
        private global::System.Int64 _ComputerId;
        partial void OnComputerIdChanging(global::System.Int64 value);
        partial void OnComputerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Discovered
        {
            get
            {
                return _Discovered;
            }
            set
            {
                OnDiscoveredChanging(value);
                ReportPropertyChanging("Discovered");
                _Discovered = StructuralObject.SetValidValue(value, "Discovered");
                ReportPropertyChanged("Discovered");
                OnDiscoveredChanged();
            }
        }
        private global::System.DateTime _Discovered;
        partial void OnDiscoveredChanging(global::System.DateTime value);
        partial void OnDiscoveredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Results
        {
            get
            {
                return _Results;
            }
            set
            {
                OnResultsChanging(value);
                ReportPropertyChanging("Results");
                _Results = StructuralObject.SetValidValue(value, true, "Results");
                ReportPropertyChanged("Results");
                OnResultsChanged();
            }
        }
        private global::System.String _Results;
        partial void OnResultsChanging(global::System.String value);
        partial void OnResultsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value, "Updated");
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_PolicyDeltaRawDataComputer", "Computers")]
        public Computer Computer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_PolicyDeltaRawDataComputer", "Computers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_PolicyDeltaRawDataComputer", "Computers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Computer> ComputerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_PolicyDeltaRawDataComputer", "Computers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Computer>("CrmEntitiesModel.FK_PolicyDeltaRawDataComputer", "Computers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="PolicyDeltaReportDataSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PolicyDeltaReportDataSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PolicyDeltaReportDataSet object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="reportId">Initial value of the ReportId property.</param>
        /// <param name="groupId">Initial value of the GroupId property.</param>
        /// <param name="computerId">Initial value of the ComputerId property.</param>
        /// <param name="changeType">Initial value of the ChangeType property.</param>
        /// <param name="hasData">Initial value of the HasData property.</param>
        public static PolicyDeltaReportDataSet CreatePolicyDeltaReportDataSet(global::System.Int32 id, global::System.Guid reportId, global::System.Int64 groupId, global::System.Int64 computerId, global::System.Int32 changeType, global::System.Boolean hasData)
        {
            PolicyDeltaReportDataSet policyDeltaReportDataSet = new PolicyDeltaReportDataSet();
            policyDeltaReportDataSet.Id = id;
            policyDeltaReportDataSet.ReportId = reportId;
            policyDeltaReportDataSet.GroupId = groupId;
            policyDeltaReportDataSet.ComputerId = computerId;
            policyDeltaReportDataSet.ChangeType = changeType;
            policyDeltaReportDataSet.HasData = hasData;
            return policyDeltaReportDataSet;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReportId
        {
            get
            {
                return _ReportId;
            }
            set
            {
                OnReportIdChanging(value);
                ReportPropertyChanging("ReportId");
                _ReportId = StructuralObject.SetValidValue(value, "ReportId");
                ReportPropertyChanged("ReportId");
                OnReportIdChanged();
            }
        }
        private global::System.Guid _ReportId;
        partial void OnReportIdChanging(global::System.Guid value);
        partial void OnReportIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ComputerName
        {
            get
            {
                return _ComputerName;
            }
            set
            {
                OnComputerNameChanging(value);
                ReportPropertyChanging("ComputerName");
                _ComputerName = StructuralObject.SetValidValue(value, true, "ComputerName");
                ReportPropertyChanged("ComputerName");
                OnComputerNameChanged();
            }
        }
        private global::System.String _ComputerName;
        partial void OnComputerNameChanging(global::System.String value);
        partial void OnComputerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ComputerIPAddess
        {
            get
            {
                return _ComputerIPAddess;
            }
            set
            {
                OnComputerIPAddessChanging(value);
                ReportPropertyChanging("ComputerIPAddess");
                _ComputerIPAddess = StructuralObject.SetValidValue(value, true, "ComputerIPAddess");
                ReportPropertyChanged("ComputerIPAddess");
                OnComputerIPAddessChanged();
            }
        }
        private global::System.String _ComputerIPAddess;
        partial void OnComputerIPAddessChanging(global::System.String value);
        partial void OnComputerIPAddessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GroupName
        {
            get
            {
                return _GroupName;
            }
            set
            {
                OnGroupNameChanging(value);
                ReportPropertyChanging("GroupName");
                _GroupName = StructuralObject.SetValidValue(value, true, "GroupName");
                ReportPropertyChanged("GroupName");
                OnGroupNameChanged();
            }
        }
        private global::System.String _GroupName;
        partial void OnGroupNameChanging(global::System.String value);
        partial void OnGroupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value, "GroupId");
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private global::System.Int64 _GroupId;
        partial void OnGroupIdChanging(global::System.Int64 value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ComputerId
        {
            get
            {
                return _ComputerId;
            }
            set
            {
                OnComputerIdChanging(value);
                ReportPropertyChanging("ComputerId");
                _ComputerId = StructuralObject.SetValidValue(value, "ComputerId");
                ReportPropertyChanged("ComputerId");
                OnComputerIdChanged();
            }
        }
        private global::System.Int64 _ComputerId;
        partial void OnComputerIdChanging(global::System.Int64 value);
        partial void OnComputerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastPollDate
        {
            get
            {
                return _LastPollDate;
            }
            set
            {
                OnLastPollDateChanging(value);
                ReportPropertyChanging("LastPollDate");
                _LastPollDate = StructuralObject.SetValidValue(value, "LastPollDate");
                ReportPropertyChanged("LastPollDate");
                OnLastPollDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastPollDate;
        partial void OnLastPollDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastPollDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> NonComplianceDate
        {
            get
            {
                return _NonComplianceDate;
            }
            set
            {
                OnNonComplianceDateChanging(value);
                ReportPropertyChanging("NonComplianceDate");
                _NonComplianceDate = StructuralObject.SetValidValue(value, "NonComplianceDate");
                ReportPropertyChanged("NonComplianceDate");
                OnNonComplianceDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _NonComplianceDate;
        partial void OnNonComplianceDateChanging(Nullable<global::System.DateTime> value);
        partial void OnNonComplianceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyName
        {
            get
            {
                return _PolicyName;
            }
            set
            {
                OnPolicyNameChanging(value);
                ReportPropertyChanging("PolicyName");
                _PolicyName = StructuralObject.SetValidValue(value, true, "PolicyName");
                ReportPropertyChanged("PolicyName");
                OnPolicyNameChanged();
            }
        }
        private global::System.String _PolicyName;
        partial void OnPolicyNameChanging(global::System.String value);
        partial void OnPolicyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ComponentName
        {
            get
            {
                return _ComponentName;
            }
            set
            {
                OnComponentNameChanging(value);
                ReportPropertyChanging("ComponentName");
                _ComponentName = StructuralObject.SetValidValue(value, true, "ComponentName");
                ReportPropertyChanged("ComponentName");
                OnComponentNameChanged();
            }
        }
        private global::System.String _ComponentName;
        partial void OnComponentNameChanging(global::System.String value);
        partial void OnComponentNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ComponentDescription
        {
            get
            {
                return _ComponentDescription;
            }
            set
            {
                OnComponentDescriptionChanging(value);
                ReportPropertyChanging("ComponentDescription");
                _ComponentDescription = StructuralObject.SetValidValue(value, true, "ComponentDescription");
                ReportPropertyChanged("ComponentDescription");
                OnComponentDescriptionChanged();
            }
        }
        private global::System.String _ComponentDescription;
        partial void OnComponentDescriptionChanging(global::System.String value);
        partial void OnComponentDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangeType
        {
            get
            {
                return _ChangeType;
            }
            set
            {
                OnChangeTypeChanging(value);
                ReportPropertyChanging("ChangeType");
                _ChangeType = StructuralObject.SetValidValue(value, "ChangeType");
                ReportPropertyChanged("ChangeType");
                OnChangeTypeChanged();
            }
        }
        private global::System.Int32 _ChangeType;
        partial void OnChangeTypeChanging(global::System.Int32 value);
        partial void OnChangeTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasData
        {
            get
            {
                return _HasData;
            }
            set
            {
                OnHasDataChanging(value);
                ReportPropertyChanging("HasData");
                _HasData = StructuralObject.SetValidValue(value, "HasData");
                ReportPropertyChanged("HasData");
                OnHasDataChanged();
            }
        }
        private global::System.Boolean _HasData;
        partial void OnHasDataChanging(global::System.Boolean value);
        partial void OnHasDataChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_PolicyDeltaReportDataReport", "Reports")]
        public Report Report
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_PolicyDeltaReportDataReport", "Reports").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_PolicyDeltaReportDataReport", "Reports").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Report> ReportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_PolicyDeltaReportDataReport", "Reports");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Report>("CrmEntitiesModel.FK_PolicyDeltaReportDataReport", "Reports", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="PolicyProductInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PolicyProductInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PolicyProductInfo object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="uid">Initial value of the Uid property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="policyId">Initial value of the PolicyId property.</param>
        public static PolicyProductInfo CreatePolicyProductInfo(global::System.Int64 id, global::System.Guid uid, global::System.String name, global::System.Int64 policyId)
        {
            PolicyProductInfo policyProductInfo = new PolicyProductInfo();
            policyProductInfo.Id = id;
            policyProductInfo.Uid = uid;
            policyProductInfo.Name = name;
            policyProductInfo.PolicyId = policyId;
            return policyProductInfo;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Uid
        {
            get
            {
                return _Uid;
            }
            set
            {
                OnUidChanging(value);
                ReportPropertyChanging("Uid");
                _Uid = StructuralObject.SetValidValue(value, "Uid");
                ReportPropertyChanged("Uid");
                OnUidChanged();
            }
        }
        private global::System.Guid _Uid;
        partial void OnUidChanging(global::System.Guid value);
        partial void OnUidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PolicyId
        {
            get
            {
                return _PolicyId;
            }
            set
            {
                OnPolicyIdChanging(value);
                ReportPropertyChanging("PolicyId");
                _PolicyId = StructuralObject.SetValidValue(value, "PolicyId");
                ReportPropertyChanged("PolicyId");
                OnPolicyIdChanged();
            }
        }
        private global::System.Int64 _PolicyId;
        partial void OnPolicyIdChanging(global::System.Int64 value);
        partial void OnPolicyIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_PolicyPolicyProductInfo", "Policies")]
        public Policy Policy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("CrmEntitiesModel.FK_PolicyPolicyProductInfo", "Policies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("CrmEntitiesModel.FK_PolicyPolicyProductInfo", "Policies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Policy> PolicyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Policy>("CrmEntitiesModel.FK_PolicyPolicyProductInfo", "Policies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Policy>("CrmEntitiesModel.FK_PolicyPolicyProductInfo", "Policies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_PolicyProductInfoPolicyComponentInfo", "PolicyComponentInfoes")]
        public EntityCollection<PolicyComponentInfo> PolicyComponentInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyComponentInfo>("CrmEntitiesModel.FK_PolicyProductInfoPolicyComponentInfo", "PolicyComponentInfoes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyComponentInfo>("CrmEntitiesModel.FK_PolicyProductInfoPolicyComponentInfo", "PolicyComponentInfoes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="PolicyStatusReportDataSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PolicyStatusReportDataSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PolicyStatusReportDataSet object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="computerId">Initial value of the ComputerId property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="currentPolicyId">Initial value of the CurrentPolicyId property.</param>
        /// <param name="reportId">Initial value of the ReportId property.</param>
        public static PolicyStatusReportDataSet CreatePolicyStatusReportDataSet(global::System.Int64 id, global::System.Int64 computerId, global::System.Int16 status, global::System.Int64 currentPolicyId, global::System.Guid reportId)
        {
            PolicyStatusReportDataSet policyStatusReportDataSet = new PolicyStatusReportDataSet();
            policyStatusReportDataSet.Id = id;
            policyStatusReportDataSet.ComputerId = computerId;
            policyStatusReportDataSet.Status = status;
            policyStatusReportDataSet.CurrentPolicyId = currentPolicyId;
            policyStatusReportDataSet.ReportId = reportId;
            return policyStatusReportDataSet;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ComputerId
        {
            get
            {
                return _ComputerId;
            }
            set
            {
                OnComputerIdChanging(value);
                ReportPropertyChanging("ComputerId");
                _ComputerId = StructuralObject.SetValidValue(value, "ComputerId");
                ReportPropertyChanged("ComputerId");
                OnComputerIdChanged();
            }
        }
        private global::System.Int64 _ComputerId;
        partial void OnComputerIdChanging(global::System.Int64 value);
        partial void OnComputerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ComputerName
        {
            get
            {
                return _ComputerName;
            }
            set
            {
                OnComputerNameChanging(value);
                ReportPropertyChanging("ComputerName");
                _ComputerName = StructuralObject.SetValidValue(value, true, "ComputerName");
                ReportPropertyChanged("ComputerName");
                OnComputerNameChanged();
            }
        }
        private global::System.String _ComputerName;
        partial void OnComputerNameChanging(global::System.String value);
        partial void OnComputerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ComputerIPAddress
        {
            get
            {
                return _ComputerIPAddress;
            }
            set
            {
                OnComputerIPAddressChanging(value);
                ReportPropertyChanging("ComputerIPAddress");
                _ComputerIPAddress = StructuralObject.SetValidValue(value, true, "ComputerIPAddress");
                ReportPropertyChanged("ComputerIPAddress");
                OnComputerIPAddressChanged();
            }
        }
        private global::System.String _ComputerIPAddress;
        partial void OnComputerIPAddressChanging(global::System.String value);
        partial void OnComputerIPAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GroupName
        {
            get
            {
                return _GroupName;
            }
            set
            {
                OnGroupNameChanging(value);
                ReportPropertyChanging("GroupName");
                _GroupName = StructuralObject.SetValidValue(value, true, "GroupName");
                ReportPropertyChanged("GroupName");
                OnGroupNameChanged();
            }
        }
        private global::System.String _GroupName;
        partial void OnGroupNameChanging(global::System.String value);
        partial void OnGroupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int16 _Status;
        partial void OnStatusChanging(global::System.Int16 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 CurrentPolicyId
        {
            get
            {
                return _CurrentPolicyId;
            }
            set
            {
                OnCurrentPolicyIdChanging(value);
                ReportPropertyChanging("CurrentPolicyId");
                _CurrentPolicyId = StructuralObject.SetValidValue(value, "CurrentPolicyId");
                ReportPropertyChanged("CurrentPolicyId");
                OnCurrentPolicyIdChanged();
            }
        }
        private global::System.Int64 _CurrentPolicyId;
        partial void OnCurrentPolicyIdChanging(global::System.Int64 value);
        partial void OnCurrentPolicyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastPollDate
        {
            get
            {
                return _LastPollDate;
            }
            set
            {
                OnLastPollDateChanging(value);
                ReportPropertyChanging("LastPollDate");
                _LastPollDate = StructuralObject.SetValidValue(value, "LastPollDate");
                ReportPropertyChanged("LastPollDate");
                OnLastPollDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastPollDate;
        partial void OnLastPollDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastPollDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> NonComplianceDate
        {
            get
            {
                return _NonComplianceDate;
            }
            set
            {
                OnNonComplianceDateChanging(value);
                ReportPropertyChanging("NonComplianceDate");
                _NonComplianceDate = StructuralObject.SetValidValue(value, "NonComplianceDate");
                ReportPropertyChanged("NonComplianceDate");
                OnNonComplianceDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _NonComplianceDate;
        partial void OnNonComplianceDateChanging(Nullable<global::System.DateTime> value);
        partial void OnNonComplianceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReportId
        {
            get
            {
                return _ReportId;
            }
            set
            {
                OnReportIdChanging(value);
                ReportPropertyChanging("ReportId");
                _ReportId = StructuralObject.SetValidValue(value, "ReportId");
                ReportPropertyChanged("ReportId");
                OnReportIdChanged();
            }
        }
        private global::System.Guid _ReportId;
        partial void OnReportIdChanging(global::System.Guid value);
        partial void OnReportIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CurrentPolicyName
        {
            get
            {
                return _CurrentPolicyName;
            }
            set
            {
                OnCurrentPolicyNameChanging(value);
                ReportPropertyChanging("CurrentPolicyName");
                _CurrentPolicyName = StructuralObject.SetValidValue(value, true, "CurrentPolicyName");
                ReportPropertyChanged("CurrentPolicyName");
                OnCurrentPolicyNameChanged();
            }
        }
        private global::System.String _CurrentPolicyName;
        partial void OnCurrentPolicyNameChanging(global::System.String value);
        partial void OnCurrentPolicyNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_ReportPolicyStatusReportData", "Reports")]
        public Report Report
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_ReportPolicyStatusReportData", "Reports").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_ReportPolicyStatusReportData", "Reports").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Report> ReportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_ReportPolicyStatusReportData", "Reports");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Report>("CrmEntitiesModel.FK_ReportPolicyStatusReportData", "Reports", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="ProductConnection")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductConnection : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductConnection object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="productUid">Initial value of the ProductUid property.</param>
        /// <param name="computerId">Initial value of the ComputerId property.</param>
        /// <param name="connectionDate">Initial value of the ConnectionDate property.</param>
        public static ProductConnection CreateProductConnection(global::System.Int64 id, global::System.Guid productUid, global::System.Int64 computerId, global::System.DateTime connectionDate)
        {
            ProductConnection productConnection = new ProductConnection();
            productConnection.Id = id;
            productConnection.ProductUid = productUid;
            productConnection.ComputerId = computerId;
            productConnection.ConnectionDate = connectionDate;
            return productConnection;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ProductUid
        {
            get
            {
                return _ProductUid;
            }
            set
            {
                OnProductUidChanging(value);
                ReportPropertyChanging("ProductUid");
                _ProductUid = StructuralObject.SetValidValue(value, "ProductUid");
                ReportPropertyChanged("ProductUid");
                OnProductUidChanged();
            }
        }
        private global::System.Guid _ProductUid;
        partial void OnProductUidChanging(global::System.Guid value);
        partial void OnProductUidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProductName
        {
            get
            {
                return _ProductName;
            }
            set
            {
                OnProductNameChanging(value);
                ReportPropertyChanging("ProductName");
                _ProductName = StructuralObject.SetValidValue(value, true, "ProductName");
                ReportPropertyChanged("ProductName");
                OnProductNameChanged();
            }
        }
        private global::System.String _ProductName;
        partial void OnProductNameChanging(global::System.String value);
        partial void OnProductNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ComputerId
        {
            get
            {
                return _ComputerId;
            }
            set
            {
                OnComputerIdChanging(value);
                ReportPropertyChanging("ComputerId");
                _ComputerId = StructuralObject.SetValidValue(value, "ComputerId");
                ReportPropertyChanged("ComputerId");
                OnComputerIdChanged();
            }
        }
        private global::System.Int64 _ComputerId;
        partial void OnComputerIdChanging(global::System.Int64 value);
        partial void OnComputerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ConnectionDate
        {
            get
            {
                return _ConnectionDate;
            }
            set
            {
                OnConnectionDateChanging(value);
                ReportPropertyChanging("ConnectionDate");
                _ConnectionDate = StructuralObject.SetValidValue(value, "ConnectionDate");
                ReportPropertyChanged("ConnectionDate");
                OnConnectionDateChanged();
            }
        }
        private global::System.DateTime _ConnectionDate;
        partial void OnConnectionDateChanging(global::System.DateTime value);
        partial void OnConnectionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Components
        {
            get
            {
                return _Components;
            }
            set
            {
                OnComponentsChanging(value);
                ReportPropertyChanging("Components");
                _Components = StructuralObject.SetValidValue(value, true, "Components");
                ReportPropertyChanged("Components");
                OnComponentsChanged();
            }
        }
        private global::System.String _Components;
        partial void OnComponentsChanging(global::System.String value);
        partial void OnComponentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProductVersion
        {
            get
            {
                return _ProductVersion;
            }
            set
            {
                OnProductVersionChanging(value);
                ReportPropertyChanging("ProductVersion");
                _ProductVersion = StructuralObject.SetValidValue(value, true, "ProductVersion");
                ReportPropertyChanged("ProductVersion");
                OnProductVersionChanged();
            }
        }
        private global::System.String _ProductVersion;
        partial void OnProductVersionChanging(global::System.String value);
        partial void OnProductVersionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_ComputerProductConnection", "Computers")]
        public Computer Computer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_ComputerProductConnection", "Computers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_ComputerProductConnection", "Computers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Computer> ComputerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_ComputerProductConnection", "Computers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Computer>("CrmEntitiesModel.FK_ComputerProductConnection", "Computers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="QuarantineItemRawDataSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QuarantineItemRawDataSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QuarantineItemRawDataSet object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="computerId">Initial value of the ComputerId property.</param>
        /// <param name="itemDate">Initial value of the ItemDate property.</param>
        /// <param name="updated">Initial value of the Updated property.</param>
        public static QuarantineItemRawDataSet CreateQuarantineItemRawDataSet(global::System.Int64 id, global::System.Int64 computerId, global::System.DateTime itemDate, global::System.DateTime updated)
        {
            QuarantineItemRawDataSet quarantineItemRawDataSet = new QuarantineItemRawDataSet();
            quarantineItemRawDataSet.Id = id;
            quarantineItemRawDataSet.ComputerId = computerId;
            quarantineItemRawDataSet.ItemDate = itemDate;
            quarantineItemRawDataSet.Updated = updated;
            return quarantineItemRawDataSet;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ComputerId
        {
            get
            {
                return _ComputerId;
            }
            set
            {
                OnComputerIdChanging(value);
                ReportPropertyChanging("ComputerId");
                _ComputerId = StructuralObject.SetValidValue(value, "ComputerId");
                ReportPropertyChanged("ComputerId");
                OnComputerIdChanged();
            }
        }
        private global::System.Int64 _ComputerId;
        partial void OnComputerIdChanging(global::System.Int64 value);
        partial void OnComputerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                OnItemIdChanging(value);
                ReportPropertyChanging("ItemId");
                _ItemId = StructuralObject.SetValidValue(value, true, "ItemId");
                ReportPropertyChanged("ItemId");
                OnItemIdChanged();
            }
        }
        private global::System.String _ItemId;
        partial void OnItemIdChanging(global::System.String value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ItemName
        {
            get
            {
                return _ItemName;
            }
            set
            {
                OnItemNameChanging(value);
                ReportPropertyChanging("ItemName");
                _ItemName = StructuralObject.SetValidValue(value, true, "ItemName");
                ReportPropertyChanged("ItemName");
                OnItemNameChanged();
            }
        }
        private global::System.String _ItemName;
        partial void OnItemNameChanging(global::System.String value);
        partial void OnItemNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ItemLocation
        {
            get
            {
                return _ItemLocation;
            }
            set
            {
                OnItemLocationChanging(value);
                ReportPropertyChanging("ItemLocation");
                _ItemLocation = StructuralObject.SetValidValue(value, true, "ItemLocation");
                ReportPropertyChanged("ItemLocation");
                OnItemLocationChanged();
            }
        }
        private global::System.String _ItemLocation;
        partial void OnItemLocationChanging(global::System.String value);
        partial void OnItemLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ItemDate
        {
            get
            {
                return _ItemDate;
            }
            set
            {
                OnItemDateChanging(value);
                ReportPropertyChanging("ItemDate");
                _ItemDate = StructuralObject.SetValidValue(value, "ItemDate");
                ReportPropertyChanged("ItemDate");
                OnItemDateChanged();
            }
        }
        private global::System.DateTime _ItemDate;
        partial void OnItemDateChanging(global::System.DateTime value);
        partial void OnItemDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value, "Updated");
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_QuarantineItemRawDataComputer", "Computers")]
        public Computer Computer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_QuarantineItemRawDataComputer", "Computers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_QuarantineItemRawDataComputer", "Computers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Computer> ComputerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_QuarantineItemRawDataComputer", "Computers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Computer>("CrmEntitiesModel.FK_QuarantineItemRawDataComputer", "Computers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="QuarantineItemReportDataSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QuarantineItemReportDataSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QuarantineItemReportDataSet object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="reportId">Initial value of the ReportId property.</param>
        /// <param name="computerId">Initial value of the ComputerId property.</param>
        /// <param name="hasData">Initial value of the HasData property.</param>
        public static QuarantineItemReportDataSet CreateQuarantineItemReportDataSet(global::System.Int32 id, global::System.Guid reportId, global::System.Int64 computerId, global::System.Boolean hasData)
        {
            QuarantineItemReportDataSet quarantineItemReportDataSet = new QuarantineItemReportDataSet();
            quarantineItemReportDataSet.Id = id;
            quarantineItemReportDataSet.ReportId = reportId;
            quarantineItemReportDataSet.ComputerId = computerId;
            quarantineItemReportDataSet.HasData = hasData;
            return quarantineItemReportDataSet;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReportId
        {
            get
            {
                return _ReportId;
            }
            set
            {
                OnReportIdChanging(value);
                ReportPropertyChanging("ReportId");
                _ReportId = StructuralObject.SetValidValue(value, "ReportId");
                ReportPropertyChanged("ReportId");
                OnReportIdChanged();
            }
        }
        private global::System.Guid _ReportId;
        partial void OnReportIdChanging(global::System.Guid value);
        partial void OnReportIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ComputerName
        {
            get
            {
                return _ComputerName;
            }
            set
            {
                OnComputerNameChanging(value);
                ReportPropertyChanging("ComputerName");
                _ComputerName = StructuralObject.SetValidValue(value, true, "ComputerName");
                ReportPropertyChanged("ComputerName");
                OnComputerNameChanged();
            }
        }
        private global::System.String _ComputerName;
        partial void OnComputerNameChanging(global::System.String value);
        partial void OnComputerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GroupName
        {
            get
            {
                return _GroupName;
            }
            set
            {
                OnGroupNameChanging(value);
                ReportPropertyChanging("GroupName");
                _GroupName = StructuralObject.SetValidValue(value, true, "GroupName");
                ReportPropertyChanged("GroupName");
                OnGroupNameChanged();
            }
        }
        private global::System.String _GroupName;
        partial void OnGroupNameChanging(global::System.String value);
        partial void OnGroupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                OnItemIdChanging(value);
                ReportPropertyChanging("ItemId");
                _ItemId = StructuralObject.SetValidValue(value, true, "ItemId");
                ReportPropertyChanged("ItemId");
                OnItemIdChanged();
            }
        }
        private global::System.String _ItemId;
        partial void OnItemIdChanging(global::System.String value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ItemName
        {
            get
            {
                return _ItemName;
            }
            set
            {
                OnItemNameChanging(value);
                ReportPropertyChanging("ItemName");
                _ItemName = StructuralObject.SetValidValue(value, true, "ItemName");
                ReportPropertyChanged("ItemName");
                OnItemNameChanged();
            }
        }
        private global::System.String _ItemName;
        partial void OnItemNameChanging(global::System.String value);
        partial void OnItemNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ItemLocation
        {
            get
            {
                return _ItemLocation;
            }
            set
            {
                OnItemLocationChanging(value);
                ReportPropertyChanging("ItemLocation");
                _ItemLocation = StructuralObject.SetValidValue(value, true, "ItemLocation");
                ReportPropertyChanged("ItemLocation");
                OnItemLocationChanged();
            }
        }
        private global::System.String _ItemLocation;
        partial void OnItemLocationChanging(global::System.String value);
        partial void OnItemLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ItemDate
        {
            get
            {
                return _ItemDate;
            }
            set
            {
                OnItemDateChanging(value);
                ReportPropertyChanging("ItemDate");
                _ItemDate = StructuralObject.SetValidValue(value, "ItemDate");
                ReportPropertyChanged("ItemDate");
                OnItemDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ItemDate;
        partial void OnItemDateChanging(Nullable<global::System.DateTime> value);
        partial void OnItemDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ComputerId
        {
            get
            {
                return _ComputerId;
            }
            set
            {
                OnComputerIdChanging(value);
                ReportPropertyChanging("ComputerId");
                _ComputerId = StructuralObject.SetValidValue(value, "ComputerId");
                ReportPropertyChanged("ComputerId");
                OnComputerIdChanged();
            }
        }
        private global::System.Int64 _ComputerId;
        partial void OnComputerIdChanging(global::System.Int64 value);
        partial void OnComputerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasData
        {
            get
            {
                return _HasData;
            }
            set
            {
                OnHasDataChanging(value);
                ReportPropertyChanging("HasData");
                _HasData = StructuralObject.SetValidValue(value, "HasData");
                ReportPropertyChanged("HasData");
                OnHasDataChanged();
            }
        }
        private global::System.Boolean _HasData;
        partial void OnHasDataChanging(global::System.Boolean value);
        partial void OnHasDataChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_QuarantineItemReportDataReport", "Reports")]
        public Report Report
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_QuarantineItemReportDataReport", "Reports").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_QuarantineItemReportDataReport", "Reports").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Report> ReportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_QuarantineItemReportDataReport", "Reports");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Report>("CrmEntitiesModel.FK_QuarantineItemReportDataReport", "Reports", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="Report")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Report : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Report object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="started">Initial value of the Started property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="reportTypeId">Initial value of the ReportTypeId property.</param>
        /// <param name="dataIsReady">Initial value of the DataIsReady property.</param>
        public static Report CreateReport(global::System.Guid id, global::System.DateTime started, global::System.Int16 status, global::System.Int32 reportTypeId, global::System.Boolean dataIsReady)
        {
            Report report = new Report();
            report.Id = id;
            report.Started = started;
            report.Status = status;
            report.ReportTypeId = reportTypeId;
            report.DataIsReady = dataIsReady;
            return report;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Started
        {
            get
            {
                return _Started;
            }
            set
            {
                OnStartedChanging(value);
                ReportPropertyChanging("Started");
                _Started = StructuralObject.SetValidValue(value, "Started");
                ReportPropertyChanged("Started");
                OnStartedChanged();
            }
        }
        private global::System.DateTime _Started;
        partial void OnStartedChanging(global::System.DateTime value);
        partial void OnStartedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Finished
        {
            get
            {
                return _Finished;
            }
            set
            {
                OnFinishedChanging(value);
                ReportPropertyChanging("Finished");
                _Finished = StructuralObject.SetValidValue(value, "Finished");
                ReportPropertyChanged("Finished");
                OnFinishedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Finished;
        partial void OnFinishedChanging(Nullable<global::System.DateTime> value);
        partial void OnFinishedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int16 _Status;
        partial void OnStatusChanging(global::System.Int16 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReportTypeId
        {
            get
            {
                return _ReportTypeId;
            }
            set
            {
                OnReportTypeIdChanging(value);
                ReportPropertyChanging("ReportTypeId");
                _ReportTypeId = StructuralObject.SetValidValue(value, "ReportTypeId");
                ReportPropertyChanged("ReportTypeId");
                OnReportTypeIdChanged();
            }
        }
        private global::System.Int32 _ReportTypeId;
        partial void OnReportTypeIdChanging(global::System.Int32 value);
        partial void OnReportTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReporFileName
        {
            get
            {
                return _ReporFileName;
            }
            set
            {
                OnReporFileNameChanging(value);
                ReportPropertyChanging("ReporFileName");
                _ReporFileName = StructuralObject.SetValidValue(value, true, "ReporFileName");
                ReportPropertyChanged("ReporFileName");
                OnReporFileNameChanged();
            }
        }
        private global::System.String _ReporFileName;
        partial void OnReporFileNameChanging(global::System.String value);
        partial void OnReporFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean DataIsReady
        {
            get
            {
                return _DataIsReady;
            }
            set
            {
                OnDataIsReadyChanging(value);
                ReportPropertyChanging("DataIsReady");
                _DataIsReady = StructuralObject.SetValidValue(value, "DataIsReady");
                ReportPropertyChanged("DataIsReady");
                OnDataIsReadyChanged();
            }
        }
        private global::System.Boolean _DataIsReady;
        partial void OnDataIsReadyChanging(global::System.Boolean value);
        partial void OnDataIsReadyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ErrorMessage
        {
            get
            {
                return _ErrorMessage;
            }
            set
            {
                OnErrorMessageChanging(value);
                ReportPropertyChanging("ErrorMessage");
                _ErrorMessage = StructuralObject.SetValidValue(value, true, "ErrorMessage");
                ReportPropertyChanged("ErrorMessage");
                OnErrorMessageChanged();
            }
        }
        private global::System.String _ErrorMessage;
        partial void OnErrorMessageChanging(global::System.String value);
        partial void OnErrorMessageChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_AvLogReportDataReport", "AvLogReportDataSet")]
        public EntityCollection<AvLogReportDataSet> AvLogReportDataSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AvLogReportDataSet>("CrmEntitiesModel.FK_AvLogReportDataReport", "AvLogReportDataSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AvLogReportDataSet>("CrmEntitiesModel.FK_AvLogReportDataReport", "AvLogReportDataSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_ReportAvUpdatesReportData", "AvUpdatesReportDataSet")]
        public EntityCollection<AvUpdatesReportDataSet> AvUpdatesReportDataSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AvUpdatesReportDataSet>("CrmEntitiesModel.FK_ReportAvUpdatesReportData", "AvUpdatesReportDataSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AvUpdatesReportDataSet>("CrmEntitiesModel.FK_ReportAvUpdatesReportData", "AvUpdatesReportDataSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_CisConfigReportDataReport", "CisConfigReportDataSet")]
        public EntityCollection<CisConfigReportDataSet> CisConfigReportDataSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CisConfigReportDataSet>("CrmEntitiesModel.FK_CisConfigReportDataReport", "CisConfigReportDataSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CisConfigReportDataSet>("CrmEntitiesModel.FK_CisConfigReportDataReport", "CisConfigReportDataSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_ReportComputerDetailsReportData", "ComputerDetailsReportDataSet")]
        public EntityCollection<ComputerDetailsReportDataSet> ComputerDetailsReportDataSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ComputerDetailsReportDataSet>("CrmEntitiesModel.FK_ReportComputerDetailsReportData", "ComputerDetailsReportDataSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ComputerDetailsReportDataSet>("CrmEntitiesModel.FK_ReportComputerDetailsReportData", "ComputerDetailsReportDataSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_DefensePlusLogReportDataReport", "DefensePlusLogReportDataSet")]
        public EntityCollection<DefensePlusLogReportDataSet> DefensePlusLogReportDataSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DefensePlusLogReportDataSet>("CrmEntitiesModel.FK_DefensePlusLogReportDataReport", "DefensePlusLogReportDataSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DefensePlusLogReportDataSet>("CrmEntitiesModel.FK_DefensePlusLogReportDataReport", "DefensePlusLogReportDataSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_FirewallLogReportDataReport", "FirewallLogReportDataSet")]
        public EntityCollection<FirewallLogReportDataSet> FirewallLogReportDataSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FirewallLogReportDataSet>("CrmEntitiesModel.FK_FirewallLogReportDataReport", "FirewallLogReportDataSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FirewallLogReportDataSet>("CrmEntitiesModel.FK_FirewallLogReportDataReport", "FirewallLogReportDataSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_InfectedItemReportDataReport", "InfectedItemReportDataSet")]
        public EntityCollection<InfectedItemReportDataSet> InfectedItemReportDataSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InfectedItemReportDataSet>("CrmEntitiesModel.FK_InfectedItemReportDataReport", "InfectedItemReportDataSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InfectedItemReportDataSet>("CrmEntitiesModel.FK_InfectedItemReportDataReport", "InfectedItemReportDataSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_MalwareStatisticsReportDataReport", "MalwareStatisticsReportDataSet")]
        public EntityCollection<MalwareStatisticsReportDataSet> MalwareStatisticsReportDataSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MalwareStatisticsReportDataSet>("CrmEntitiesModel.FK_MalwareStatisticsReportDataReport", "MalwareStatisticsReportDataSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MalwareStatisticsReportDataSet>("CrmEntitiesModel.FK_MalwareStatisticsReportDataReport", "MalwareStatisticsReportDataSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_PolicyDeltaReportDataReport", "PolicyDeltaReportDataSet")]
        public EntityCollection<PolicyDeltaReportDataSet> PolicyDeltaReportDataSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyDeltaReportDataSet>("CrmEntitiesModel.FK_PolicyDeltaReportDataReport", "PolicyDeltaReportDataSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyDeltaReportDataSet>("CrmEntitiesModel.FK_PolicyDeltaReportDataReport", "PolicyDeltaReportDataSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_ReportPolicyStatusReportData", "PolicyStatusReportDataSet")]
        public EntityCollection<PolicyStatusReportDataSet> PolicyStatusReportDataSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyStatusReportDataSet>("CrmEntitiesModel.FK_ReportPolicyStatusReportData", "PolicyStatusReportDataSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyStatusReportDataSet>("CrmEntitiesModel.FK_ReportPolicyStatusReportData", "PolicyStatusReportDataSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_QuarantineItemReportDataReport", "QuarantineItemReportDataSet")]
        public EntityCollection<QuarantineItemReportDataSet> QuarantineItemReportDataSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<QuarantineItemReportDataSet>("CrmEntitiesModel.FK_QuarantineItemReportDataReport", "QuarantineItemReportDataSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<QuarantineItemReportDataSet>("CrmEntitiesModel.FK_QuarantineItemReportDataReport", "QuarantineItemReportDataSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_ReportReportParameter", "ReportParameters")]
        public ReportParameter ReportParameter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReportParameter>("CrmEntitiesModel.FK_ReportReportParameter", "ReportParameters").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReportParameter>("CrmEntitiesModel.FK_ReportReportParameter", "ReportParameters").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ReportParameter> ReportParameterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReportParameter>("CrmEntitiesModel.FK_ReportReportParameter", "ReportParameters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ReportParameter>("CrmEntitiesModel.FK_ReportReportParameter", "ReportParameters", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_ReportReportTarget", "ReportTargets")]
        public EntityCollection<ReportTarget> ReportTargets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReportTarget>("CrmEntitiesModel.FK_ReportReportTarget", "ReportTargets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReportTarget>("CrmEntitiesModel.FK_ReportReportTarget", "ReportTargets", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_ReportTypeReport", "ReportTypes")]
        public ReportType ReportType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReportType>("CrmEntitiesModel.FK_ReportTypeReport", "ReportTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReportType>("CrmEntitiesModel.FK_ReportTypeReport", "ReportTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ReportType> ReportTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReportType>("CrmEntitiesModel.FK_ReportTypeReport", "ReportTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ReportType>("CrmEntitiesModel.FK_ReportTypeReport", "ReportTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_TopTenMalwaresReportDataReport", "TopTenMalwaresReportDataSet")]
        public EntityCollection<TopTenMalwaresReportDataSet> TopTenMalwaresReportDataSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TopTenMalwaresReportDataSet>("CrmEntitiesModel.FK_TopTenMalwaresReportDataReport", "TopTenMalwaresReportDataSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TopTenMalwaresReportDataSet>("CrmEntitiesModel.FK_TopTenMalwaresReportDataReport", "TopTenMalwaresReportDataSet", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="ReportManagerSetting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReportManagerSetting : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReportManagerSetting object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="removeOldReports">Initial value of the RemoveOldReports property.</param>
        /// <param name="daysNumber">Initial value of the DaysNumber property.</param>
        public static ReportManagerSetting CreateReportManagerSetting(global::System.Int64 id, global::System.Boolean removeOldReports, global::System.Int32 daysNumber)
        {
            ReportManagerSetting reportManagerSetting = new ReportManagerSetting();
            reportManagerSetting.Id = id;
            reportManagerSetting.RemoveOldReports = removeOldReports;
            reportManagerSetting.DaysNumber = daysNumber;
            return reportManagerSetting;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean RemoveOldReports
        {
            get
            {
                return _RemoveOldReports;
            }
            set
            {
                OnRemoveOldReportsChanging(value);
                ReportPropertyChanging("RemoveOldReports");
                _RemoveOldReports = StructuralObject.SetValidValue(value, "RemoveOldReports");
                ReportPropertyChanged("RemoveOldReports");
                OnRemoveOldReportsChanged();
            }
        }
        private global::System.Boolean _RemoveOldReports;
        partial void OnRemoveOldReportsChanging(global::System.Boolean value);
        partial void OnRemoveOldReportsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DaysNumber
        {
            get
            {
                return _DaysNumber;
            }
            set
            {
                OnDaysNumberChanging(value);
                ReportPropertyChanging("DaysNumber");
                _DaysNumber = StructuralObject.SetValidValue(value, "DaysNumber");
                ReportPropertyChanged("DaysNumber");
                OnDaysNumberChanged();
            }
        }
        private global::System.Int32 _DaysNumber;
        partial void OnDaysNumberChanging(global::System.Int32 value);
        partial void OnDaysNumberChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="ReportParameter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReportParameter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReportParameter object.
        /// </summary>
        /// <param name="generateFile">Initial value of the GenerateFile property.</param>
        /// <param name="reportId">Initial value of the ReportId property.</param>
        public static ReportParameter CreateReportParameter(global::System.Boolean generateFile, global::System.Guid reportId)
        {
            ReportParameter reportParameter = new ReportParameter();
            reportParameter.GenerateFile = generateFile;
            reportParameter.ReportId = reportId;
            return reportParameter;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IncludeDetails
        {
            get
            {
                return _IncludeDetails;
            }
            set
            {
                OnIncludeDetailsChanging(value);
                ReportPropertyChanging("IncludeDetails");
                _IncludeDetails = StructuralObject.SetValidValue(value, "IncludeDetails");
                ReportPropertyChanged("IncludeDetails");
                OnIncludeDetailsChanged();
            }
        }
        private Nullable<global::System.Boolean> _IncludeDetails;
        partial void OnIncludeDetailsChanging(Nullable<global::System.Boolean> value);
        partial void OnIncludeDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean GenerateFile
        {
            get
            {
                return _GenerateFile;
            }
            set
            {
                OnGenerateFileChanging(value);
                ReportPropertyChanging("GenerateFile");
                _GenerateFile = StructuralObject.SetValidValue(value, "GenerateFile");
                ReportPropertyChanged("GenerateFile");
                OnGenerateFileChanged();
            }
        }
        private global::System.Boolean _GenerateFile;
        partial void OnGenerateFileChanging(global::System.Boolean value);
        partial void OnGenerateFileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> ExportFileType
        {
            get
            {
                return _ExportFileType;
            }
            set
            {
                OnExportFileTypeChanging(value);
                ReportPropertyChanging("ExportFileType");
                _ExportFileType = StructuralObject.SetValidValue(value, "ExportFileType");
                ReportPropertyChanged("ExportFileType");
                OnExportFileTypeChanged();
            }
        }
        private Nullable<global::System.Int16> _ExportFileType;
        partial void OnExportFileTypeChanging(Nullable<global::System.Int16> value);
        partial void OnExportFileTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReportId
        {
            get
            {
                return _ReportId;
            }
            set
            {
                if (_ReportId != value)
                {
                    OnReportIdChanging(value);
                    ReportPropertyChanging("ReportId");
                    _ReportId = StructuralObject.SetValidValue(value, "ReportId");
                    ReportPropertyChanged("ReportId");
                    OnReportIdChanged();
                }
            }
        }
        private global::System.Guid _ReportId;
        partial void OnReportIdChanging(global::System.Guid value);
        partial void OnReportIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IncludeAffectedOnly
        {
            get
            {
                return _IncludeAffectedOnly;
            }
            set
            {
                OnIncludeAffectedOnlyChanging(value);
                ReportPropertyChanging("IncludeAffectedOnly");
                _IncludeAffectedOnly = StructuralObject.SetValidValue(value, "IncludeAffectedOnly");
                ReportPropertyChanged("IncludeAffectedOnly");
                OnIncludeAffectedOnlyChanged();
            }
        }
        private Nullable<global::System.Boolean> _IncludeAffectedOnly;
        partial void OnIncludeAffectedOnlyChanging(Nullable<global::System.Boolean> value);
        partial void OnIncludeAffectedOnlyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PeriodStartDate
        {
            get
            {
                return _PeriodStartDate;
            }
            set
            {
                OnPeriodStartDateChanging(value);
                ReportPropertyChanging("PeriodStartDate");
                _PeriodStartDate = StructuralObject.SetValidValue(value, "PeriodStartDate");
                ReportPropertyChanged("PeriodStartDate");
                OnPeriodStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PeriodStartDate;
        partial void OnPeriodStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPeriodStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PeriodEndDate
        {
            get
            {
                return _PeriodEndDate;
            }
            set
            {
                OnPeriodEndDateChanging(value);
                ReportPropertyChanging("PeriodEndDate");
                _PeriodEndDate = StructuralObject.SetValidValue(value, "PeriodEndDate");
                ReportPropertyChanged("PeriodEndDate");
                OnPeriodEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PeriodEndDate;
        partial void OnPeriodEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPeriodEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PeriodType
        {
            get
            {
                return _PeriodType;
            }
            set
            {
                OnPeriodTypeChanging(value);
                ReportPropertyChanging("PeriodType");
                _PeriodType = StructuralObject.SetValidValue(value, "PeriodType");
                ReportPropertyChanged("PeriodType");
                OnPeriodTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _PeriodType;
        partial void OnPeriodTypeChanging(Nullable<global::System.Int32> value);
        partial void OnPeriodTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TopNumber
        {
            get
            {
                return _TopNumber;
            }
            set
            {
                OnTopNumberChanging(value);
                ReportPropertyChanging("TopNumber");
                _TopNumber = StructuralObject.SetValidValue(value, "TopNumber");
                ReportPropertyChanged("TopNumber");
                OnTopNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _TopNumber;
        partial void OnTopNumberChanging(Nullable<global::System.Int32> value);
        partial void OnTopNumberChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_ReportReportParameter", "Reports")]
        public Report Report
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_ReportReportParameter", "Reports").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_ReportReportParameter", "Reports").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Report> ReportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_ReportReportParameter", "Reports");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Report>("CrmEntitiesModel.FK_ReportReportParameter", "Reports", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="ReportTarget")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReportTarget : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReportTarget object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="computerId">Initial value of the ComputerId property.</param>
        /// <param name="reportId">Initial value of the ReportId property.</param>
        public static ReportTarget CreateReportTarget(global::System.Int64 id, global::System.Int64 computerId, global::System.Guid reportId)
        {
            ReportTarget reportTarget = new ReportTarget();
            reportTarget.Id = id;
            reportTarget.ComputerId = computerId;
            reportTarget.ReportId = reportId;
            return reportTarget;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ComputerId
        {
            get
            {
                return _ComputerId;
            }
            set
            {
                OnComputerIdChanging(value);
                ReportPropertyChanging("ComputerId");
                _ComputerId = StructuralObject.SetValidValue(value, "ComputerId");
                ReportPropertyChanged("ComputerId");
                OnComputerIdChanged();
            }
        }
        private global::System.Int64 _ComputerId;
        partial void OnComputerIdChanging(global::System.Int64 value);
        partial void OnComputerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReportId
        {
            get
            {
                return _ReportId;
            }
            set
            {
                OnReportIdChanging(value);
                ReportPropertyChanging("ReportId");
                _ReportId = StructuralObject.SetValidValue(value, "ReportId");
                ReportPropertyChanged("ReportId");
                OnReportIdChanged();
            }
        }
        private global::System.Guid _ReportId;
        partial void OnReportIdChanging(global::System.Guid value);
        partial void OnReportIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_ReportReportTarget", "Reports")]
        public Report Report
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_ReportReportTarget", "Reports").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_ReportReportTarget", "Reports").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Report> ReportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_ReportReportTarget", "Reports");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Report>("CrmEntitiesModel.FK_ReportReportTarget", "Reports", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="ReportType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReportType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReportType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ReportType CreateReportType(global::System.Int32 id, global::System.String name)
        {
            ReportType reportType = new ReportType();
            reportType.Id = id;
            reportType.Name = name;
            return reportType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_ReportTypeReport", "Reports")]
        public EntityCollection<Report> Reports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Report>("CrmEntitiesModel.FK_ReportTypeReport", "Reports");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Report>("CrmEntitiesModel.FK_ReportTypeReport", "Reports", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="RequestAnswer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RequestAnswer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RequestAnswer object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="requestId">Initial value of the RequestId property.</param>
        public static RequestAnswer CreateRequestAnswer(global::System.Int64 id, global::System.Int64 requestId)
        {
            RequestAnswer requestAnswer = new RequestAnswer();
            requestAnswer.Id = id;
            requestAnswer.RequestId = requestId;
            return requestAnswer;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TextAsXml
        {
            get
            {
                return _TextAsXml;
            }
            set
            {
                OnTextAsXmlChanging(value);
                ReportPropertyChanging("TextAsXml");
                _TextAsXml = StructuralObject.SetValidValue(value, true, "TextAsXml");
                ReportPropertyChanged("TextAsXml");
                OnTextAsXmlChanged();
            }
        }
        private global::System.String _TextAsXml;
        partial void OnTextAsXmlChanging(global::System.String value);
        partial void OnTextAsXmlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RequestId
        {
            get
            {
                return _RequestId;
            }
            set
            {
                OnRequestIdChanging(value);
                ReportPropertyChanging("RequestId");
                _RequestId = StructuralObject.SetValidValue(value, "RequestId");
                ReportPropertyChanged("RequestId");
                OnRequestIdChanged();
            }
        }
        private global::System.Int64 _RequestId;
        partial void OnRequestIdChanging(global::System.Int64 value);
        partial void OnRequestIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_RequestRequestAnswer", "Alerts_Request")]
        public Alerts_Request Alerts_Request
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Alerts_Request>("CrmEntitiesModel.FK_RequestRequestAnswer", "Alerts_Request").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Alerts_Request>("CrmEntitiesModel.FK_RequestRequestAnswer", "Alerts_Request").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Alerts_Request> Alerts_RequestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Alerts_Request>("CrmEntitiesModel.FK_RequestRequestAnswer", "Alerts_Request");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Alerts_Request>("CrmEntitiesModel.FK_RequestRequestAnswer", "Alerts_Request", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "MessageParams_RequestAnswerParam", "MessageParams")]
        public EntityCollection<MessageParam> MessageParams
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MessageParam>("CrmEntitiesModel.MessageParams_RequestAnswerParam", "MessageParams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MessageParam>("CrmEntitiesModel.MessageParams_RequestAnswerParam", "MessageParams", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="RequestAnswerResult")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RequestAnswerResult : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RequestAnswerResult object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="request_Id">Initial value of the Request_Id property.</param>
        public static RequestAnswerResult CreateRequestAnswerResult(global::System.Int64 id, global::System.Int32 code, global::System.Int64 request_Id)
        {
            RequestAnswerResult requestAnswerResult = new RequestAnswerResult();
            requestAnswerResult.Id = id;
            requestAnswerResult.Code = code;
            requestAnswerResult.Request_Id = request_Id;
            return requestAnswerResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, "Code");
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.Int32 _Code;
        partial void OnCodeChanging(global::System.Int32 value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TextAsXml
        {
            get
            {
                return _TextAsXml;
            }
            set
            {
                OnTextAsXmlChanging(value);
                ReportPropertyChanging("TextAsXml");
                _TextAsXml = StructuralObject.SetValidValue(value, true, "TextAsXml");
                ReportPropertyChanged("TextAsXml");
                OnTextAsXmlChanged();
            }
        }
        private global::System.String _TextAsXml;
        partial void OnTextAsXmlChanging(global::System.String value);
        partial void OnTextAsXmlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Request_Id
        {
            get
            {
                return _Request_Id;
            }
            set
            {
                OnRequest_IdChanging(value);
                ReportPropertyChanging("Request_Id");
                _Request_Id = StructuralObject.SetValidValue(value, "Request_Id");
                ReportPropertyChanged("Request_Id");
                OnRequest_IdChanged();
            }
        }
        private global::System.Int64 _Request_Id;
        partial void OnRequest_IdChanging(global::System.Int64 value);
        partial void OnRequest_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_RequestRequestAnswerResult", "Alerts_Request")]
        public Alerts_Request Alerts_Request
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Alerts_Request>("CrmEntitiesModel.FK_RequestRequestAnswerResult", "Alerts_Request").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Alerts_Request>("CrmEntitiesModel.FK_RequestRequestAnswerResult", "Alerts_Request").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Alerts_Request> Alerts_RequestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Alerts_Request>("CrmEntitiesModel.FK_RequestRequestAnswerResult", "Alerts_Request");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Alerts_Request>("CrmEntitiesModel.FK_RequestRequestAnswerResult", "Alerts_Request", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="RequestOption")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RequestOption : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RequestOption object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="textAsXml">Initial value of the TextAsXml property.</param>
        /// <param name="checkedByDefault">Initial value of the CheckedByDefault property.</param>
        /// <param name="checkedByUser">Initial value of the CheckedByUser property.</param>
        /// <param name="itemIndex">Initial value of the ItemIndex property.</param>
        /// <param name="requestId">Initial value of the RequestId property.</param>
        public static RequestOption CreateRequestOption(global::System.Int64 id, global::System.String textAsXml, global::System.Boolean checkedByDefault, global::System.Boolean checkedByUser, global::System.Int32 itemIndex, global::System.Int64 requestId)
        {
            RequestOption requestOption = new RequestOption();
            requestOption.Id = id;
            requestOption.TextAsXml = textAsXml;
            requestOption.CheckedByDefault = checkedByDefault;
            requestOption.CheckedByUser = checkedByUser;
            requestOption.ItemIndex = itemIndex;
            requestOption.RequestId = requestId;
            return requestOption;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TextAsXml
        {
            get
            {
                return _TextAsXml;
            }
            set
            {
                OnTextAsXmlChanging(value);
                ReportPropertyChanging("TextAsXml");
                _TextAsXml = StructuralObject.SetValidValue(value, false, "TextAsXml");
                ReportPropertyChanged("TextAsXml");
                OnTextAsXmlChanged();
            }
        }
        private global::System.String _TextAsXml;
        partial void OnTextAsXmlChanging(global::System.String value);
        partial void OnTextAsXmlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CheckedByDefault
        {
            get
            {
                return _CheckedByDefault;
            }
            set
            {
                OnCheckedByDefaultChanging(value);
                ReportPropertyChanging("CheckedByDefault");
                _CheckedByDefault = StructuralObject.SetValidValue(value, "CheckedByDefault");
                ReportPropertyChanged("CheckedByDefault");
                OnCheckedByDefaultChanged();
            }
        }
        private global::System.Boolean _CheckedByDefault;
        partial void OnCheckedByDefaultChanging(global::System.Boolean value);
        partial void OnCheckedByDefaultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CheckedByUser
        {
            get
            {
                return _CheckedByUser;
            }
            set
            {
                OnCheckedByUserChanging(value);
                ReportPropertyChanging("CheckedByUser");
                _CheckedByUser = StructuralObject.SetValidValue(value, "CheckedByUser");
                ReportPropertyChanged("CheckedByUser");
                OnCheckedByUserChanged();
            }
        }
        private global::System.Boolean _CheckedByUser;
        partial void OnCheckedByUserChanging(global::System.Boolean value);
        partial void OnCheckedByUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemIndex
        {
            get
            {
                return _ItemIndex;
            }
            set
            {
                OnItemIndexChanging(value);
                ReportPropertyChanging("ItemIndex");
                _ItemIndex = StructuralObject.SetValidValue(value, "ItemIndex");
                ReportPropertyChanged("ItemIndex");
                OnItemIndexChanged();
            }
        }
        private global::System.Int32 _ItemIndex;
        partial void OnItemIndexChanging(global::System.Int32 value);
        partial void OnItemIndexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RequestId
        {
            get
            {
                return _RequestId;
            }
            set
            {
                OnRequestIdChanging(value);
                ReportPropertyChanging("RequestId");
                _RequestId = StructuralObject.SetValidValue(value, "RequestId");
                ReportPropertyChanged("RequestId");
                OnRequestIdChanged();
            }
        }
        private global::System.Int64 _RequestId;
        partial void OnRequestIdChanging(global::System.Int64 value);
        partial void OnRequestIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_RequestRequestOption", "Alerts_Request")]
        public Alerts_Request Alerts_Request
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Alerts_Request>("CrmEntitiesModel.FK_RequestRequestOption", "Alerts_Request").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Alerts_Request>("CrmEntitiesModel.FK_RequestRequestOption", "Alerts_Request").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Alerts_Request> Alerts_RequestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Alerts_Request>("CrmEntitiesModel.FK_RequestRequestOption", "Alerts_Request");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Alerts_Request>("CrmEntitiesModel.FK_RequestRequestOption", "Alerts_Request", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="ScanLocation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ScanLocation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ScanLocation object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="uid">Initial value of the Uid property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ScanLocation CreateScanLocation(global::System.Int64 id, global::System.Guid uid, global::System.String name)
        {
            ScanLocation scanLocation = new ScanLocation();
            scanLocation.Id = id;
            scanLocation.Uid = uid;
            scanLocation.Name = name;
            return scanLocation;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Uid
        {
            get
            {
                return _Uid;
            }
            set
            {
                OnUidChanging(value);
                ReportPropertyChanging("Uid");
                _Uid = StructuralObject.SetValidValue(value, "Uid");
                ReportPropertyChanged("Uid");
                OnUidChanged();
            }
        }
        private global::System.Guid _Uid;
        partial void OnUidChanging(global::System.Guid value);
        partial void OnUidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "ScanProfileLocations", "ScanProfiles")]
        public EntityCollection<ScanProfile> ScanProfiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ScanProfile>("CrmEntitiesModel.ScanProfileLocations", "ScanProfiles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ScanProfile>("CrmEntitiesModel.ScanProfileLocations", "ScanProfiles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="ScanProfile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ScanProfile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ScanProfile object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="uid">Initial value of the Uid property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isPredefined">Initial value of the IsPredefined property.</param>
        /// <param name="timeStamp">Initial value of the TimeStamp property.</param>
        public static ScanProfile CreateScanProfile(global::System.Int64 id, global::System.Guid uid, global::System.String name, global::System.Boolean isPredefined, global::System.Byte[] timeStamp)
        {
            ScanProfile scanProfile = new ScanProfile();
            scanProfile.Id = id;
            scanProfile.Uid = uid;
            scanProfile.Name = name;
            scanProfile.IsPredefined = isPredefined;
            scanProfile.TimeStamp = timeStamp;
            return scanProfile;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Uid
        {
            get
            {
                return _Uid;
            }
            set
            {
                OnUidChanging(value);
                ReportPropertyChanging("Uid");
                _Uid = StructuralObject.SetValidValue(value, "Uid");
                ReportPropertyChanged("Uid");
                OnUidChanged();
            }
        }
        private global::System.Guid _Uid;
        partial void OnUidChanging(global::System.Guid value);
        partial void OnUidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPredefined
        {
            get
            {
                return _IsPredefined;
            }
            set
            {
                OnIsPredefinedChanging(value);
                ReportPropertyChanging("IsPredefined");
                _IsPredefined = StructuralObject.SetValidValue(value, "IsPredefined");
                ReportPropertyChanged("IsPredefined");
                OnIsPredefinedChanged();
            }
        }
        private global::System.Boolean _IsPredefined;
        partial void OnIsPredefinedChanging(global::System.Boolean value);
        partial void OnIsPredefinedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] TimeStamp
        {
            get
            {
                return StructuralObject.GetValidValue(_TimeStamp);
            }
            set
            {
                OnTimeStampChanging(value);
                ReportPropertyChanging("TimeStamp");
                _TimeStamp = StructuralObject.SetValidValue(value, true, "TimeStamp");
                ReportPropertyChanged("TimeStamp");
                OnTimeStampChanged();
            }
        }
        private global::System.Byte[] _TimeStamp;
        partial void OnTimeStampChanging(global::System.Byte[] value);
        partial void OnTimeStampChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "ScanProfileLocations", "ScanLocations")]
        public EntityCollection<ScanLocation> ScanLocations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ScanLocation>("CrmEntitiesModel.ScanProfileLocations", "ScanLocations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ScanLocation>("CrmEntitiesModel.ScanProfileLocations", "ScanLocations", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="Sequence")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sequence : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Sequence object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        /// <param name="timeStamp">Initial value of the TimeStamp property.</param>
        /// <param name="isInternal">Initial value of the IsInternal property.</param>
        public static Sequence CreateSequence(global::System.Int64 id, global::System.String name, global::System.Boolean deleted, global::System.Byte[] timeStamp, global::System.Boolean isInternal)
        {
            Sequence sequence = new Sequence();
            sequence.Id = id;
            sequence.Name = name;
            sequence.Deleted = deleted;
            sequence.TimeStamp = timeStamp;
            sequence.IsInternal = isInternal;
            return sequence;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value, "Deleted");
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] TimeStamp
        {
            get
            {
                return StructuralObject.GetValidValue(_TimeStamp);
            }
            set
            {
                OnTimeStampChanging(value);
                ReportPropertyChanging("TimeStamp");
                _TimeStamp = StructuralObject.SetValidValue(value, true, "TimeStamp");
                ReportPropertyChanged("TimeStamp");
                OnTimeStampChanged();
            }
        }
        private global::System.Byte[] _TimeStamp;
        partial void OnTimeStampChanging(global::System.Byte[] value);
        partial void OnTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsInternal
        {
            get
            {
                return _IsInternal;
            }
            set
            {
                OnIsInternalChanging(value);
                ReportPropertyChanging("IsInternal");
                _IsInternal = StructuralObject.SetValidValue(value, "IsInternal");
                ReportPropertyChanged("IsInternal");
                OnIsInternalChanged();
            }
        }
        private global::System.Boolean _IsInternal;
        partial void OnIsInternalChanging(global::System.Boolean value);
        partial void OnIsInternalChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_SequenceActionsSequences", "SequenceActions")]
        public EntityCollection<SequenceAction> SequenceActions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SequenceAction>("CrmEntitiesModel.FK_SequenceActionsSequences", "SequenceActions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SequenceAction>("CrmEntitiesModel.FK_SequenceActionsSequences", "SequenceActions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_SequenceSequenceResult", "SequenceResults")]
        public EntityCollection<SequenceResult> SequenceResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SequenceResult>("CrmEntitiesModel.FK_SequenceSequenceResult", "SequenceResults");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SequenceResult>("CrmEntitiesModel.FK_SequenceSequenceResult", "SequenceResults", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_TasksSequences", "Tasks")]
        public EntityCollection<CrmTask> Tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CrmTask>("CrmEntitiesModel.FK_TasksSequences", "Tasks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CrmTask>("CrmEntitiesModel.FK_TasksSequences", "Tasks", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="SequenceAction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SequenceAction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SequenceAction object.
        /// </summary>
        /// <param name="sequenceId">Initial value of the SequenceId property.</param>
        /// <param name="factoryUid">Initial value of the FactoryUid property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        public static SequenceAction CreateSequenceAction(global::System.Int64 sequenceId, global::System.Guid factoryUid, global::System.Int64 id)
        {
            SequenceAction sequenceAction = new SequenceAction();
            sequenceAction.SequenceId = sequenceId;
            sequenceAction.FactoryUid = factoryUid;
            sequenceAction.Id = id;
            return sequenceAction;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SequenceId
        {
            get
            {
                return _SequenceId;
            }
            set
            {
                OnSequenceIdChanging(value);
                ReportPropertyChanging("SequenceId");
                _SequenceId = StructuralObject.SetValidValue(value, "SequenceId");
                ReportPropertyChanged("SequenceId");
                OnSequenceIdChanged();
            }
        }
        private global::System.Int64 _SequenceId;
        partial void OnSequenceIdChanging(global::System.Int64 value);
        partial void OnSequenceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid FactoryUid
        {
            get
            {
                return _FactoryUid;
            }
            set
            {
                OnFactoryUidChanging(value);
                ReportPropertyChanging("FactoryUid");
                _FactoryUid = StructuralObject.SetValidValue(value, "FactoryUid");
                ReportPropertyChanged("FactoryUid");
                OnFactoryUidChanged();
            }
        }
        private global::System.Guid _FactoryUid;
        partial void OnFactoryUidChanging(global::System.Guid value);
        partial void OnFactoryUidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] InputData
        {
            get
            {
                return StructuralObject.GetValidValue(_InputData);
            }
            set
            {
                OnInputDataChanging(value);
                ReportPropertyChanging("InputData");
                _InputData = StructuralObject.SetValidValue(value, true, "InputData");
                ReportPropertyChanged("InputData");
                OnInputDataChanged();
            }
        }
        private global::System.Byte[] _InputData;
        partial void OnInputDataChanging(global::System.Byte[] value);
        partial void OnInputDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_SequenceActionsSequences", "Sequences")]
        public Sequence Sequence
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sequence>("CrmEntitiesModel.FK_SequenceActionsSequences", "Sequences").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sequence>("CrmEntitiesModel.FK_SequenceActionsSequences", "Sequences").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sequence> SequenceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sequence>("CrmEntitiesModel.FK_SequenceActionsSequences", "Sequences");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sequence>("CrmEntitiesModel.FK_SequenceActionsSequences", "Sequences", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="SequenceResult")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SequenceResult : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SequenceResult object.
        /// </summary>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="ownerTaskResultId">Initial value of the OwnerTaskResultId property.</param>
        /// <param name="sequenceId">Initial value of the SequenceId property.</param>
        /// <param name="targetComputerId">Initial value of the TargetComputerId property.</param>
        /// <param name="isInternal">Initial value of the IsInternal property.</param>
        public static SequenceResult CreateSequenceResult(global::System.Int16 status, global::System.Int64 id, global::System.Int64 ownerTaskResultId, global::System.Int64 sequenceId, global::System.Int64 targetComputerId, global::System.Boolean isInternal)
        {
            SequenceResult sequenceResult = new SequenceResult();
            sequenceResult.Status = status;
            sequenceResult.Id = id;
            sequenceResult.OwnerTaskResultId = ownerTaskResultId;
            sequenceResult.SequenceId = sequenceId;
            sequenceResult.TargetComputerId = targetComputerId;
            sequenceResult.IsInternal = isInternal;
            return sequenceResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int16 _Status;
        partial void OnStatusChanging(global::System.Int16 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Started
        {
            get
            {
                return _Started;
            }
            set
            {
                OnStartedChanging(value);
                ReportPropertyChanging("Started");
                _Started = StructuralObject.SetValidValue(value, "Started");
                ReportPropertyChanged("Started");
                OnStartedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Started;
        partial void OnStartedChanging(Nullable<global::System.DateTime> value);
        partial void OnStartedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Completed
        {
            get
            {
                return _Completed;
            }
            set
            {
                OnCompletedChanging(value);
                ReportPropertyChanging("Completed");
                _Completed = StructuralObject.SetValidValue(value, "Completed");
                ReportPropertyChanged("Completed");
                OnCompletedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Completed;
        partial void OnCompletedChanging(Nullable<global::System.DateTime> value);
        partial void OnCompletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OwnerTaskResultId
        {
            get
            {
                return _OwnerTaskResultId;
            }
            set
            {
                OnOwnerTaskResultIdChanging(value);
                ReportPropertyChanging("OwnerTaskResultId");
                _OwnerTaskResultId = StructuralObject.SetValidValue(value, "OwnerTaskResultId");
                ReportPropertyChanged("OwnerTaskResultId");
                OnOwnerTaskResultIdChanged();
            }
        }
        private global::System.Int64 _OwnerTaskResultId;
        partial void OnOwnerTaskResultIdChanging(global::System.Int64 value);
        partial void OnOwnerTaskResultIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SequenceId
        {
            get
            {
                return _SequenceId;
            }
            set
            {
                OnSequenceIdChanging(value);
                ReportPropertyChanging("SequenceId");
                _SequenceId = StructuralObject.SetValidValue(value, "SequenceId");
                ReportPropertyChanged("SequenceId");
                OnSequenceIdChanged();
            }
        }
        private global::System.Int64 _SequenceId;
        partial void OnSequenceIdChanging(global::System.Int64 value);
        partial void OnSequenceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TargetComputerId
        {
            get
            {
                return _TargetComputerId;
            }
            set
            {
                OnTargetComputerIdChanging(value);
                ReportPropertyChanging("TargetComputerId");
                _TargetComputerId = StructuralObject.SetValidValue(value, "TargetComputerId");
                ReportPropertyChanged("TargetComputerId");
                OnTargetComputerIdChanged();
            }
        }
        private global::System.Int64 _TargetComputerId;
        partial void OnTargetComputerIdChanging(global::System.Int64 value);
        partial void OnTargetComputerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsInternal
        {
            get
            {
                return _IsInternal;
            }
            set
            {
                OnIsInternalChanging(value);
                ReportPropertyChanging("IsInternal");
                _IsInternal = StructuralObject.SetValidValue(value, "IsInternal");
                ReportPropertyChanged("IsInternal");
                OnIsInternalChanged();
            }
        }
        private global::System.Boolean _IsInternal;
        partial void OnIsInternalChanging(global::System.Boolean value);
        partial void OnIsInternalChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_SequenceResultActionResult", "ActionResults")]
        public EntityCollection<ActionResult> ActionResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ActionResult>("CrmEntitiesModel.FK_SequenceResultActionResult", "ActionResults");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ActionResult>("CrmEntitiesModel.FK_SequenceResultActionResult", "ActionResults", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_ComputerSequenceResult", "Computers")]
        public Computer Computer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_ComputerSequenceResult", "Computers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_ComputerSequenceResult", "Computers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Computer> ComputerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Computer>("CrmEntitiesModel.FK_ComputerSequenceResult", "Computers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Computer>("CrmEntitiesModel.FK_ComputerSequenceResult", "Computers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_SequenceSequenceResult", "Sequences")]
        public Sequence Sequence
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sequence>("CrmEntitiesModel.FK_SequenceSequenceResult", "Sequences").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sequence>("CrmEntitiesModel.FK_SequenceSequenceResult", "Sequences").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sequence> SequenceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sequence>("CrmEntitiesModel.FK_SequenceSequenceResult", "Sequences");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sequence>("CrmEntitiesModel.FK_SequenceSequenceResult", "Sequences", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_TaskResultSequenceResult", "TaskResults")]
        public TaskResult TaskResult
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskResult>("CrmEntitiesModel.FK_TaskResultSequenceResult", "TaskResults").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskResult>("CrmEntitiesModel.FK_TaskResultSequenceResult", "TaskResults").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TaskResult> TaskResultReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskResult>("CrmEntitiesModel.FK_TaskResultSequenceResult", "TaskResults");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TaskResult>("CrmEntitiesModel.FK_TaskResultSequenceResult", "TaskResults", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="Task")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CrmTask : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Task object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="modified">Initial value of the Modified property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="startFrom">Initial value of the StartFrom property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        /// <param name="freqType">Initial value of the FreqType property.</param>
        /// <param name="interval">Initial value of the Interval property.</param>
        /// <param name="domFilter">Initial value of the DomFilter property.</param>
        /// <param name="womFilter">Initial value of the WomFilter property.</param>
        /// <param name="dowFilter">Initial value of the DowFilter property.</param>
        /// <param name="moyFilter">Initial value of the MoyFilter property.</param>
        /// <param name="sequenceId">Initial value of the SequenceId property.</param>
        /// <param name="targetKind">Initial value of the TargetKind property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        /// <param name="timeStamp">Initial value of the TimeStamp property.</param>
        /// <param name="isInternal">Initial value of the IsInternal property.</param>
        public static CrmTask CreateTask(global::System.Int64 id, global::System.String name, global::System.DateTime created, global::System.DateTime modified, global::System.Boolean enabled, global::System.DateTime startFrom, global::System.Int64 startTime, global::System.Int16 freqType, global::System.Int32 interval, global::System.Int32 domFilter, global::System.Int32 womFilter, global::System.Int32 dowFilter, global::System.Int32 moyFilter, global::System.Int64 sequenceId, global::System.Int16 targetKind, global::System.Boolean deleted, global::System.Byte[] timeStamp, global::System.Boolean isInternal)
        {
            CrmTask task = new CrmTask();
            task.Id = id;
            task.Name = name;
            task.Created = created;
            task.Modified = modified;
            task.Enabled = enabled;
            task.StartFrom = startFrom;
            task.StartTime = startTime;
            task.FreqType = freqType;
            task.Interval = interval;
            task.DomFilter = domFilter;
            task.WomFilter = womFilter;
            task.DowFilter = dowFilter;
            task.MoyFilter = moyFilter;
            task.SequenceId = sequenceId;
            task.TargetKind = targetKind;
            task.Deleted = deleted;
            task.TimeStamp = timeStamp;
            task.IsInternal = isInternal;
            return task;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value, "Created");
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value, "Modified");
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private global::System.DateTime _Modified;
        partial void OnModifiedChanging(global::System.DateTime value);
        partial void OnModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value, "Enabled");
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartFrom
        {
            get
            {
                return _StartFrom;
            }
            set
            {
                OnStartFromChanging(value);
                ReportPropertyChanging("StartFrom");
                _StartFrom = StructuralObject.SetValidValue(value, "StartFrom");
                ReportPropertyChanged("StartFrom");
                OnStartFromChanged();
            }
        }
        private global::System.DateTime _StartFrom;
        partial void OnStartFromChanging(global::System.DateTime value);
        partial void OnStartFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value, "StartTime");
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.Int64 _StartTime;
        partial void OnStartTimeChanging(global::System.Int64 value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 FreqType
        {
            get
            {
                return _FreqType;
            }
            set
            {
                OnFreqTypeChanging(value);
                ReportPropertyChanging("FreqType");
                _FreqType = StructuralObject.SetValidValue(value, "FreqType");
                ReportPropertyChanged("FreqType");
                OnFreqTypeChanged();
            }
        }
        private global::System.Int16 _FreqType;
        partial void OnFreqTypeChanging(global::System.Int16 value);
        partial void OnFreqTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Interval
        {
            get
            {
                return _Interval;
            }
            set
            {
                OnIntervalChanging(value);
                ReportPropertyChanging("Interval");
                _Interval = StructuralObject.SetValidValue(value, "Interval");
                ReportPropertyChanged("Interval");
                OnIntervalChanged();
            }
        }
        private global::System.Int32 _Interval;
        partial void OnIntervalChanging(global::System.Int32 value);
        partial void OnIntervalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DomFilter
        {
            get
            {
                return _DomFilter;
            }
            set
            {
                OnDomFilterChanging(value);
                ReportPropertyChanging("DomFilter");
                _DomFilter = StructuralObject.SetValidValue(value, "DomFilter");
                ReportPropertyChanged("DomFilter");
                OnDomFilterChanged();
            }
        }
        private global::System.Int32 _DomFilter;
        partial void OnDomFilterChanging(global::System.Int32 value);
        partial void OnDomFilterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WomFilter
        {
            get
            {
                return _WomFilter;
            }
            set
            {
                OnWomFilterChanging(value);
                ReportPropertyChanging("WomFilter");
                _WomFilter = StructuralObject.SetValidValue(value, "WomFilter");
                ReportPropertyChanged("WomFilter");
                OnWomFilterChanged();
            }
        }
        private global::System.Int32 _WomFilter;
        partial void OnWomFilterChanging(global::System.Int32 value);
        partial void OnWomFilterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DowFilter
        {
            get
            {
                return _DowFilter;
            }
            set
            {
                OnDowFilterChanging(value);
                ReportPropertyChanging("DowFilter");
                _DowFilter = StructuralObject.SetValidValue(value, "DowFilter");
                ReportPropertyChanged("DowFilter");
                OnDowFilterChanged();
            }
        }
        private global::System.Int32 _DowFilter;
        partial void OnDowFilterChanging(global::System.Int32 value);
        partial void OnDowFilterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MoyFilter
        {
            get
            {
                return _MoyFilter;
            }
            set
            {
                OnMoyFilterChanging(value);
                ReportPropertyChanging("MoyFilter");
                _MoyFilter = StructuralObject.SetValidValue(value, "MoyFilter");
                ReportPropertyChanged("MoyFilter");
                OnMoyFilterChanged();
            }
        }
        private global::System.Int32 _MoyFilter;
        partial void OnMoyFilterChanging(global::System.Int32 value);
        partial void OnMoyFilterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SequenceId
        {
            get
            {
                return _SequenceId;
            }
            set
            {
                OnSequenceIdChanging(value);
                ReportPropertyChanging("SequenceId");
                _SequenceId = StructuralObject.SetValidValue(value, "SequenceId");
                ReportPropertyChanged("SequenceId");
                OnSequenceIdChanged();
            }
        }
        private global::System.Int64 _SequenceId;
        partial void OnSequenceIdChanging(global::System.Int64 value);
        partial void OnSequenceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 TargetKind
        {
            get
            {
                return _TargetKind;
            }
            set
            {
                OnTargetKindChanging(value);
                ReportPropertyChanging("TargetKind");
                _TargetKind = StructuralObject.SetValidValue(value, "TargetKind");
                ReportPropertyChanged("TargetKind");
                OnTargetKindChanged();
            }
        }
        private global::System.Int16 _TargetKind;
        partial void OnTargetKindChanging(global::System.Int16 value);
        partial void OnTargetKindChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value, "Deleted");
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] TimeStamp
        {
            get
            {
                return StructuralObject.GetValidValue(_TimeStamp);
            }
            set
            {
                OnTimeStampChanging(value);
                ReportPropertyChanging("TimeStamp");
                _TimeStamp = StructuralObject.SetValidValue(value, true, "TimeStamp");
                ReportPropertyChanged("TimeStamp");
                OnTimeStampChanged();
            }
        }
        private global::System.Byte[] _TimeStamp;
        partial void OnTimeStampChanging(global::System.Byte[] value);
        partial void OnTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsInternal
        {
            get
            {
                return _IsInternal;
            }
            set
            {
                OnIsInternalChanging(value);
                ReportPropertyChanging("IsInternal");
                _IsInternal = StructuralObject.SetValidValue(value, "IsInternal");
                ReportPropertyChanged("IsInternal");
                OnIsInternalChanged();
            }
        }
        private global::System.Boolean _IsInternal;
        partial void OnIsInternalChanging(global::System.Boolean value);
        partial void OnIsInternalChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_TasksSequences", "Sequences")]
        public Sequence Sequence
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sequence>("CrmEntitiesModel.FK_TasksSequences", "Sequences").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sequence>("CrmEntitiesModel.FK_TasksSequences", "Sequences").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sequence> SequenceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sequence>("CrmEntitiesModel.FK_TasksSequences", "Sequences");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sequence>("CrmEntitiesModel.FK_TasksSequences", "Sequences", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_TaskTaskResult", "TaskResults")]
        public EntityCollection<TaskResult> TaskResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaskResult>("CrmEntitiesModel.FK_TaskTaskResult", "TaskResults");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaskResult>("CrmEntitiesModel.FK_TaskTaskResult", "TaskResults", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "TaskComputerGroups", "ComputerGroups")]
        public EntityCollection<ComputerGroup> ComputerGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ComputerGroup>("CrmEntitiesModel.TaskComputerGroups", "ComputerGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ComputerGroup>("CrmEntitiesModel.TaskComputerGroups", "ComputerGroups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "TaskComputers", "Computers")]
        public EntityCollection<Computer> Computers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Computer>("CrmEntitiesModel.TaskComputers", "Computers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Computer>("CrmEntitiesModel.TaskComputers", "Computers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="TaskResult")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskResult : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TaskResult object.
        /// </summary>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="isInternal">Initial value of the IsInternal property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        public static TaskResult CreateTaskResult(global::System.Int16 status, global::System.Boolean isInternal, global::System.Int64 id)
        {
            TaskResult taskResult = new TaskResult();
            taskResult.Status = status;
            taskResult.IsInternal = isInternal;
            taskResult.Id = id;
            return taskResult;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int16 _Status;
        partial void OnStatusChanging(global::System.Int16 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Started
        {
            get
            {
                return _Started;
            }
            set
            {
                OnStartedChanging(value);
                ReportPropertyChanging("Started");
                _Started = StructuralObject.SetValidValue(value, "Started");
                ReportPropertyChanged("Started");
                OnStartedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Started;
        partial void OnStartedChanging(Nullable<global::System.DateTime> value);
        partial void OnStartedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Completed
        {
            get
            {
                return _Completed;
            }
            set
            {
                OnCompletedChanging(value);
                ReportPropertyChanging("Completed");
                _Completed = StructuralObject.SetValidValue(value, "Completed");
                ReportPropertyChanged("Completed");
                OnCompletedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Completed;
        partial void OnCompletedChanging(Nullable<global::System.DateTime> value);
        partial void OnCompletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ActualTaskName
        {
            get
            {
                return _ActualTaskName;
            }
            set
            {
                OnActualTaskNameChanging(value);
                ReportPropertyChanging("ActualTaskName");
                _ActualTaskName = StructuralObject.SetValidValue(value, true, "ActualTaskName");
                ReportPropertyChanged("ActualTaskName");
                OnActualTaskNameChanged();
            }
        }
        private global::System.String _ActualTaskName;
        partial void OnActualTaskNameChanging(global::System.String value);
        partial void OnActualTaskNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsInternal
        {
            get
            {
                return _IsInternal;
            }
            set
            {
                OnIsInternalChanging(value);
                ReportPropertyChanging("IsInternal");
                _IsInternal = StructuralObject.SetValidValue(value, "IsInternal");
                ReportPropertyChanged("IsInternal");
                OnIsInternalChanged();
            }
        }
        private global::System.Boolean _IsInternal;
        partial void OnIsInternalChanging(global::System.Boolean value);
        partial void OnIsInternalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> TaskId
        {
            get
            {
                return _TaskId;
            }
            set
            {
                OnTaskIdChanging(value);
                ReportPropertyChanging("TaskId");
                _TaskId = StructuralObject.SetValidValue(value, "TaskId");
                ReportPropertyChanged("TaskId");
                OnTaskIdChanged();
            }
        }
        private Nullable<global::System.Int64> _TaskId;
        partial void OnTaskIdChanging(Nullable<global::System.Int64> value);
        partial void OnTaskIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_TaskResultSequenceResult", "SequenceResults")]
        public EntityCollection<SequenceResult> SequenceResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SequenceResult>("CrmEntitiesModel.FK_TaskResultSequenceResult", "SequenceResults");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SequenceResult>("CrmEntitiesModel.FK_TaskResultSequenceResult", "SequenceResults", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_TaskTaskResult", "Tasks")]
        public CrmTask Task
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CrmTask>("CrmEntitiesModel.FK_TaskTaskResult", "Tasks").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CrmTask>("CrmEntitiesModel.FK_TaskTaskResult", "Tasks").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CrmTask> TaskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CrmTask>("CrmEntitiesModel.FK_TaskTaskResult", "Tasks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CrmTask>("CrmEntitiesModel.FK_TaskTaskResult", "Tasks", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="TileConfiguration")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TileConfiguration : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TileConfiguration object.
        /// </summary>
        /// <param name="configurationXml">Initial value of the ConfigurationXml property.</param>
        /// <param name="dataType">Initial value of the DataType property.</param>
        /// <param name="uid">Initial value of the Uid property.</param>
        public static TileConfiguration CreateTileConfiguration(global::System.String configurationXml, global::System.String dataType, global::System.Guid uid)
        {
            TileConfiguration tileConfiguration = new TileConfiguration();
            tileConfiguration.ConfigurationXml = configurationXml;
            tileConfiguration.DataType = dataType;
            tileConfiguration.Uid = uid;
            return tileConfiguration;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ConfigurationXml
        {
            get
            {
                return _ConfigurationXml;
            }
            set
            {
                OnConfigurationXmlChanging(value);
                ReportPropertyChanging("ConfigurationXml");
                _ConfigurationXml = StructuralObject.SetValidValue(value, false, "ConfigurationXml");
                ReportPropertyChanged("ConfigurationXml");
                OnConfigurationXmlChanged();
            }
        }
        private global::System.String _ConfigurationXml;
        partial void OnConfigurationXmlChanging(global::System.String value);
        partial void OnConfigurationXmlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DataType
        {
            get
            {
                return _DataType;
            }
            set
            {
                OnDataTypeChanging(value);
                ReportPropertyChanging("DataType");
                _DataType = StructuralObject.SetValidValue(value, false, "DataType");
                ReportPropertyChanged("DataType");
                OnDataTypeChanged();
            }
        }
        private global::System.String _DataType;
        partial void OnDataTypeChanging(global::System.String value);
        partial void OnDataTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Uid
        {
            get
            {
                return _Uid;
            }
            set
            {
                if (_Uid != value)
                {
                    OnUidChanging(value);
                    ReportPropertyChanging("Uid");
                    _Uid = StructuralObject.SetValidValue(value, "Uid");
                    ReportPropertyChanged("Uid");
                    OnUidChanged();
                }
            }
        }
        private global::System.Guid _Uid;
        partial void OnUidChanging(global::System.Guid value);
        partial void OnUidChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="TileLayout")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TileLayout : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TileLayout object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="layoutVersion">Initial value of the LayoutVersion property.</param>
        /// <param name="layoutXml">Initial value of the LayoutXml property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static TileLayout CreateTileLayout(global::System.Int64 id, global::System.Int32 layoutVersion, global::System.String layoutXml, global::System.String name)
        {
            TileLayout tileLayout = new TileLayout();
            tileLayout.Id = id;
            tileLayout.LayoutVersion = layoutVersion;
            tileLayout.LayoutXml = layoutXml;
            tileLayout.Name = name;
            return tileLayout;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LayoutVersion
        {
            get
            {
                return _LayoutVersion;
            }
            set
            {
                OnLayoutVersionChanging(value);
                ReportPropertyChanging("LayoutVersion");
                _LayoutVersion = StructuralObject.SetValidValue(value, "LayoutVersion");
                ReportPropertyChanged("LayoutVersion");
                OnLayoutVersionChanged();
            }
        }
        private global::System.Int32 _LayoutVersion;
        partial void OnLayoutVersionChanging(global::System.Int32 value);
        partial void OnLayoutVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LayoutXml
        {
            get
            {
                return _LayoutXml;
            }
            set
            {
                OnLayoutXmlChanging(value);
                ReportPropertyChanging("LayoutXml");
                _LayoutXml = StructuralObject.SetValidValue(value, false, "LayoutXml");
                ReportPropertyChanged("LayoutXml");
                OnLayoutXmlChanged();
            }
        }
        private global::System.String _LayoutXml;
        partial void OnLayoutXmlChanging(global::System.String value);
        partial void OnLayoutXmlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CrmEntitiesModel", Name="TopTenMalwaresReportDataSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TopTenMalwaresReportDataSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TopTenMalwaresReportDataSet object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="reportId">Initial value of the ReportId property.</param>
        /// <param name="computerId">Initial value of the ComputerId property.</param>
        /// <param name="hasData">Initial value of the HasData property.</param>
        public static TopTenMalwaresReportDataSet CreateTopTenMalwaresReportDataSet(global::System.Int32 id, global::System.Guid reportId, global::System.Int64 computerId, global::System.Boolean hasData)
        {
            TopTenMalwaresReportDataSet topTenMalwaresReportDataSet = new TopTenMalwaresReportDataSet();
            topTenMalwaresReportDataSet.Id = id;
            topTenMalwaresReportDataSet.ReportId = reportId;
            topTenMalwaresReportDataSet.ComputerId = computerId;
            topTenMalwaresReportDataSet.HasData = hasData;
            return topTenMalwaresReportDataSet;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReportId
        {
            get
            {
                return _ReportId;
            }
            set
            {
                OnReportIdChanging(value);
                ReportPropertyChanging("ReportId");
                _ReportId = StructuralObject.SetValidValue(value, "ReportId");
                ReportPropertyChanged("ReportId");
                OnReportIdChanged();
            }
        }
        private global::System.Guid _ReportId;
        partial void OnReportIdChanging(global::System.Guid value);
        partial void OnReportIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ComputerName
        {
            get
            {
                return _ComputerName;
            }
            set
            {
                OnComputerNameChanging(value);
                ReportPropertyChanging("ComputerName");
                _ComputerName = StructuralObject.SetValidValue(value, true, "ComputerName");
                ReportPropertyChanged("ComputerName");
                OnComputerNameChanged();
            }
        }
        private global::System.String _ComputerName;
        partial void OnComputerNameChanging(global::System.String value);
        partial void OnComputerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ComputerIPAddess
        {
            get
            {
                return _ComputerIPAddess;
            }
            set
            {
                OnComputerIPAddessChanging(value);
                ReportPropertyChanging("ComputerIPAddess");
                _ComputerIPAddess = StructuralObject.SetValidValue(value, true, "ComputerIPAddess");
                ReportPropertyChanged("ComputerIPAddess");
                OnComputerIPAddessChanged();
            }
        }
        private global::System.String _ComputerIPAddess;
        partial void OnComputerIPAddessChanging(global::System.String value);
        partial void OnComputerIPAddessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GroupName
        {
            get
            {
                return _GroupName;
            }
            set
            {
                OnGroupNameChanging(value);
                ReportPropertyChanging("GroupName");
                _GroupName = StructuralObject.SetValidValue(value, true, "GroupName");
                ReportPropertyChanged("GroupName");
                OnGroupNameChanged();
            }
        }
        private global::System.String _GroupName;
        partial void OnGroupNameChanging(global::System.String value);
        partial void OnGroupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MalwareName
        {
            get
            {
                return _MalwareName;
            }
            set
            {
                OnMalwareNameChanging(value);
                ReportPropertyChanging("MalwareName");
                _MalwareName = StructuralObject.SetValidValue(value, true, "MalwareName");
                ReportPropertyChanged("MalwareName");
                OnMalwareNameChanged();
            }
        }
        private global::System.String _MalwareName;
        partial void OnMalwareNameChanging(global::System.String value);
        partial void OnMalwareNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MalwareLocation
        {
            get
            {
                return _MalwareLocation;
            }
            set
            {
                OnMalwareLocationChanging(value);
                ReportPropertyChanging("MalwareLocation");
                _MalwareLocation = StructuralObject.SetValidValue(value, true, "MalwareLocation");
                ReportPropertyChanged("MalwareLocation");
                OnMalwareLocationChanged();
            }
        }
        private global::System.String _MalwareLocation;
        partial void OnMalwareLocationChanging(global::System.String value);
        partial void OnMalwareLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MalwareDate
        {
            get
            {
                return _MalwareDate;
            }
            set
            {
                OnMalwareDateChanging(value);
                ReportPropertyChanging("MalwareDate");
                _MalwareDate = StructuralObject.SetValidValue(value, "MalwareDate");
                ReportPropertyChanged("MalwareDate");
                OnMalwareDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _MalwareDate;
        partial void OnMalwareDateChanging(Nullable<global::System.DateTime> value);
        partial void OnMalwareDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MalwareAction
        {
            get
            {
                return _MalwareAction;
            }
            set
            {
                OnMalwareActionChanging(value);
                ReportPropertyChanging("MalwareAction");
                _MalwareAction = StructuralObject.SetValidValue(value, true, "MalwareAction");
                ReportPropertyChanged("MalwareAction");
                OnMalwareActionChanged();
            }
        }
        private global::System.String _MalwareAction;
        partial void OnMalwareActionChanging(global::System.String value);
        partial void OnMalwareActionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MalwareStatus
        {
            get
            {
                return _MalwareStatus;
            }
            set
            {
                OnMalwareStatusChanging(value);
                ReportPropertyChanging("MalwareStatus");
                _MalwareStatus = StructuralObject.SetValidValue(value, true, "MalwareStatus");
                ReportPropertyChanged("MalwareStatus");
                OnMalwareStatusChanged();
            }
        }
        private global::System.String _MalwareStatus;
        partial void OnMalwareStatusChanging(global::System.String value);
        partial void OnMalwareStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ComputerId
        {
            get
            {
                return _ComputerId;
            }
            set
            {
                OnComputerIdChanging(value);
                ReportPropertyChanging("ComputerId");
                _ComputerId = StructuralObject.SetValidValue(value, "ComputerId");
                ReportPropertyChanged("ComputerId");
                OnComputerIdChanged();
            }
        }
        private global::System.Int64 _ComputerId;
        partial void OnComputerIdChanging(global::System.Int64 value);
        partial void OnComputerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasData
        {
            get
            {
                return _HasData;
            }
            set
            {
                OnHasDataChanging(value);
                ReportPropertyChanging("HasData");
                _HasData = StructuralObject.SetValidValue(value, "HasData");
                ReportPropertyChanged("HasData");
                OnHasDataChanged();
            }
        }
        private global::System.Boolean _HasData;
        partial void OnHasDataChanging(global::System.Boolean value);
        partial void OnHasDataChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CrmEntitiesModel", "FK_TopTenMalwaresReportDataReport", "Reports")]
        public Report Report
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_TopTenMalwaresReportDataReport", "Reports").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_TopTenMalwaresReportDataReport", "Reports").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Report> ReportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("CrmEntitiesModel.FK_TopTenMalwaresReportDataReport", "Reports");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Report>("CrmEntitiesModel.FK_TopTenMalwaresReportDataReport", "Reports", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
